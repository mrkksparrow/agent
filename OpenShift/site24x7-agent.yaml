---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: site24x7
  namespace: default
automountServiceAccountToken: true
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: site24x7
rules:
- apiGroups: [""]
  resources:
  - configmaps
  - secrets
  - nodes
  - pods
  - services
  - resourcequotas
  - replicationcontrollers
  - limitranges
  - persistentvolumeclaims
  - persistentvolumes
  - namespaces
  - endpoints
  - componentstatuses
  - events
  verbs: ["list", "watch"]
- apiGroups: ["extensions"]
  resources:
  - daemonsets
  - deployments
  - replicasets
  - ingresses
  verbs: ["list", "watch"]
- apiGroups: ["apps"]
  resources:
  - daemonsets
  - deployments
  - replicasets
  - statefulsets
  verbs: ["list", "watch"]
- apiGroups: ["events.k8s.io"]
  resources:
  - events
  verbs: ["list","watch"]
- apiGroups: ["batch"]
  resources:
  - cronjobs
  - jobs
  verbs: ["list", "watch"]
- apiGroups: ["autoscaling"]
  resources:
  - horizontalpodautoscalers
  verbs: ["list", "watch"]
- apiGroups: ["policy"]
  resources:
  - poddisruptionbudgets
  verbs: ["list", "watch"]
- apiGroups: ["certificates.k8s.io"]
  resources:
  - certificatesigningrequests
  verbs: ["list", "watch"]
- apiGroups:  # Kubelet connectivity
  - ""
  resources:
  - nodes/metrics
  - nodes/stats
  - nodes/metrics/cadvisor
  - nodes/proxy
  verbs:
  - get
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: site24x7
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: site24x7
subjects:
- kind: ServiceAccount
  name: site24x7
  namespace: default
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: site24x7-agent
  namespace: default
spec:
  selector:
    matchLabels:
      app: site24x7-agent
  updateStrategy:
      type: RollingUpdate # Only supported in Kubernetes version 1.6 or later.
  template:
    metadata:
      labels:
        app: site24x7-agent
      name: site24x7-agent
    spec:
      serviceAccountName: site24x7
      nodeSelector:
        kubernetes.io/os: linux 	
      containers:
      - image: site24x7/docker-agent:release1800
        imagePullPolicy: Always
        name: site24x7-agent
        env:
          - name: KEY
            value: <ur_device_key>
          - name: installer
            value: openshift
          - name: NODE_IP
            valueFrom:
              fieldRef:
                 fieldPath: status.hostIP
          #- name: CLUSTER_NAME
          #  value: TestCluster #Name of the kubernetes cluster
          #- name: http_proxy
          #  value: http://192.168.1.1:3128
          #- name: https_proxy
          #  value: https://192.168.1.1:3128
          #- name: API_SERVER_ENDPOINT_URL
          #  value: https://172.15.10.1:6443
          #- name: KUBE_STATE_METRICS_URL #http://<kube_state_metrics_pod_ip>:<kube_state_metrics_port>
          #  value: https://10.43.10.12:8080 #Only HTTP request is accepted
          #- name: KUBE_API_SERVER
          #  value: TestAPIServer
        securityContext:
          runAsNonRoot: false
          allowPrivilegedContainer: true
          privileged: true
        volumeMounts:
          - name: dockersocket
            mountPath: /var/run/docker.sock
          - name: procfs
            mountPath: /host/proc
            readOnly: true
          - name: sysfs
            mountPath: /host/sys/
            readOnly: true
          - name: varfs
            mountPath: /host/var/
            readOnly: true
          - name: etcfs
            mountPath: /host/etc/
            readOnly: true
      volumes:
        - hostPath:
            path: /var/run/docker.sock
          name: dockersocket
        - hostPath:
            path: /proc
          name: procfs
        - hostPath:
            path: /sys/
          name: sysfs
        - hostPath:
            path: /var/
          name: varfs
        - hostPath:
            path: /etc/
          name: etcfs
---
