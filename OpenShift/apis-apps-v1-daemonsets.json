{
  "kind": "DaemonSetList",
  "apiVersion": "apps/v1",
  "metadata": {
    "resourceVersion": "3025947"
  },
  "items": [
    {
      "metadata": {
        "name": "site24x7-agent",
        "namespace": "default",
        "uid": "1673daf3-b7e8-4c92-8b9e-10a4d6207015",
        "resourceVersion": "2364156",
        "generation": 1,
        "creationTimestamp": "2023-08-28T13:21:31Z",
        "labels": {
          "app": "site24x7-agent"
        },
        "annotations": {
          "deprecated.daemonset.template.generation": "1"
        },
        "managedFields": [
          {
            "manager": "Mozilla",
            "operation": "Update",
            "apiVersion": "apps/v1",
            "time": "2023-08-28T13:21:31Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:deprecated.daemonset.template.generation": {}
                },
                "f:labels": {
                  ".": {},
                  "f:app": {}
                }
              },
              "f:spec": {
                "f:revisionHistoryLimit": {},
                "f:selector": {},
                "f:template": {
                  "f:metadata": {
                    "f:labels": {
                      ".": {},
                      "f:app": {}
                    }
                  },
                  "f:spec": {
                    "f:containers": {
                      "k:{\"name\":\"site24x7-agent\"}": {
                        ".": {},
                        "f:env": {
                          ".": {},
                          "k:{\"name\":\"KEY\"}": {
                            ".": {},
                            "f:name": {},
                            "f:value": {}
                          },
                          "k:{\"name\":\"MY_NODE_NAME\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": {
                              ".": {},
                              "f:fieldRef": {}
                            }
                          },
                          "k:{\"name\":\"NODE_IP\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": {
                              ".": {},
                              "f:fieldRef": {}
                            }
                          },
                          "k:{\"name\":\"installer\"}": {
                            ".": {},
                            "f:name": {},
                            "f:value": {}
                          }
                        },
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:name": {},
                        "f:resources": {},
                        "f:securityContext": {
                          ".": {},
                          "f:privileged": {},
                          "f:runAsNonRoot": {}
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/host/etc/\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {},
                            "f:readOnly": {}
                          },
                          "k:{\"mountPath\":\"/host/proc\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {},
                            "f:readOnly": {}
                          },
                          "k:{\"mountPath\":\"/host/sys/\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {},
                            "f:readOnly": {}
                          },
                          "k:{\"mountPath\":\"/host/var/\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {},
                            "f:readOnly": {}
                          },
                          "k:{\"mountPath\":\"/var/run/docker.sock\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        }
                      }
                    },
                    "f:dnsPolicy": {},
                    "f:nodeSelector": {},
                    "f:restartPolicy": {},
                    "f:schedulerName": {},
                    "f:securityContext": {},
                    "f:serviceAccount": {},
                    "f:serviceAccountName": {},
                    "f:terminationGracePeriodSeconds": {},
                    "f:tolerations": {},
                    "f:volumes": {
                      ".": {},
                      "k:{\"name\":\"dockersocket\"}": {
                        ".": {},
                        "f:hostPath": {
                          ".": {},
                          "f:path": {},
                          "f:type": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"etcfs\"}": {
                        ".": {},
                        "f:hostPath": {
                          ".": {},
                          "f:path": {},
                          "f:type": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"procfs\"}": {
                        ".": {},
                        "f:hostPath": {
                          ".": {},
                          "f:path": {},
                          "f:type": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"sysfs\"}": {
                        ".": {},
                        "f:hostPath": {
                          ".": {},
                          "f:path": {},
                          "f:type": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"varfs\"}": {
                        ".": {},
                        "f:hostPath": {
                          ".": {},
                          "f:path": {},
                          "f:type": {}
                        },
                        "f:name": {}
                      }
                    }
                  }
                },
                "f:updateStrategy": {
                  "f:rollingUpdate": {
                    ".": {},
                    "f:maxSurge": {},
                    "f:maxUnavailable": {}
                  },
                  "f:type": {}
                }
              }
            }
          },
          {
            "manager": "kube-controller-manager",
            "operation": "Update",
            "apiVersion": "apps/v1",
            "time": "2023-08-28T13:21:34Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": {
                "f:currentNumberScheduled": {},
                "f:desiredNumberScheduled": {},
                "f:numberAvailable": {},
                "f:numberReady": {},
                "f:observedGeneration": {},
                "f:updatedNumberScheduled": {}
              }
            },
            "subresource": "status"
          }
        ]
      },
      "spec": {
        "selector": {
          "matchLabels": {
            "app": "site24x7-agent"
          }
        },
        "template": {
          "metadata": {
            "creationTimestamp": null,
            "labels": {
              "app": "site24x7-agent"
            }
          },
          "spec": {
            "volumes": [
              {
                "name": "dockersocket",
                "hostPath": {
                 "path": "/var/run/docker.sock",
                  "type": ""
                }
              },
              {
                "name": "procfs",
                "hostPath": {
                  "path": "/proc",
                  "type": ""
                }
              },
              {
                "name": "sysfs",
                "hostPath": {
                  "path": "/sys/",
                  "type": ""
                }
              },
              {
                "name": "varfs",
                "hostPath": {
                  "path": "/var/",
                  "type": ""
                }
              },
              {
                "name": "etcfs",
                "hostPath": {
                  "path": "/etc/",
                  "type": ""
                }
              }
            ],
            "containers": [
              {
                "name": "site24x7-agent",
                "image": "mkav2k/source-agent-image:latest",
                "env": [
                  {
                    "name": "KEY",
                    "value": "us_ce8e93c6220201efb4321b683fbbf37c"
                  },
                  {
                    "name": "installer",
                    "value": "kubernetes"
                  },
                  {
                    "name": "NODE_IP",
                    "valueFrom": {
                      "fieldRef": {
                        "apiVersion": "v1",
                        "fieldPath": "status.hostIP"
                      }
                    }
                  },
                  {
                    "name": "MY_NODE_NAME",
                    "valueFrom": {
                      "fieldRef": {
                        "apiVersion": "v1",
                        "fieldPath": "spec.nodeName"
                      }
                    }
                  }
                ],
                "resources": {},
                "volumeMounts": [
                  {
                    "name": "dockersocket",
                    "mountPath": "/var/run/docker.sock"
                  },
                  {
                    "name": "procfs",
                    "readOnly": true,
                    "mountPath": "/host/proc"
                  },
                  {
                    "name": "sysfs",
                    "readOnly": true,
                    "mountPath": "/host/sys/"
                  },
                  {
                    "name": "varfs",
                    "readOnly": true,
                    "mountPath": "/host/var/"
                  },
                  {
                    "name": "etcfs",
                    "readOnly": true,
                    "mountPath": "/host/etc/"
                  }
                ],
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "imagePullPolicy": "Always",
                "securityContext": {
                  "privileged": true,
                  "runAsNonRoot": false
                }
              }
            ],
            "restartPolicy": "Always",
            "terminationGracePeriodSeconds": 30,
            "dnsPolicy": "ClusterFirst",
            "nodeSelector": {
              "beta.kubernetes.io/os": "linux"
            },
            "serviceAccountName": "site24x7",
            "serviceAccount": "site24x7",
            "securityContext": {},
            "schedulerName": "default-scheduler",
            "tolerations": [
              {
                "key": "node-role.kubernetes.io/master",
                "effect": "NoSchedule"
              }
            ]
          }
        },
        "updateStrategy": {
          "type": "RollingUpdate",
          "rollingUpdate": {
            "maxUnavailable": 1,
            "maxSurge": 0
          }
        },
        "revisionHistoryLimit": 10
      },
      "status": {
        "currentNumberScheduled": 5,
        "numberMisscheduled": 0,
        "desiredNumberScheduled": 5,
        "numberReady": 5,
        "observedGeneration": 1,
        "updatedNumberScheduled": 5,
        "numberAvailable": 5
      }
    },
    {
      "metadata": {
        "name": "aws-ebs-csi-driver-node",
        "namespace": "openshift-cluster-csi-drivers",
        "uid": "8395243c-5fb2-4dd0-a995-37ef842d33bf",
        "resourceVersion": "65375",
        "generation": 2,
        "creationTimestamp": "2023-08-25T07:45:33Z",
        "annotations": {
          "config.openshift.io/inject-proxy": "csi-driver",
          "config.openshift.io/inject-proxy-cabundle": "csi-driver",
          "deprecated.daemonset.template.generation": "2",
          "operator.openshift.io/dep-5d02b1dbbfd3b1124537c2229e410cd2adfa2": "O1lK1A==",
          "operator.openshift.io/spec-hash": "fa3b2e6b6481c4633acbfd86f394abce0043c1cae24e893ba9813d91ac411426"
        },
        "managedFields": [
          {
            "manager": "aws-ebs-csi-driver-operator",
            "operation": "Update",
            "apiVersion": "apps/v1",
            "time": "2023-08-25T07:45:36Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:config.openshift.io/inject-proxy": {},
                  "f:config.openshift.io/inject-proxy-cabundle": {},
                  "f:deprecated.daemonset.template.generation": {},
                  "f:operator.openshift.io/dep-5d02b1dbbfd3b1124537c2229e410cd2adfa2": {},
                  "f:operator.openshift.io/spec-hash": {}
                }
              },
              "f:spec": {
                "f:revisionHistoryLimit": {},
                "f:selector": {},
                "f:template": {
                  "f:metadata": {
                    "f:annotations": {
                      ".": {},
                      "f:operator.openshift.io/dep-5d02b1dbbfd3b1124537c2229e410cd2adfa2": {},
                      "f:target.workload.openshift.io/management": {}
                    },
                    "f:labels": {
                      ".": {},
                      "f:app": {}
                    }
                  },
                  "f:spec": {
                    "f:containers": {
                      "k:{\"name\":\"csi-driver\"}": {
                        ".": {},
                        "f:args": {},
                        "f:env": {
                          ".": {},
                          "k:{\"name\":\"CSI_ENDPOINT\"}": {
                            ".": {},
                            "f:name": {},
                            "f:value": {}
                          }
                        },
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:livenessProbe": {
                          ".": {},
                          "f:failureThreshold": {},
                          "f:httpGet": {
                            ".": {},
                            "f:path": {},
                            "f:port": {},
                            "f:scheme": {}
                          },
                          "f:initialDelaySeconds": {},
                          "f:periodSeconds": {},
                          "f:successThreshold": {},
                          "f:timeoutSeconds": {}
                        },
                        "f:name": {},
                        "f:ports": {
                          ".": {},
                          "k:{\"containerPort\":10300,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:hostPort": {},
                            "f:name": {},
                            "f:protocol": {}
                          }
                        },
                        "f:resources": {
                          ".": {},
                          "f:requests": {
                            ".": {},
                            "f:cpu": {},
                            "f:memory": {}
                          }
                        },
                        "f:securityContext": {
                          ".": {},
                          "f:privileged": {}
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/csi\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/dev\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/etc/pki/ca-trust/extracted/pem\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {},
                            "f:readOnly": {}
                          },
                          "k:{\"mountPath\":\"/etc/selinux\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/sys/fs\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/var/lib/kubelet\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:mountPropagation": {},
                            "f:name": {}
                          }
                        }
                      },
                      "k:{\"name\":\"csi-liveness-probe\"}": {
                        ".": {},
                        "f:args": {},
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:name": {},
                        "f:resources": {
                          ".": {},
                          "f:requests": {
                            ".": {},
                            "f:cpu": {},
                            "f:memory": {}
                          }
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/csi\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        }
                      },
                      "k:{\"name\":\"csi-node-driver-registrar\"}": {
                        ".": {},
                        "f:args": {},
                        "f:env": {
                          ".": {},
                          "k:{\"name\":\"ADDRESS\"}": {
                            ".": {},
                            "f:name": {},
                            "f:value": {}
                          },
                          "k:{\"name\":\"DRIVER_REG_SOCK_PATH\"}": {
                            ".": {},
                            "f:name": {},
                            "f:value": {}
                          }
                        },
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:lifecycle": {
                          ".": {},
                          "f:preStop": {
                            ".": {},
                            "f:exec": {
                              ".": {},
                              "f:command": {}
                            }
                          }
                        },
                        "f:name": {},
                        "f:resources": {
                          ".": {},
                          "f:requests": {
                            ".": {},
                            "f:cpu": {},
                            "f:memory": {}
                          }
                        },
                        "f:securityContext": {
                          ".": {},
                          "f:privileged": {}
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/csi\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/registration\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        }
                      }
                    },
                    "f:dnsPolicy": {},
                    "f:hostNetwork": {},
                    "f:nodeSelector": {},
                    "f:priorityClassName": {},
                    "f:restartPolicy": {},
                    "f:schedulerName": {},
                    "f:securityContext": {},
                    "f:serviceAccount": {},
                    "f:serviceAccountName": {},
                    "f:terminationGracePeriodSeconds": {},
                    "f:tolerations": {},
                    "f:volumes": {
                      ".": {},
                      "k:{\"name\":\"device-dir\"}": {
                        ".": {},
                        "f:hostPath": {
                          ".": {},
                          "f:path": {},
                          "f:type": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"etc-selinux\"}": {
                        ".": {},
                        "f:hostPath": {
                          ".": {},
                          "f:path": {},
                          "f:type": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"kubelet-dir\"}": {
                        ".": {},
                        "f:hostPath": {
                          ".": {},
                          "f:path": {},
                          "f:type": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"non-standard-root-system-trust-ca-bundle\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:items": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"plugin-dir\"}": {
                        ".": {},
                        "f:hostPath": {
                          ".": {},
                          "f:path": {},
                          "f:type": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"registration-dir\"}": {
                        ".": {},
                        "f:hostPath": {
                          ".": {},
                          "f:path": {},
                          "f:type": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"sys-fs\"}": {
                        ".": {},
                        "f:hostPath": {
                          ".": {},
                          "f:path": {},
                          "f:type": {}
                        },
                        "f:name": {}
                      }
                    }
                  }
                },
                "f:updateStrategy": {
                  "f:rollingUpdate": {
                    ".": {},
                    "f:maxSurge": {},
                    "f:maxUnavailable": {}
                  },
                  "f:type": {}
                }
              }
            }
          },
          {
            "manager": "kube-controller-manager",
            "operation": "Update",
            "apiVersion": "apps/v1",
            "time": "2023-08-25T08:20:08Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": {
                "f:currentNumberScheduled": {},
                "f:desiredNumberScheduled": {},
                "f:numberAvailable": {},
                "f:numberReady": {},
                "f:observedGeneration": {},
                "f:updatedNumberScheduled": {}
              }
            },
            "subresource": "status"
          }
        ]
      },
      "spec": {
        "selector": {
          "matchLabels": {
            "app": "aws-ebs-csi-driver-node"
          }
        },
        "template": {
          "metadata": {
            "creationTimestamp": null,
            "labels": {
              "app": "aws-ebs-csi-driver-node"
            },
            "annotations": {
              "operator.openshift.io/dep-5d02b1dbbfd3b1124537c2229e410cd2adfa2": "O1lK1A==",
              "target.workload.openshift.io/management": "{\"effect\": \"PreferredDuringScheduling\"}"
            }
          },
          "spec": {
            "volumes": [
              {
                "name": "kubelet-dir",
                "hostPath": {
                  "path": "/var/lib/kubelet",
                  "type": "Directory"
                }
              },
              {
                "name": "plugin-dir",
                "hostPath": {
                  "path": "/var/lib/kubelet/plugins/ebs.csi.aws.com/",
                  "type": "DirectoryOrCreate"
                }
              },
              {
                "name": "registration-dir",
                "hostPath": {
                  "path": "/var/lib/kubelet/plugins_registry/",
                  "type": "Directory"
                }
              },
              {
                "name": "device-dir",
                "hostPath": {
                  "path": "/dev",
                  "type": "Directory"
                }
              },
              {
                "name": "etc-selinux",
                "hostPath": {
                  "path": "/etc/selinux",
                  "type": "DirectoryOrCreate"
                }
              },
              {
                "name": "sys-fs",
                "hostPath": {
                  "path": "/sys/fs",
                  "type": "Directory"
                }
              },
              {
                "name": "non-standard-root-system-trust-ca-bundle",
                "configMap": {
                  "name": "aws-ebs-csi-driver-trusted-ca-bundle",
                  "items": [
                    {
                      "key": "ca-bundle.crt",
                      "path": "tls-ca-bundle.pem"
                    }
                  ],
                  "defaultMode": 420
                }
              }
            ],
            "containers": [
              {
                "name": "csi-driver",
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:960642914cce33920d832da985336308b5f9394845616488c5bb6e9aac8f57b2",
                "args": [
                  "node",
                  "--endpoint=$(CSI_ENDPOINT)",
                  "--logtostderr",
                  "--v=2"
                ],
                "ports": [
                  {
                    "name": "healthz",
                    "hostPort": 10300,
                    "containerPort": 10300,
                    "protocol": "TCP"
                  }
                ],
                "env": [
                  {
                    "name": "CSI_ENDPOINT",
                    "value": "unix:/csi/csi.sock"
                  }
                ],
                "resources": {
                  "requests": {
                    "cpu": "10m",
                    "memory": "50Mi"
                  }
                },
                "volumeMounts": [
                  {
                    "name": "kubelet-dir",
                    "mountPath": "/var/lib/kubelet",
                    "mountPropagation": "Bidirectional"
                  },
                  {
                    "name": "plugin-dir",
                    "mountPath": "/csi"
                  },
                  {
                    "name": "device-dir",
                    "mountPath": "/dev"
                  },
                  {
                    "name": "etc-selinux",
                    "mountPath": "/etc/selinux"
                  },
                  {
                    "name": "sys-fs",
                    "mountPath": "/sys/fs"
                  },
                  {
                    "name": "non-standard-root-system-trust-ca-bundle",
                    "readOnly": true,
                    "mountPath": "/etc/pki/ca-trust/extracted/pem"
                  }
                ],
                "livenessProbe": {
                  "httpGet": {
                    "path": "/healthz",
                    "port": "healthz",
                    "scheme": "HTTP"
                  },
                  "initialDelaySeconds": 10,
                  "timeoutSeconds": 3,
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "failureThreshold": 5
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "imagePullPolicy": "IfNotPresent",
                "securityContext": {
                  "privileged": true
                }
              },
              {
                "name": "csi-node-driver-registrar",
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:4a6bb809c02ef8d4dcfb7f96f9522c2b61a56a0beba87d4d4007d42a16663da5",
                "args": [
                  "--csi-address=$(ADDRESS)",
                  "--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)",
                  "--v=2"
                ],
                "env": [
                  {
                    "name": "ADDRESS",
                    "value": "/csi/csi.sock"
                  },
                  {
                    "name": "DRIVER_REG_SOCK_PATH",
                    "value": "/var/lib/kubelet/plugins/ebs.csi.aws.com/csi.sock"
                  }
                ],
                "resources": {
                  "requests": {
                    "cpu": "10m",
                    "memory": "50Mi"
                  }
                },
                "volumeMounts": [
                  {
                    "name": "plugin-dir",
                    "mountPath": "/csi"
                  },
                  {
                    "name": "registration-dir",
                    "mountPath": "/registration"
                  }
                ],
                "lifecycle": {
                  "preStop": {
                    "exec": {
                      "command": [
                        "/bin/sh",
                        "-c",
                        "rm -rf /registration/ebs.csi.aws.com-reg.sock /csi/csi.sock"
                      ]
                    }
                  }
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "imagePullPolicy": "IfNotPresent",
                "securityContext": {
                  "privileged": true
                }
              },
              {
                "name": "csi-liveness-probe",
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:c0e0056a6e1ec8722e201946cea4cf5c977fc872ee245656b8a81b720ef6e905",
                "args": [
                  "--csi-address=/csi/csi.sock",
                  "--probe-timeout=3s",
                  "--health-port=10300",
                  "--v=2"
                ],
                "resources": {
                  "requests": {
                    "cpu": "10m",
                    "memory": "50Mi"
                  }
                },
                "volumeMounts": [
                  {
                    "name": "plugin-dir",
                    "mountPath": "/csi"
                  }
                ],
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "imagePullPolicy": "IfNotPresent"
              }
            ],
            "restartPolicy": "Always",
            "terminationGracePeriodSeconds": 30,
            "dnsPolicy": "ClusterFirst",
            "nodeSelector": {
              "kubernetes.io/os": "linux"
            },
            "serviceAccountName": "aws-ebs-csi-driver-node-sa",
            "serviceAccount": "aws-ebs-csi-driver-node-sa",
            "hostNetwork": true,
            "securityContext": {},
            "schedulerName": "default-scheduler",
            "tolerations": [
              {
                "operator": "Exists"
              }
            ],
            "priorityClassName": "system-node-critical"
          }
        },
        "updateStrategy": {
          "type": "RollingUpdate",
          "rollingUpdate": {
            "maxUnavailable": "10%",
            "maxSurge": 0
          }
        },
        "revisionHistoryLimit": 10
      },
      "status": {
        "currentNumberScheduled": 7,
        "numberMisscheduled": 0,
        "desiredNumberScheduled": 7,
        "numberReady": 7,
        "observedGeneration": 2,
        "updatedNumberScheduled": 7,
        "numberAvailable": 7
      }
    },
    {
      "metadata": {
        "name": "tuned",
        "namespace": "openshift-cluster-node-tuning-operator",
        "uid": "b25e555d-f912-4fe2-9d79-671f43238c85",
        "resourceVersion": "65396",
        "generation": 1,
        "creationTimestamp": "2023-08-25T07:46:39Z",
        "labels": {
          "openshift-app": "tuned"
        },
        "annotations": {
          "deprecated.daemonset.template.generation": "1"
        },
        "ownerReferences": [
          {
            "apiVersion": "tuned.openshift.io/v1",
            "kind": "Tuned",
            "name": "default",
            "uid": "67dfd0ad-f70d-4ffe-ae52-89a31d1f3b42",
            "controller": true,
            "blockOwnerDeletion": true
          }
        ],
        "managedFields": [
          {
            "manager": "cluster-node-tuning-operator",
            "operation": "Update",
            "apiVersion": "apps/v1",
            "time": "2023-08-25T07:46:39Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:deprecated.daemonset.template.generation": {}
                },
                "f:labels": {
                  ".": {},
                  "f:openshift-app": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"67dfd0ad-f70d-4ffe-ae52-89a31d1f3b42\"}": {}
                }
              },
              "f:spec": {
                "f:revisionHistoryLimit": {},
                "f:selector": {},
                "f:template": {
                  "f:metadata": {
                    "f:annotations": {
                      ".": {},
                      "f:target.workload.openshift.io/management": {}
                    },
                    "f:labels": {
                      ".": {},
                      "f:openshift-app": {}
                    }
                  },
                  "f:spec": {
                    "f:containers": {
                      "k:{\"name\":\"tuned\"}": {
                        ".": {},
                        "f:command": {},
                        "f:env": {
                          ".": {},
                          "k:{\"name\":\"OCP_NODE_NAME\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": {
                              ".": {},
                              "f:fieldRef": {}
                            }
                          },
                          "k:{\"name\":\"RELEASE_VERSION\"}": {
                            ".": {},
                            "f:name": {},
                            "f:value": {}
                          },
                          "k:{\"name\":\"RESYNC_PERIOD\"}": {
                            ".": {},
                            "f:name": {},
                            "f:value": {}
                          },
                          "k:{\"name\":\"WATCH_NAMESPACE\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": {
                              ".": {},
                              "f:fieldRef": {}
                            }
                          }
                        },
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:name": {},
                        "f:resources": {
                          ".": {},
                          "f:requests": {
                            ".": {},
                            "f:cpu": {},
                            "f:memory": {}
                          }
                        },
                        "f:securityContext": {
                          ".": {},
                          "f:privileged": {}
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/etc/modprobe.d\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:mountPropagation": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/etc/sysconfig\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/etc/sysctl.conf\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:mountPropagation": {},
                            "f:name": {},
                            "f:readOnly": {}
                          },
                          "k:{\"mountPath\":\"/etc/sysctl.d\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:mountPropagation": {},
                            "f:name": {},
                            "f:readOnly": {}
                          },
                          "k:{\"mountPath\":\"/etc/systemd\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:mountPropagation": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/host\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:mountPropagation": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/lib/modules\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:mountPropagation": {},
                            "f:name": {},
                            "f:readOnly": {}
                          },
                          "k:{\"mountPath\":\"/run/systemd/system\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:mountPropagation": {},
                            "f:name": {},
                            "f:readOnly": {}
                          },
                          "k:{\"mountPath\":\"/sys\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:mountPropagation": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/var/lib/tuned/profiles-data\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:mountPropagation": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/var/run/dbus\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:mountPropagation": {},
                            "f:name": {},
                            "f:readOnly": {}
                          }
                        }
                      }
                    },
                    "f:dnsPolicy": {},
                    "f:hostIPC": {},
                    "f:hostNetwork": {},
                    "f:hostPID": {},
                    "f:nodeSelector": {},
                    "f:priorityClassName": {},
                    "f:restartPolicy": {},
                    "f:schedulerName": {},
                    "f:securityContext": {},
                    "f:serviceAccount": {},
                    "f:serviceAccountName": {},
                    "f:terminationGracePeriodSeconds": {},
                    "f:tolerations": {},
                    "f:volumes": {
                      ".": {},
                      "k:{\"name\":\"etc-modprobe-d\"}": {
                        ".": {},
                        "f:hostPath": {
                          ".": {},
                          "f:path": {},
                          "f:type": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"etc-sysconfig\"}": {
                        ".": {},
                        "f:hostPath": {
                          ".": {},
                          "f:path": {},
                          "f:type": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"etc-sysctl-conf\"}": {
                        ".": {},
                        "f:hostPath": {
                          ".": {},
                          "f:path": {},
                          "f:type": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"etc-sysctl-d\"}": {
                        ".": {},
                        "f:hostPath": {
                          ".": {},
                          "f:path": {},
                          "f:type": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"etc-systemd\"}": {
                        ".": {},
                        "f:hostPath": {
                          ".": {},
                          "f:path": {},
                          "f:type": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"host\"}": {
                        ".": {},
                        "f:hostPath": {
                          ".": {},
                          "f:path": {},
                          "f:type": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"lib-modules\"}": {
                        ".": {},
                        "f:hostPath": {
                          ".": {},
                          "f:path": {},
                          "f:type": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"run-systemd-system\"}": {
                        ".": {},
                        "f:hostPath": {
                          ".": {},
                          "f:path": {},
                          "f:type": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"sys\"}": {
                        ".": {},
                        "f:hostPath": {
                          ".": {},
                          "f:path": {},
                          "f:type": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"var-lib-tuned-profiles-data\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:items": {},
                          "f:name": {},
                          "f:optional": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"var-run-dbus\"}": {
                        ".": {},
                        "f:hostPath": {
                          ".": {},
                          "f:path": {},
                          "f:type": {}
                        },
                        "f:name": {}
                      }
                    }
                  }
                },
                "f:updateStrategy": {
                  "f:rollingUpdate": {
                    ".": {},
                    "f:maxSurge": {},
                    "f:maxUnavailable": {}
                  },
                  "f:type": {}
                }
              }
            }
          },
          {
            "manager": "kube-controller-manager",
            "operation": "Update",
            "apiVersion": "apps/v1",
            "time": "2023-08-25T08:20:09Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": {
                "f:currentNumberScheduled": {},
                "f:desiredNumberScheduled": {},
                "f:numberAvailable": {},
                "f:numberReady": {},
                "f:observedGeneration": {},
                "f:updatedNumberScheduled": {}
              }
            },
            "subresource": "status"
          }
        ]
      },
      "spec": {
        "selector": {
          "matchLabels": {
            "openshift-app": "tuned"
          }
        },
        "template": {
          "metadata": {
            "creationTimestamp": null,
            "labels": {
              "openshift-app": "tuned"
            },
            "annotations": {
              "target.workload.openshift.io/management": "{\"effect\": \"PreferredDuringScheduling\"}"
            }
          },
          "spec": {
            "volumes": [
              {
                "name": "etc-modprobe-d",
                "hostPath": {
                  "path": "/etc/modprobe.d",
                  "type": "Directory"
                }
              },
              {
                "name": "etc-sysconfig",
                "hostPath": {
                  "path": "/etc/sysconfig",
                  "type": "Directory"
                }
              },
              {
                "name": "etc-sysctl-d",
                "hostPath": {
                  "path": "/etc/sysctl.d",
                  "type": "Directory"
                }
              },
              {
                "name": "etc-sysctl-conf",
                "hostPath": {
                  "path": "/etc/sysctl.conf",
                  "type": "File"
                }
              },
              {
                "name": "etc-systemd",
                "hostPath": {
                  "path": "/etc/systemd",
                  "type": "Directory"
                }
              },
              {
                "name": "sys",
                "hostPath": {
                  "path": "/sys",
                  "type": "Directory"
                }
              },
              {
                "name": "var-run-dbus",
                "hostPath": {
                  "path": "/var/run/dbus",
                  "type": "Directory"
                }
              },
              {
                "name": "run-systemd-system",
                "hostPath": {
                  "path": "/run/systemd/system",
                  "type": "Directory"
                }
              },
              {
                "name": "lib-modules",
                "hostPath": {
                  "path": "/lib/modules",
                  "type": "Directory"
                }
              },
              {
                "name": "host",
                "hostPath": {
                  "path": "/",
                  "type": "Directory"
                }
              },
              {
                "name": "var-lib-tuned-profiles-data",
                "configMap": {
                  "name": "tuned-profiles",
                  "items": [
                    {
                      "key": "tuned-profiles-data",
                      "path": "tuned-profiles.yaml"
                    }
                  ],
                  "defaultMode": 420,
                  "optional": true
                }
              }
            ],
            "containers": [
              {
                "name": "tuned",
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:bee238adb960117d10d7b6e84518d51691bf71d0d25efd754bcfe4d24486bd1d",
                "command": [
                  "/var/lib/tuned/bin/run",
                  "start"
                ],
                "env": [
                  {
                    "name": "WATCH_NAMESPACE",
                    "valueFrom": {
                      "fieldRef": {
                        "apiVersion": "v1",
                        "fieldPath": "metadata.namespace"
                      }
                    }
                  },
                  {
                    "name": "OCP_NODE_NAME",
                    "valueFrom": {
                      "fieldRef": {
                        "apiVersion": "v1",
                        "fieldPath": "spec.nodeName"
                      }
                    }
                  },
                  {
                    "name": "RESYNC_PERIOD",
                    "value": "600"
                  },
                  {
                    "name": "RELEASE_VERSION",
                    "value": "4.13.9"
                  }
                ],
                "resources": {
                  "requests": {
                    "cpu": "10m",
                    "memory": "50Mi"
                  }
                },
                "volumeMounts": [
                  {
                    "name": "var-lib-tuned-profiles-data",
                    "mountPath": "/var/lib/tuned/profiles-data",
                    "mountPropagation": "HostToContainer"
                  },
                  {
                    "name": "etc-modprobe-d",
                    "mountPath": "/etc/modprobe.d",
                    "mountPropagation": "HostToContainer"
                  },
                  {
                    "name": "etc-sysconfig",
                    "mountPath": "/etc/sysconfig"
                  },
                  {
                    "name": "etc-sysctl-d",
                    "readOnly": true,
                    "mountPath": "/etc/sysctl.d",
                    "mountPropagation": "HostToContainer"
                  },
                  {
                    "name": "etc-sysctl-conf",
                    "readOnly": true,
                    "mountPath": "/etc/sysctl.conf",
                    "mountPropagation": "HostToContainer"
                  },
                  {
                    "name": "etc-systemd",
                    "mountPath": "/etc/systemd",
                    "mountPropagation": "HostToContainer"
                  },
                  {
                    "name": "sys",
                    "mountPath": "/sys",
                    "mountPropagation": "HostToContainer"
                  },
                  {
                    "name": "var-run-dbus",
                    "readOnly": true,
                    "mountPath": "/var/run/dbus",
                    "mountPropagation": "HostToContainer"
                  },
                  {
                    "name": "run-systemd-system",
                    "readOnly": true,
                    "mountPath": "/run/systemd/system",
                    "mountPropagation": "HostToContainer"
                  },
                  {
                    "name": "lib-modules",
                    "readOnly": true,
                    "mountPath": "/lib/modules",
                    "mountPropagation": "HostToContainer"
                  },
                  {
                    "name": "host",
                    "mountPath": "/host",
                    "mountPropagation": "HostToContainer"
                  }
                ],
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "FallbackToLogsOnError",
                "imagePullPolicy": "IfNotPresent",
                "securityContext": {
                  "privileged": true
                }
              }
            ],
            "restartPolicy": "Always",
            "terminationGracePeriodSeconds": 30,
            "dnsPolicy": "ClusterFirst",
            "nodeSelector": {
              "kubernetes.io/os": "linux"
            },
            "serviceAccountName": "tuned",
            "serviceAccount": "tuned",
            "hostNetwork": true,
            "hostPID": true,
            "hostIPC": true,
            "securityContext": {},
            "schedulerName": "default-scheduler",
            "tolerations": [
              {
                "operator": "Exists"
              }
            ],
            "priorityClassName": "system-node-critical"
          }
        },
        "updateStrategy": {
          "type": "RollingUpdate",
          "rollingUpdate": {
            "maxUnavailable": "10%",
            "maxSurge": 0
          }
        },
        "revisionHistoryLimit": 10
      },
      "status": {
        "currentNumberScheduled": 7,
        "numberMisscheduled": 0,
        "desiredNumberScheduled": 7,
        "numberReady": 7,
        "observedGeneration": 1,
        "updatedNumberScheduled": 7,
        "numberAvailable": 7
      }
    },
    {
      "metadata": {
        "name": "dns-default",
        "namespace": "openshift-dns",
        "uid": "399d35af-728d-4fa7-9081-ec780f8b96a7",
        "resourceVersion": "63483",
        "generation": 1,
        "creationTimestamp": "2023-08-25T07:46:01Z",
        "labels": {
          "dns.operator.openshift.io/owning-dns": "default"
        },
        "annotations": {
          "deprecated.daemonset.template.generation": "1"
        },
        "ownerReferences": [
          {
            "apiVersion": "operator.openshift.io/v1",
            "kind": "DNS",
            "name": "default",
            "uid": "99999e34-5a45-459d-aa64-65212e33e8c0",
            "controller": true
          }
        ],
        "managedFields": [
          {
            "manager": "dns-operator",
            "operation": "Update",
            "apiVersion": "apps/v1",
            "time": "2023-08-25T07:46:01Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:deprecated.daemonset.template.generation": {}
                },
                "f:labels": {
                  ".": {},
                  "f:dns.operator.openshift.io/owning-dns": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"99999e34-5a45-459d-aa64-65212e33e8c0\"}": {}
                }
              },
              "f:spec": {
                "f:revisionHistoryLimit": {},
                "f:selector": {},
                "f:template": {
                  "f:metadata": {
                    "f:annotations": {
                      ".": {},
                      "f:cluster-autoscaler.kubernetes.io/enable-ds-eviction": {},
                      "f:target.workload.openshift.io/management": {}
                    },
                    "f:labels": {
                      ".": {},
                      "f:dns.operator.openshift.io/daemonset-dns": {}
                    }
                  },
                  "f:spec": {
                    "f:containers": {
                      "k:{\"name\":\"dns\"}": {
                        ".": {},
                        "f:args": {},
                        "f:command": {},
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:livenessProbe": {
                          ".": {},
                          "f:failureThreshold": {},
                          "f:httpGet": {
                            ".": {},
                            "f:path": {},
                            "f:port": {},
                            "f:scheme": {}
                          },
                          "f:initialDelaySeconds": {},
                          "f:periodSeconds": {},
                          "f:successThreshold": {},
                          "f:timeoutSeconds": {}
                        },
                        "f:name": {},
                        "f:ports": {
                          ".": {},
                          "k:{\"containerPort\":5353,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:name": {},
                            "f:protocol": {}
                          },
                          "k:{\"containerPort\":5353,\"protocol\":\"UDP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:name": {},
                            "f:protocol": {}
                          }
                        },
                        "f:readinessProbe": {
                          ".": {},
                          "f:failureThreshold": {},
                          "f:httpGet": {
                            ".": {},
                            "f:path": {},
                            "f:port": {},
                            "f:scheme": {}
                          },
                          "f:initialDelaySeconds": {},
                          "f:periodSeconds": {},
                          "f:successThreshold": {},
                          "f:timeoutSeconds": {}
                        },
                        "f:resources": {
                          ".": {},
                          "f:requests": {
                            ".": {},
                            "f:cpu": {},
                            "f:memory": {}
                          }
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/etc/coredns\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {},
                            "f:readOnly": {}
                          }
                        }
                      },
                      "k:{\"name\":\"kube-rbac-proxy\"}": {
                        ".": {},
                        "f:args": {},
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:name": {},
                        "f:ports": {
                          ".": {},
                          "k:{\"containerPort\":9154,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:name": {},
                            "f:protocol": {}
                          }
                        },
                        "f:resources": {
                          ".": {},
                          "f:requests": {
                            ".": {},
                            "f:cpu": {},
                            "f:memory": {}
                          }
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/etc/tls/private\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {},
                            "f:readOnly": {}
                          }
                        }
                      }
                    },
                    "f:dnsPolicy": {},
                    "f:nodeSelector": {},
                    "f:priorityClassName": {},
                    "f:restartPolicy": {},
                    "f:schedulerName": {},
                    "f:securityContext": {},
                    "f:serviceAccount": {},
                    "f:serviceAccountName": {},
                    "f:terminationGracePeriodSeconds": {},
                    "f:tolerations": {},
                    "f:volumes": {
                      ".": {},
                      "k:{\"name\":\"config-volume\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:items": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"metrics-tls\"}": {
                        ".": {},
                        "f:name": {},
                        "f:secret": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:secretName": {}
                        }
                      }
                    }
                  }
                },
                "f:updateStrategy": {
                  "f:rollingUpdate": {
                    ".": {},
                    "f:maxSurge": {},
                    "f:maxUnavailable": {}
                  },
                  "f:type": {}
                }
              }
            }
          },
          {
            "manager": "kube-controller-manager",
            "operation": "Update",
            "apiVersion": "apps/v1",
            "time": "2023-08-25T08:18:15Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": {
                "f:currentNumberScheduled": {},
                "f:desiredNumberScheduled": {},
                "f:numberAvailable": {},
                "f:numberMisscheduled": {},
                "f:numberReady": {},
                "f:observedGeneration": {},
                "f:updatedNumberScheduled": {}
              }
            },
            "subresource": "status"
          }
        ]
      },
      "spec": {
        "selector": {
          "matchLabels": {
            "dns.operator.openshift.io/daemonset-dns": "default"
          }
        },
        "template": {
          "metadata": {
            "creationTimestamp": null,
            "labels": {
              "dns.operator.openshift.io/daemonset-dns": "default"
            },
            "annotations": {
              "cluster-autoscaler.kubernetes.io/enable-ds-eviction": "true",
              "target.workload.openshift.io/management": "{\"effect\": \"PreferredDuringScheduling\"}"
            }
          },
          "spec": {
            "volumes": [
              {
                "name": "config-volume",
                "configMap": {
                  "name": "dns-default",
                  "items": [
                    {
                      "key": "Corefile",
                      "path": "Corefile"
                    }
                  ],
                  "defaultMode": 420
                }
              },
              {
                "name": "metrics-tls",
                "secret": {
                  "secretName": "dns-default-metrics-tls",
                  "defaultMode": 420
                }
              }
            ],
            "containers": [
              {
                "name": "dns",
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:d149dad1b6a7e05bad6a7c83df7147e47d52418ec9a86f8603001de7323b4d88",
                "command": [
                  "coredns"
                ],
                "args": [
                  "-conf",
                  "/etc/coredns/Corefile"
                ],
                "ports": [
                  {
                    "name": "dns",
                    "containerPort": 5353,
                    "protocol": "UDP"
                  },
                  {
                    "name": "dns-tcp",
                    "containerPort": 5353,
                    "protocol": "TCP"
                  }
                ],
                "resources": {
                  "requests": {
                    "cpu": "50m",
                    "memory": "70Mi"
                  }
                },
                "volumeMounts": [
                  {
                    "name": "config-volume",
                    "readOnly": true,
                    "mountPath": "/etc/coredns"
                  }
                ],
                "livenessProbe": {
                  "httpGet": {
                    "path": "/health",
                    "port": 8080,
                    "scheme": "HTTP"
                  },
                  "initialDelaySeconds": 60,
                  "timeoutSeconds": 5,
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "failureThreshold": 5
                },
                "readinessProbe": {
                  "httpGet": {
                    "path": "/ready",
                    "port": 8181,
                    "scheme": "HTTP"
                  },
                  "initialDelaySeconds": 10,
                  "timeoutSeconds": 3,
                  "periodSeconds": 3,
                  "successThreshold": 1,
                  "failureThreshold": 3
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "FallbackToLogsOnError",
                "imagePullPolicy": "IfNotPresent"
              },
              {
                "name": "kube-rbac-proxy",
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:eadc41af9cda0fa7e97b421f7b314024f7757cc545e87d5c99f96b03f335cf79",
                "args": [
                  "--logtostderr",
                  "--secure-listen-address=:9154",
                  "--tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256",
                  "--upstream=http://127.0.0.1:9153/",
                  "--tls-cert-file=/etc/tls/private/tls.crt",
                  "--tls-private-key-file=/etc/tls/private/tls.key"
                ],
                "ports": [
                  {
                    "name": "metrics",
                    "containerPort": 9154,
                    "protocol": "TCP"
                  }
                ],
                "resources": {
                  "requests": {
                    "cpu": "10m",
                    "memory": "40Mi"
                  }
                },
                "volumeMounts": [
                  {
                    "name": "metrics-tls",
                    "readOnly": true,
                    "mountPath": "/etc/tls/private"
                  }
                ],
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "imagePullPolicy": "IfNotPresent"
              }
            ],
            "restartPolicy": "Always",
            "terminationGracePeriodSeconds": 30,
            "dnsPolicy": "Default",
            "nodeSelector": {
              "kubernetes.io/os": "linux"
            },
            "serviceAccountName": "dns",
            "serviceAccount": "dns",
            "securityContext": {},
            "schedulerName": "default-scheduler",
            "tolerations": [
              {
                "key": "node-role.kubernetes.io/master",
                "operator": "Exists"
              }
            ],
            "priorityClassName": "system-node-critical"
          }
        },
        "updateStrategy": {
          "type": "RollingUpdate",
          "rollingUpdate": {
            "maxUnavailable": "10%",
            "maxSurge": 0
          }
        },
        "revisionHistoryLimit": 10
      },
      "status": {
        "currentNumberScheduled": 5,
        "numberMisscheduled": 0,
        "desiredNumberScheduled": 5,
        "numberReady": 5,
        "observedGeneration": 1,
        "updatedNumberScheduled": 5,
        "numberAvailable": 5
      }
    },
    {
      "metadata": {
        "name": "node-resolver",
        "namespace": "openshift-dns",
        "uid": "e1857b8e-b907-4752-998b-9c670cec79ef",
        "resourceVersion": "65374",
        "generation": 1,
        "creationTimestamp": "2023-08-25T07:46:01Z",
        "annotations": {
          "deprecated.daemonset.template.generation": "1"
        },
        "ownerReferences": [
          {
            "apiVersion": "operator.openshift.io/v1",
            "kind": "DNS",
            "name": "default",
            "uid": "99999e34-5a45-459d-aa64-65212e33e8c0",
            "controller": true
          }
        ],
        "managedFields": [
          {
            "manager": "dns-operator",
            "operation": "Update",
            "apiVersion": "apps/v1",
            "time": "2023-08-25T07:46:01Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:deprecated.daemonset.template.generation": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"99999e34-5a45-459d-aa64-65212e33e8c0\"}": {}
                }
              },
              "f:spec": {
                "f:revisionHistoryLimit": {},
                "f:selector": {},
                "f:template": {
                  "f:metadata": {
                    "f:annotations": {
                      ".": {},
                      "f:target.workload.openshift.io/management": {}
                    },
                    "f:labels": {
                      ".": {},
                      "f:dns.operator.openshift.io/daemonset-node-resolver": {}
                    }
                  },
                  "f:spec": {
                    "f:containers": {
                      "k:{\"name\":\"dns-node-resolver\"}": {
                        ".": {},
                        "f:command": {},
                        "f:env": {
                          ".": {},
                          "k:{\"name\":\"CLUSTER_DOMAIN\"}": {
                            ".": {},
                            "f:name": {},
                            "f:value": {}
                          },
                          "k:{\"name\":\"NAMESERVER\"}": {
                            ".": {},
                            "f:name": {},
                            "f:value": {}
                          },
                          "k:{\"name\":\"SERVICES\"}": {
                            ".": {},
                            "f:name": {},
                            "f:value": {}
                          }
                        },
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:name": {},
                        "f:resources": {
                          ".": {},
                          "f:requests": {
                            ".": {},
                            "f:cpu": {},
                            "f:memory": {}
                          }
                        },
                        "f:securityContext": {
                          ".": {},
                          "f:privileged": {}
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/etc/hosts\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        }
                      }
                    },
                    "f:dnsPolicy": {},
                    "f:hostNetwork": {},
                    "f:nodeSelector": {},
                    "f:priorityClassName": {},
                    "f:restartPolicy": {},
                    "f:schedulerName": {},
                    "f:securityContext": {},
                    "f:serviceAccount": {},
                    "f:serviceAccountName": {},
                    "f:terminationGracePeriodSeconds": {},
                    "f:tolerations": {},
                    "f:volumes": {
                      ".": {},
                      "k:{\"name\":\"hosts-file\"}": {
                        ".": {},
                        "f:hostPath": {
                          ".": {},
                          "f:path": {},
                          "f:type": {}
                        },
                        "f:name": {}
                      }
                    }
                  }
                },
                "f:updateStrategy": {
                  "f:rollingUpdate": {
                    ".": {},
                    "f:maxSurge": {},
                    "f:maxUnavailable": {}
                  },
                  "f:type": {}
                }
              }
            }
          },
          {
            "manager": "kube-controller-manager",
            "operation": "Update",
            "apiVersion": "apps/v1",
            "time": "2023-08-25T08:20:08Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": {
                "f:currentNumberScheduled": {},
                "f:desiredNumberScheduled": {},
                "f:numberAvailable": {},
                "f:numberReady": {},
                "f:observedGeneration": {},
                "f:updatedNumberScheduled": {}
              }
            },
            "subresource": "status"
          }
        ]
      },
      "spec": {
        "selector": {
          "matchLabels": {
            "dns.operator.openshift.io/daemonset-node-resolver": ""
          }
        },
        "template": {
          "metadata": {
            "creationTimestamp": null,
            "labels": {
              "dns.operator.openshift.io/daemonset-node-resolver": ""
            },
            "annotations": {
              "target.workload.openshift.io/management": "{\"effect\": \"PreferredDuringScheduling\"}"
            }
          },
          "spec": {
            "volumes": [
              {
                "name": "hosts-file",
                "hostPath": {
                  "path": "/etc/hosts",
                  "type": "File"
                }
              }
            ],
            "containers": [
              {
                "name": "dns-node-resolver",
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:878b31040c88f3eb56ca2bd2d77fa29128dad732850dd3fe779037ec9643bf02",
                "command": [
                  "/bin/bash",
                  "-c",
                  "#!/bin/bash\nset -uo pipefail\n\ntrap 'jobs -p | xargs kill || true; wait; exit 0' TERM\n\nOPENSHIFT_MARKER=\"openshift-generated-node-resolver\"\nHOSTS_FILE=\"/etc/hosts\"\nTEMP_FILE=\"/etc/hosts.tmp\"\n\nIFS=', ' read -r -a services <<< \"${SERVICES}\"\n\n# Make a temporary file with the old hosts file's attributes.\nif ! cp -f --attributes-only \"${HOSTS_FILE}\" \"${TEMP_FILE}\"; then\n  echo \"Failed to preserve hosts file. Exiting.\"\n  exit 1\nfi\n\nwhile true; do\n  declare -A svc_ips\n  for svc in \"${services[@]}\"; do\n    # Fetch service IP from cluster dns if present. We make several tries\n    # to do it: IPv4, IPv6, IPv4 over TCP and IPv6 over TCP. The two last ones\n    # are for deployments with Kuryr on older OpenStack (OSP13) - those do not\n    # support UDP loadbalancers and require reaching DNS through TCP.\n    cmds=('dig -t A @\"${NAMESERVER}\" +short \"${svc}.${CLUSTER_DOMAIN}\"|grep -v \"^;\"'\n          'dig -t AAAA @\"${NAMESERVER}\" +short \"${svc}.${CLUSTER_DOMAIN}\"|grep -v \"^;\"'\n          'dig -t A +tcp +retry=0 @\"${NAMESERVER}\" +short \"${svc}.${CLUSTER_DOMAIN}\"|grep -v \"^;\"'\n          'dig -t AAAA +tcp +retry=0 @\"${NAMESERVER}\" +short \"${svc}.${CLUSTER_DOMAIN}\"|grep -v \"^;\"')\n    for i in ${!cmds[*]}\n    do\n      ips=($(eval \"${cmds[i]}\"))\n      if [[ \"$?\" -eq 0 && \"${#ips[@]}\" -ne 0 ]]; then\n        svc_ips[\"${svc}\"]=\"${ips[@]}\"\n        break\n      fi\n    done\n  done\n\n  # Update /etc/hosts only if we get valid service IPs\n  # We will not update /etc/hosts when there is coredns service outage or api unavailability\n  # Stale entries could exist in /etc/hosts if the service is deleted\n  if [[ -n \"${svc_ips[*]-}\" ]]; then\n    # Build a new hosts file from /etc/hosts with our custom entries filtered out\n    if ! sed --silent \"/# ${OPENSHIFT_MARKER}/d; w ${TEMP_FILE}\" \"${HOSTS_FILE}\"; then\n      # Only continue rebuilding the hosts entries if its original content is preserved\n      sleep 60 & wait\n      continue\n    fi\n\n    # Append resolver entries for services\n    rc=0\n    for svc in \"${!svc_ips[@]}\"; do\n      for ip in ${svc_ips[${svc}]}; do\n        echo \"${ip} ${svc} ${svc}.${CLUSTER_DOMAIN} # ${OPENSHIFT_MARKER}\" >> \"${TEMP_FILE}\" || rc=$?\n      done\n    done\n    if [[ $rc -ne 0 ]]; then\n      sleep 60 & wait\n      continue\n    fi\n\n\n    # TODO: Update /etc/hosts atomically to avoid any inconsistent behavior\n    # Replace /etc/hosts with our modified version if needed\n    cmp \"${TEMP_FILE}\" \"${HOSTS_FILE}\" || cp -f \"${TEMP_FILE}\" \"${HOSTS_FILE}\"\n    # TEMP_FILE is not removed to avoid file create/delete and attributes copy churn\n  fi\n  sleep 60 & wait\n  unset svc_ips\ndone\n"
                ],
                "env": [
                  {
                    "name": "SERVICES",
                    "value": "image-registry.openshift-image-registry.svc"
                  },
                  {
                    "name": "NAMESERVER",
                    "value": "172.30.0.10"
                  },
                  {
                    "name": "CLUSTER_DOMAIN",
                    "value": "cluster.local"
                  }
                ],
                "resources": {
                  "requests": {
                    "cpu": "5m",
                    "memory": "21Mi"
                  }
                },
                "volumeMounts": [
                  {
                    "name": "hosts-file",
                    "mountPath": "/etc/hosts"
                  }
                ],
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "FallbackToLogsOnError",
                "imagePullPolicy": "IfNotPresent",
                "securityContext": {
                  "privileged": true
                }
              }
            ],
            "restartPolicy": "Always",
            "terminationGracePeriodSeconds": 30,
            "dnsPolicy": "ClusterFirst",
            "nodeSelector": {
              "kubernetes.io/os": "linux"
            },
            "serviceAccountName": "node-resolver",
            "serviceAccount": "node-resolver",
            "hostNetwork": true,
            "securityContext": {},
            "schedulerName": "default-scheduler",
            "tolerations": [
              {
                "operator": "Exists"
              }
            ],
            "priorityClassName": "system-node-critical"
          }
        },
        "updateStrategy": {
          "type": "RollingUpdate",
          "rollingUpdate": {
            "maxUnavailable": "33%",
            "maxSurge": 0
          }
        },
        "revisionHistoryLimit": 10
      },
      "status": {
        "currentNumberScheduled": 7,
        "numberMisscheduled": 0,
        "desiredNumberScheduled": 7,
        "numberReady": 7,
        "observedGeneration": 1,
        "updatedNumberScheduled": 7,
        "numberAvailable": 7
      }
    },
    {
      "metadata": {
        "name": "node-ca",
        "namespace": "openshift-image-registry",
        "uid": "e7086129-701c-4ca6-a768-5b2dbfa2d0e3",
        "resourceVersion": "65398",
        "generation": 1,
        "creationTimestamp": "2023-08-25T07:52:12Z",
        "annotations": {
          "deprecated.daemonset.template.generation": "1",
          "operator.openshift.io/spec-hash": "66b28a77c64584adb04fcd084fb3e9735a8d6e369472215e48182c688c67d5f6"
        },
        "managedFields": [
          {
            "manager": "cluster-image-registry-operator",
            "operation": "Update",
            "apiVersion": "apps/v1",
            "time": "2023-08-25T07:52:12Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:deprecated.daemonset.template.generation": {},
                  "f:operator.openshift.io/spec-hash": {}
                }
              },
              "f:spec": {
                "f:revisionHistoryLimit": {},
                "f:selector": {},
                "f:template": {
                  "f:metadata": {
                    "f:annotations": {
                      ".": {},
                      "f:target.workload.openshift.io/management": {}
                    },
                    "f:labels": {
                      ".": {},
                      "f:name": {}
                    }
                  },
                  "f:spec": {
                    "f:containers": {
                      "k:{\"name\":\"node-ca\"}": {
                        ".": {},
                        "f:command": {},
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:name": {},
                        "f:resources": {
                          ".": {},
                          "f:requests": {
                            ".": {},
                            "f:cpu": {},
                            "f:memory": {}
                          }
                        },
                        "f:securityContext": {
                          ".": {},
                          "f:privileged": {},
                          "f:runAsGroup": {},
                          "f:runAsUser": {}
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/etc/docker/certs.d\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/tmp/serviceca\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        }
                      }
                    },
                    "f:dnsPolicy": {},
                    "f:hostNetwork": {},
                    "f:nodeSelector": {},
                    "f:priorityClassName": {},
                    "f:restartPolicy": {},
                    "f:schedulerName": {},
                    "f:securityContext": {},
                    "f:serviceAccount": {},
                    "f:serviceAccountName": {},
                    "f:terminationGracePeriodSeconds": {},
                    "f:tolerations": {},
                    "f:volumes": {
                      ".": {},
                      "k:{\"name\":\"host\"}": {
                        ".": {},
                        "f:hostPath": {
                          ".": {},
                          "f:path": {},
                          "f:type": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"serviceca\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      }
                    }
                  }
                },
                "f:updateStrategy": {
                  "f:rollingUpdate": {
                    ".": {},
                    "f:maxSurge": {},
                    "f:maxUnavailable": {}
                  },
                  "f:type": {}
                }
              }
            }
          },
          {
            "manager": "kube-controller-manager",
            "operation": "Update",
            "apiVersion": "apps/v1",
            "time": "2023-08-25T08:20:09Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": {
                "f:currentNumberScheduled": {},
                "f:desiredNumberScheduled": {},
                "f:numberAvailable": {},
                "f:numberReady": {},
                "f:observedGeneration": {},
                "f:updatedNumberScheduled": {}
              }
            },
            "subresource": "status"
          }
        ]
      },
      "spec": {
        "selector": {
          "matchLabels": {
            "name": "node-ca"
          }
        },
        "template": {
          "metadata": {
            "creationTimestamp": null,
            "labels": {
              "name": "node-ca"
            },
            "annotations": {
              "target.workload.openshift.io/management": "{\"effect\": \"PreferredDuringScheduling\"}"
            }
          },
          "spec": {
            "volumes": [
              {
                "name": "host",
                "hostPath": {
                  "path": "/etc/docker/certs.d",
                  "type": ""
                }
              },
              {
                "name": "serviceca",
                "configMap": {
                  "name": "image-registry-certificates",
                  "defaultMode": 420
                }
              }
            ],
            "containers": [
              {
                "name": "node-ca",
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:dbf940bb08b4f77415b6f3f0cd6d7f2349899343dedbeca660cb4a608263ff43",
                "command": [
                  "/bin/sh",
                  "-c",
                  "trap 'jobs -p | xargs -r kill; echo shutting down node-ca; exit 0' TERM\nwhile [ true ];\ndo\n  for f in $(ls /tmp/serviceca); do\n      echo $f\n      ca_file_path=\"/tmp/serviceca/${f}\"\n      f=$(echo $f | sed  -r 's/(.*)\\.\\./\\1:/')\n      reg_dir_path=\"/etc/docker/certs.d/${f}\"\n      if [ -e \"${reg_dir_path}\" ]; then\n          cp -u $ca_file_path $reg_dir_path/ca.crt\n      else\n          mkdir $reg_dir_path\n          cp $ca_file_path $reg_dir_path/ca.crt\n      fi\n  done\n  for d in $(ls /etc/docker/certs.d); do\n      echo $d\n      dp=$(echo $d | sed  -r 's/(.*):/\\1\\.\\./')\n      reg_conf_path=\"/tmp/serviceca/${dp}\"\n      if [ ! -e \"${reg_conf_path}\" ]; then\n          rm -rf /etc/docker/certs.d/$d\n      fi\n  done\n  sleep 60 & wait ${!}\ndone\n"
                ],
                "resources": {
                  "requests": {
                    "cpu": "10m",
                    "memory": "10Mi"
                  }
                },
                "volumeMounts": [
                  {
                    "name": "serviceca",
                    "mountPath": "/tmp/serviceca"
                  },
                  {
                    "name": "host",
                    "mountPath": "/etc/docker/certs.d"
                  }
                ],
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "imagePullPolicy": "IfNotPresent",
                "securityContext": {
                  "privileged": true,
                  "runAsUser": 1001,
                  "runAsGroup": 0
                }
              }
            ],
            "restartPolicy": "Always",
            "terminationGracePeriodSeconds": 30,
            "dnsPolicy": "ClusterFirst",
            "nodeSelector": {
              "kubernetes.io/os": "linux"
            },
            "serviceAccountName": "node-ca",
            "serviceAccount": "node-ca",
            "hostNetwork": true,
            "securityContext": {},
            "schedulerName": "default-scheduler",
            "tolerations": [
              {
                "operator": "Exists"
              }
            ],
            "priorityClassName": "system-cluster-critical"
          }
        },
        "updateStrategy": {
          "type": "RollingUpdate",
          "rollingUpdate": {
            "maxUnavailable": "10%",
            "maxSurge": 0
          }
        },
        "revisionHistoryLimit": 10
      },
      "status": {
        "currentNumberScheduled": 7,
        "numberMisscheduled": 0,
        "desiredNumberScheduled": 7,
        "numberReady": 7,
        "observedGeneration": 1,
        "updatedNumberScheduled": 7,
        "numberAvailable": 7
      }
    },
    {
      "metadata": {
        "name": "ingress-canary",
        "namespace": "openshift-ingress-canary",
        "uid": "268f9503-8084-4b45-b39e-014393860b08",
        "resourceVersion": "65394",
        "generation": 1,
        "creationTimestamp": "2023-08-25T07:51:16Z",
        "labels": {
          "ingress.openshift.io/canary": "canary_controller"
        },
        "annotations": {
          "deprecated.daemonset.template.generation": "1"
        },
        "managedFields": [
          {
            "manager": "ingress-operator",
            "operation": "Update",
            "apiVersion": "apps/v1",
            "time": "2023-08-25T07:51:16Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:deprecated.daemonset.template.generation": {}
                },
                "f:labels": {
                  ".": {},
                  "f:ingress.openshift.io/canary": {}
                }
              },
              "f:spec": {
                "f:revisionHistoryLimit": {},
                "f:selector": {},
                "f:template": {
                  "f:metadata": {
                    "f:annotations": {
                      ".": {},
                      "f:target.workload.openshift.io/management": {}
                    },
                    "f:labels": {
                      ".": {},
                      "f:ingresscanary.operator.openshift.io/daemonset-ingresscanary": {}
                    }
                  },
                  "f:spec": {
                    "f:containers": {
                      "k:{\"name\":\"serve-healthcheck-canary\"}": {
                        ".": {},
                        "f:command": {},
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:name": {},
                        "f:ports": {
                          ".": {},
                          "k:{\"containerPort\":8080,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:protocol": {}
                          },
                          "k:{\"containerPort\":8888,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:protocol": {}
                          }
                        },
                        "f:resources": {
                          ".": {},
                          "f:requests": {
                            ".": {},
                            "f:cpu": {},
                            "f:memory": {}
                          }
                        },
                        "f:securityContext": {
                          ".": {},
                          "f:allowPrivilegeEscalation": {},
                          "f:capabilities": {
                            ".": {},
                            "f:drop": {}
                          }
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {}
                      }
                    },
                    "f:dnsPolicy": {},
                    "f:nodeSelector": {},
                    "f:priorityClassName": {},
                    "f:restartPolicy": {},
                    "f:schedulerName": {},
                    "f:securityContext": {
                      ".": {},
                      "f:runAsNonRoot": {},
                      "f:seccompProfile": {
                        ".": {},
                        "f:type": {}
                      }
                    },
                    "f:terminationGracePeriodSeconds": {},
                    "f:tolerations": {}
                  }
                },
                "f:updateStrategy": {
                  "f:rollingUpdate": {
                    ".": {},
                    "f:maxSurge": {},
                    "f:maxUnavailable": {}
                  },
                  "f:type": {}
                }
              }
            }
          },
          {
            "manager": "kube-controller-manager",
            "operation": "Update",
            "apiVersion": "apps/v1",
            "time": "2023-08-25T08:20:08Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": {
                "f:currentNumberScheduled": {},
                "f:desiredNumberScheduled": {},
                "f:numberAvailable": {},
                "f:numberMisscheduled": {},
                "f:numberReady": {},
                "f:observedGeneration": {},
                "f:updatedNumberScheduled": {}
              }
            },
            "subresource": "status"
          }
        ]
      },
      "spec": {
        "selector": {
          "matchLabels": {
            "ingresscanary.operator.openshift.io/daemonset-ingresscanary": "canary_controller"
          }
        },
        "template": {
          "metadata": {
            "creationTimestamp": null,
            "labels": {
              "ingresscanary.operator.openshift.io/daemonset-ingresscanary": "canary_controller"
            },
            "annotations": {
              "target.workload.openshift.io/management": "{\"effect\": \"PreferredDuringScheduling\"}"
            }
          },
          "spec": {
            "containers": [
              {
                "name": "serve-healthcheck-canary",
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:426b6bb1c59c8031a0e9913ea403608f950a4ed512f0dad30bde9523f2bac21f",
                "command": [
                  "ingress-operator",
                  "serve-healthcheck"
                ],
                "ports": [
                  {
                    "containerPort": 8080,
                    "protocol": "TCP"
                  },
                  {
                    "containerPort": 8888,
                    "protocol": "TCP"
                  }
                ],
                "resources": {
                  "requests": {
                    "cpu": "10m",
                    "memory": "20Mi"
                  }
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "FallbackToLogsOnError",
                "imagePullPolicy": "IfNotPresent",
                "securityContext": {
                  "capabilities": {
                    "drop": [
                      "ALL"
                    ]
                  },
                  "allowPrivilegeEscalation": false
                }
              }
            ],
            "restartPolicy": "Always",
            "terminationGracePeriodSeconds": 30,
            "dnsPolicy": "ClusterFirst",
            "nodeSelector": {
              "kubernetes.io/os": "linux"
            },
            "securityContext": {
              "runAsNonRoot": true,
              "seccompProfile": {
                "type": "RuntimeDefault"
              }
            },
            "schedulerName": "default-scheduler",
            "tolerations": [
              {
                "key": "node-role.kubernetes.io/infra",
                "operator": "Exists",
                "effect": "NoSchedule"
              }
            ],
            "priorityClassName": "system-cluster-critical"
          }
        },
        "updateStrategy": {
          "type": "RollingUpdate",
          "rollingUpdate": {
            "maxUnavailable": "10%",
            "maxSurge": 0
          }
        },
        "revisionHistoryLimit": 10
      },
      "status": {
        "currentNumberScheduled": 4,
        "numberMisscheduled": 0,
        "desiredNumberScheduled": 4,
        "numberReady": 4,
        "observedGeneration": 1,
        "updatedNumberScheduled": 4,
        "numberAvailable": 4
      }
    },
    {
      "metadata": {
        "name": "machine-api-termination-handler",
        "namespace": "openshift-machine-api",
        "uid": "dea30e1c-243b-4c2d-8cb2-efd0382b4fba",
        "resourceVersion": "7248",
        "generation": 1,
        "creationTimestamp": "2023-08-25T07:45:56Z",
        "labels": {
          "api": "clusterapi",
          "k8s-app": "termination-handler"
        },
        "annotations": {
          "deprecated.daemonset.template.generation": "1",
          "machine.openshift.io/owned": "",
          "operator.openshift.io/spec-hash": "929e000b7a9296bd4c99bd059a423d8868ce91218be3121f2da85fa50d8e1c40"
        },
        "managedFields": [
          {
            "manager": "kube-controller-manager",
            "operation": "Update",
            "apiVersion": "apps/v1",
            "time": "2023-08-25T07:45:56Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": {
                "f:observedGeneration": {}
              }
            },
            "subresource": "status"
          },
          {
            "manager": "machine-api-operator",
            "operation": "Update",
            "apiVersion": "apps/v1",
            "time": "2023-08-25T07:45:56Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:deprecated.daemonset.template.generation": {},
                  "f:machine.openshift.io/owned": {},
                  "f:operator.openshift.io/spec-hash": {}
                },
                "f:labels": {
                  ".": {},
                  "f:api": {},
                  "f:k8s-app": {}
                }
              },
              "f:spec": {
                "f:revisionHistoryLimit": {},
                "f:selector": {},
                "f:template": {
                  "f:metadata": {
                    "f:annotations": {
                      ".": {},
                      "f:operator.openshift.io/dep-openshift-machine-api.mao-trusted-ca.configmap": {},
                      "f:target.workload.openshift.io/management": {}
                    },
                    "f:labels": {
                      ".": {},
                      "f:api": {},
                      "f:k8s-app": {}
                    }
                  },
                  "f:spec": {
                    "f:automountServiceAccountToken": {},
                    "f:containers": {
                      "k:{\"name\":\"termination-handler\"}": {
                        ".": {},
                        "f:args": {},
                        "f:command": {},
                        "f:env": {
                          ".": {},
                          "k:{\"name\":\"KUBECONFIG\"}": {
                            ".": {},
                            "f:name": {},
                            "f:value": {}
                          },
                          "k:{\"name\":\"NODE_NAME\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": {
                              ".": {},
                              "f:fieldRef": {}
                            }
                          }
                        },
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:name": {},
                        "f:resources": {
                          ".": {},
                          "f:requests": {
                            ".": {},
                            "f:cpu": {},
                            "f:memory": {}
                          }
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/var/lib/kubelet/kubeconfig\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {},
                            "f:readOnly": {}
                          },
                          "k:{\"mountPath\":\"/var/lib/kubelet/pki\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {},
                            "f:readOnly": {}
                          }
                        }
                      }
                    },
                    "f:dnsPolicy": {},
                    "f:hostNetwork": {},
                    "f:nodeSelector": {},
                    "f:priorityClassName": {},
                    "f:restartPolicy": {},
                    "f:schedulerName": {},
                    "f:securityContext": {},
                    "f:serviceAccount": {},
                    "f:serviceAccountName": {},
                    "f:terminationGracePeriodSeconds": {},
                    "f:tolerations": {},
                    "f:volumes": {
                      ".": {},
                      "k:{\"name\":\"kubeconfig\"}": {
                        ".": {},
                        "f:hostPath": {
                          ".": {},
                          "f:path": {},
                          "f:type": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"pki\"}": {
                        ".": {},
                        "f:hostPath": {
                          ".": {},
                          "f:path": {},
                          "f:type": {}
                        },
                        "f:name": {}
                      }
                    }
                  }
                },
                "f:updateStrategy": {
                  "f:rollingUpdate": {
                    ".": {},
                    "f:maxSurge": {},
                    "f:maxUnavailable": {}
                  },
                  "f:type": {}
                }
              }
            }
          }
        ]
      },
      "spec": {
        "selector": {
          "matchLabels": {
            "api": "clusterapi",
            "k8s-app": "termination-handler"
          }
        },
        "template": {
          "metadata": {
            "creationTimestamp": null,
            "labels": {
              "api": "clusterapi",
              "k8s-app": "termination-handler"
            },
            "annotations": {
              "operator.openshift.io/dep-openshift-machine-api.mao-trusted-ca.configmap": "O1lK1A==",
              "target.workload.openshift.io/management": "{\"effect\": \"PreferredDuringScheduling\"}"
            }
          },
          "spec": {
            "volumes": [
              {
                "name": "kubeconfig",
                "hostPath": {
                  "path": "/var/lib/kubelet/kubeconfig",
                  "type": ""
                }
              },
              {
                "name": "pki",
                "hostPath": {
                  "path": "/var/lib/kubelet/pki",
                  "type": ""
                }
              }
            ],
            "containers": [
              {
                "name": "termination-handler",
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:73b0d942fffd9629df8d05e6bbcafbdd8ecaf1ce56ae84e17c75a3aeaaacbf67",
                "command": [
                  "/termination-handler"
                ],
                "args": [
                  "--logtostderr=true",
                  "--v=3",
                  "--node-name=$(NODE_NAME)",
                  "--namespace=openshift-machine-api",
                  "--poll-interval-seconds=5"
                ],
                "env": [
                  {
                    "name": "KUBECONFIG",
                    "value": "/var/lib/kubelet/kubeconfig"
                  },
                  {
                    "name": "NODE_NAME",
                    "valueFrom": {
                      "fieldRef": {
                        "apiVersion": "v1",
                        "fieldPath": "spec.nodeName"
                      }
                    }
                  }
                ],
                "resources": {
                  "requests": {
                    "cpu": "10m",
                    "memory": "20Mi"
                  }
                },
                "volumeMounts": [
                  {
                    "name": "kubeconfig",
                    "readOnly": true,
                    "mountPath": "/var/lib/kubelet/kubeconfig"
                  },
                  {
                    "name": "pki",
                    "readOnly": true,
                    "mountPath": "/var/lib/kubelet/pki"
                  }
                ],
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "imagePullPolicy": "IfNotPresent"
              }
            ],
            "restartPolicy": "Always",
            "terminationGracePeriodSeconds": 30,
            "dnsPolicy": "ClusterFirst",
            "nodeSelector": {
              "kubernetes.io/os": "linux",
              "machine.openshift.io/interruptible-instance": ""
            },
            "serviceAccountName": "machine-api-termination-handler",
            "serviceAccount": "machine-api-termination-handler",
            "automountServiceAccountToken": false,
            "hostNetwork": true,
            "securityContext": {},
            "schedulerName": "default-scheduler",
            "tolerations": [
              {
                "operator": "Exists",
                "effect": "NoSchedule"
              }
            ],
            "priorityClassName": "system-node-critical"
          }
        },
        "updateStrategy": {
          "type": "RollingUpdate",
          "rollingUpdate": {
            "maxUnavailable": "10%",
            "maxSurge": 0
          }
        },
        "revisionHistoryLimit": 10
      },
      "status": {
        "currentNumberScheduled": 0,
        "numberMisscheduled": 0,
        "desiredNumberScheduled": 0,
        "numberReady": 0,
        "observedGeneration": 1
      }
    },
    {
      "metadata": {
        "name": "machine-config-daemon",
        "namespace": "openshift-machine-config-operator",
        "uid": "e9b85cef-1917-45ef-bbf9-a7956a3b6814",
        "resourceVersion": "65387",
        "generation": 1,
        "creationTimestamp": "2023-08-25T07:45:18Z",
        "annotations": {
          "deprecated.daemonset.template.generation": "1"
        },
        "managedFields": [
          {
            "manager": "machine-config-operator",
            "operation": "Update",
            "apiVersion": "apps/v1",
            "time": "2023-08-25T07:45:18Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:deprecated.daemonset.template.generation": {}
                }
              },
              "f:spec": {
                "f:revisionHistoryLimit": {},
                "f:selector": {},
                "f:template": {
                  "f:metadata": {
                    "f:annotations": {
                      ".": {},
                      "f:target.workload.openshift.io/management": {}
                    },
                    "f:labels": {
                      ".": {},
                      "f:k8s-app": {}
                    },
                    "f:name": {}
                  },
                  "f:spec": {
                    "f:containers": {
                      "k:{\"name\":\"machine-config-daemon\"}": {
                        ".": {},
                        "f:args": {},
                        "f:command": {},
                        "f:env": {
                          ".": {},
                          "k:{\"name\":\"NODE_NAME\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": {
                              ".": {},
                              "f:fieldRef": {}
                            }
                          }
                        },
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:name": {},
                        "f:resources": {
                          ".": {},
                          "f:requests": {
                            ".": {},
                            "f:cpu": {},
                            "f:memory": {}
                          }
                        },
                        "f:securityContext": {
                          ".": {},
                          "f:privileged": {},
                          "f:readOnlyRootFilesystem": {}
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/rootfs\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        }
                      },
                      "k:{\"name\":\"oauth-proxy\"}": {
                        ".": {},
                        "f:args": {},
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:name": {},
                        "f:ports": {
                          ".": {},
                          "k:{\"containerPort\":9001,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:hostPort": {},
                            "f:name": {},
                            "f:protocol": {}
                          }
                        },
                        "f:resources": {
                          ".": {},
                          "f:requests": {
                            ".": {},
                            "f:cpu": {},
                            "f:memory": {}
                          }
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/etc/tls/cookie-secret\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/etc/tls/private\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        }
                      }
                    },
                    "f:dnsPolicy": {},
                    "f:hostNetwork": {},
                    "f:hostPID": {},
                    "f:nodeSelector": {},
                    "f:priorityClassName": {},
                    "f:restartPolicy": {},
                    "f:schedulerName": {},
                    "f:securityContext": {},
                    "f:serviceAccount": {},
                    "f:serviceAccountName": {},
                    "f:terminationGracePeriodSeconds": {},
                    "f:tolerations": {},
                    "f:volumes": {
                      ".": {},
                      "k:{\"name\":\"cookie-secret\"}": {
                        ".": {},
                        "f:name": {},
                        "f:secret": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:secretName": {}
                        }
                      },
                      "k:{\"name\":\"proxy-tls\"}": {
                        ".": {},
                        "f:name": {},
                        "f:secret": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:secretName": {}
                        }
                      },
                      "k:{\"name\":\"rootfs\"}": {
                        ".": {},
                        "f:hostPath": {
                          ".": {},
                          "f:path": {},
                          "f:type": {}
                        },
                        "f:name": {}
                      }
                    }
                  }
                },
                "f:updateStrategy": {
                  "f:rollingUpdate": {
                    ".": {},
                    "f:maxSurge": {},
                    "f:maxUnavailable": {}
                  },
                  "f:type": {}
                }
              }
            }
          },
          {
            "manager": "kube-controller-manager",
            "operation": "Update",
            "apiVersion": "apps/v1",
            "time": "2023-08-25T08:20:08Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": {
                "f:currentNumberScheduled": {},
                "f:desiredNumberScheduled": {},
                "f:numberAvailable": {},
                "f:numberReady": {},
                "f:observedGeneration": {},
                "f:updatedNumberScheduled": {}
              }
            },
            "subresource": "status"
          }
        ]
      },
      "spec": {
        "selector": {
          "matchLabels": {
            "k8s-app": "machine-config-daemon"
          }
        },
        "template": {
          "metadata": {
            "name": "machine-config-daemon",
            "creationTimestamp": null,
            "labels": {
              "k8s-app": "machine-config-daemon"
            },
            "annotations": {
              "target.workload.openshift.io/management": "{\"effect\": \"PreferredDuringScheduling\"}"
            }
          },
          "spec": {
            "volumes": [
              {
                "name": "rootfs",
                "hostPath": {
                  "path": "/",
                  "type": ""
                }
              },
              {
                "name": "proxy-tls",
                "secret": {
                  "secretName": "proxy-tls",
                  "defaultMode": 420
                }
              },
              {
                "name": "cookie-secret",
                "secret": {
                  "secretName": "cookie-secret",
                  "defaultMode": 420
                }
              }
            ],
            "containers": [
              {
                "name": "machine-config-daemon",
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:eba22f67551d60674a8c9550b9284f2a0540b2a69f5e3c12b7cb2d943684b2a3",
                "command": [
                  "/usr/bin/machine-config-daemon"
                ],
                "args": [
                  "start"
                ],
                "env": [
                  {
                    "name": "NODE_NAME",
                    "valueFrom": {
                      "fieldRef": {
                        "apiVersion": "v1",
                        "fieldPath": "spec.nodeName"
                      }
                    }
                  }
                ],
                "resources": {
                  "requests": {
                    "cpu": "20m",
                    "memory": "50Mi"
                  }
                },
                "volumeMounts": [
                  {
                    "name": "rootfs",
                    "mountPath": "/rootfs"
                  }
                ],
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "FallbackToLogsOnError",
                "imagePullPolicy": "IfNotPresent",
                "securityContext": {
                  "privileged": true,
                  "readOnlyRootFilesystem": false
                }
              },
              {
                "name": "oauth-proxy",
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:5a6d1fc77c635638495c0573b2caf2f99a00ecfd9612704d97106cbc5a1862c6",
                "args": [
                  "--https-address=:9001",
                  "--provider=openshift",
                  "--openshift-service-account=machine-config-daemon",
                  "--upstream=http://127.0.0.1:8797",
                  "--tls-cert=/etc/tls/private/tls.crt",
                  "--tls-key=/etc/tls/private/tls.key",
                  "--cookie-secret-file=/etc/tls/cookie-secret/cookie-secret",
                  "--openshift-sar={\"resource\": \"namespaces\", \"verb\": \"get\"}",
                  "--openshift-delegate-urls={\"/\": {\"resource\": \"namespaces\", \"verb\": \"get\"}}"
                ],
                "ports": [
                  {
                    "name": "metrics",
                    "hostPort": 9001,
                    "containerPort": 9001,
                    "protocol": "TCP"
                  }
                ],
                "resources": {
                  "requests": {
                    "cpu": "20m",
                    "memory": "50Mi"
                  }
                },
                "volumeMounts": [
                  {
                    "name": "proxy-tls",
                    "mountPath": "/etc/tls/private"
                  },
                  {
                    "name": "cookie-secret",
                    "mountPath": "/etc/tls/cookie-secret"
                  }
                ],
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "imagePullPolicy": "IfNotPresent"
              }
            ],
            "restartPolicy": "Always",
            "terminationGracePeriodSeconds": 600,
            "dnsPolicy": "ClusterFirst",
            "nodeSelector": {
              "kubernetes.io/os": "linux"
            },
            "serviceAccountName": "machine-config-daemon",
            "serviceAccount": "machine-config-daemon",
            "hostNetwork": true,
            "hostPID": true,
            "securityContext": {},
            "schedulerName": "default-scheduler",
            "tolerations": [
              {
                "operator": "Exists"
              }
            ],
            "priorityClassName": "system-node-critical"
          }
        },
        "updateStrategy": {
          "type": "RollingUpdate",
          "rollingUpdate": {
            "maxUnavailable": "10%",
            "maxSurge": 0
          }
        },
        "revisionHistoryLimit": 10
      },
      "status": {
        "currentNumberScheduled": 7,
        "numberMisscheduled": 0,
        "desiredNumberScheduled": 7,
        "numberReady": 7,
        "observedGeneration": 1,
        "updatedNumberScheduled": 7,
        "numberAvailable": 7
      }
    },
    {
      "metadata": {
        "name": "machine-config-server",
        "namespace": "openshift-machine-config-operator",
        "uid": "a3bcaed5-24ca-48de-8aa8-f613bed715f8",
        "resourceVersion": "62224",
        "generation": 1,
        "creationTimestamp": "2023-08-25T07:46:02Z",
        "annotations": {
          "deprecated.daemonset.template.generation": "1"
        },
        "managedFields": [
          {
            "manager": "machine-config-operator",
            "operation": "Update",
            "apiVersion": "apps/v1",
            "time": "2023-08-25T07:46:02Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:deprecated.daemonset.template.generation": {}
                }
              },
              "f:spec": {
                "f:revisionHistoryLimit": {},
                "f:selector": {},
                "f:template": {
                  "f:metadata": {
                    "f:annotations": {
                      ".": {},
                      "f:target.workload.openshift.io/management": {}
                    },
                    "f:labels": {
                      ".": {},
                      "f:k8s-app": {}
                    },
                    "f:name": {}
                  },
                  "f:spec": {
                    "f:containers": {
                      "k:{\"name\":\"machine-config-server\"}": {
                        ".": {},
                        "f:args": {},
                        "f:command": {},
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:name": {},
                        "f:resources": {
                          ".": {},
                          "f:requests": {
                            ".": {},
                            "f:cpu": {},
                            "f:memory": {}
                          }
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/etc/mcs/bootstrap-token\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/etc/ssl/mcs\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        }
                      }
                    },
                    "f:dnsPolicy": {},
                    "f:hostNetwork": {},
                    "f:nodeSelector": {},
                    "f:priorityClassName": {},
                    "f:restartPolicy": {},
                    "f:schedulerName": {},
                    "f:securityContext": {},
                    "f:serviceAccount": {},
                    "f:serviceAccountName": {},
                    "f:terminationGracePeriodSeconds": {},
                    "f:tolerations": {},
                    "f:volumes": {
                      ".": {},
                      "k:{\"name\":\"certs\"}": {
                        ".": {},
                        "f:name": {},
                        "f:secret": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:secretName": {}
                        }
                      },
                      "k:{\"name\":\"node-bootstrap-token\"}": {
                        ".": {},
                        "f:name": {},
                        "f:secret": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:secretName": {}
                        }
                      }
                    }
                  }
                },
                "f:updateStrategy": {
                  "f:rollingUpdate": {
                    ".": {},
                    "f:maxSurge": {},
                    "f:maxUnavailable": {}
                  },
                  "f:type": {}
                }
              }
            }
          },
          {
            "manager": "kube-controller-manager",
            "operation": "Update",
            "apiVersion": "apps/v1",
            "time": "2023-08-25T08:17:52Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": {
                "f:currentNumberScheduled": {},
                "f:desiredNumberScheduled": {},
                "f:numberAvailable": {},
                "f:numberMisscheduled": {},
                "f:numberReady": {},
                "f:observedGeneration": {},
                "f:updatedNumberScheduled": {}
              }
            },
            "subresource": "status"
          }
        ]
      },
      "spec": {
        "selector": {
          "matchLabels": {
            "k8s-app": "machine-config-server"
          }
        },
        "template": {
          "metadata": {
            "name": "machine-config-server",
            "creationTimestamp": null,
            "labels": {
              "k8s-app": "machine-config-server"
            },
            "annotations": {
              "target.workload.openshift.io/management": "{\"effect\": \"PreferredDuringScheduling\"}"
            }
          },
          "spec": {
            "volumes": [
              {
                "name": "node-bootstrap-token",
                "secret": {
                  "secretName": "node-bootstrapper-token",
                  "defaultMode": 420
                }
              },
              {
                "name": "certs",
                "secret": {
                  "secretName": "machine-config-server-tls",
                  "defaultMode": 420
                }
              }
            ],
            "containers": [
              {
                "name": "machine-config-server",
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:eba22f67551d60674a8c9550b9284f2a0540b2a69f5e3c12b7cb2d943684b2a3",
                "command": [
                  "/usr/bin/machine-config-server"
                ],
                "args": [
                  "start",
                  "--apiserver-url=https://api-int.aws-cls-os.itja.p1.openshiftapps.com:6443"
                ],
                "resources": {
                  "requests": {
                    "cpu": "20m",
                    "memory": "50Mi"
                  }
                },
                "volumeMounts": [
                  {
                    "name": "certs",
                    "mountPath": "/etc/ssl/mcs"
                  },
                  {
                    "name": "node-bootstrap-token",
                    "mountPath": "/etc/mcs/bootstrap-token"
                  }
                ],
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "FallbackToLogsOnError",
                "imagePullPolicy": "IfNotPresent"
              }
            ],
            "restartPolicy": "Always",
            "terminationGracePeriodSeconds": 30,
            "dnsPolicy": "ClusterFirst",
            "nodeSelector": {
              "node-role.kubernetes.io/master": ""
            },
            "serviceAccountName": "machine-config-server",
            "serviceAccount": "machine-config-server",
            "hostNetwork": true,
            "securityContext": {},
            "schedulerName": "default-scheduler",
            "tolerations": [
              {
                "key": "node-role.kubernetes.io/master",
                "operator": "Exists",
                "effect": "NoSchedule"
              },
              {
                "key": "node-role.kubernetes.io/etcd",
                "operator": "Exists",
                "effect": "NoSchedule"
              }
            ],
            "priorityClassName": "system-cluster-critical"
          }
        },
        "updateStrategy": {
          "type": "RollingUpdate",
          "rollingUpdate": {
            "maxUnavailable": 1,
            "maxSurge": 0
          }
        },
        "revisionHistoryLimit": 10
      },
      "status": {
        "currentNumberScheduled": 3,
        "numberMisscheduled": 0,
        "desiredNumberScheduled": 3,
        "numberReady": 3,
        "observedGeneration": 1,
        "updatedNumberScheduled": 3,
        "numberAvailable": 3
      }
    },
    {
      "metadata": {
        "name": "node-exporter",
        "namespace": "openshift-monitoring",
        "uid": "ca4fbb59-50d2-4b78-ac20-3e11ef17124b",
        "resourceVersion": "65382",
        "generation": 1,
        "creationTimestamp": "2023-08-25T07:51:38Z",
        "labels": {
          "app.kubernetes.io/component": "exporter",
          "app.kubernetes.io/managed-by": "cluster-monitoring-operator",
          "app.kubernetes.io/name": "node-exporter",
          "app.kubernetes.io/part-of": "openshift-monitoring",
          "app.kubernetes.io/version": "1.5.0"
        },
        "annotations": {
          "deprecated.daemonset.template.generation": "1"
        },
        "managedFields": [
          {
            "manager": "operator",
            "operation": "Update",
            "apiVersion": "apps/v1",
            "time": "2023-08-25T07:51:38Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:deprecated.daemonset.template.generation": {}
                },
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/component": {},
                  "f:app.kubernetes.io/managed-by": {},
                  "f:app.kubernetes.io/name": {},
                  "f:app.kubernetes.io/part-of": {},
                  "f:app.kubernetes.io/version": {}
                }
              },
              "f:spec": {
                "f:revisionHistoryLimit": {},
                "f:selector": {},
                "f:template": {
                  "f:metadata": {
                    "f:annotations": {
                      ".": {},
                      "f:kubectl.kubernetes.io/default-container": {},
                      "f:target.workload.openshift.io/management": {}
                    },
                    "f:labels": {
                      ".": {},
                      "f:app.kubernetes.io/component": {},
                      "f:app.kubernetes.io/managed-by": {},
                      "f:app.kubernetes.io/name": {},
                      "f:app.kubernetes.io/part-of": {},
                      "f:app.kubernetes.io/version": {}
                    }
                  },
                  "f:spec": {
                    "f:automountServiceAccountToken": {},
                    "f:containers": {
                      "k:{\"name\":\"kube-rbac-proxy\"}": {
                        ".": {},
                        "f:args": {},
                        "f:env": {
                          ".": {},
                          "k:{\"name\":\"IP\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": {
                              ".": {},
                              "f:fieldRef": {}
                            }
                          }
                        },
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:name": {},
                        "f:ports": {
                          ".": {},
                          "k:{\"containerPort\":9100,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:hostPort": {},
                            "f:name": {},
                            "f:protocol": {}
                          }
                        },
                        "f:resources": {
                          ".": {},
                          "f:requests": {
                            ".": {},
                            "f:cpu": {},
                            "f:memory": {}
                          }
                        },
                        "f:securityContext": {
                          ".": {},
                          "f:allowPrivilegeEscalation": {},
                          "f:capabilities": {
                            ".": {},
                            "f:drop": {}
                          },
                          "f:readOnlyRootFilesystem": {},
                          "f:runAsGroup": {},
                          "f:runAsNonRoot": {},
                          "f:runAsUser": {}
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/etc/kube-rbac-policy\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {},
                            "f:readOnly": {}
                          },
                          "k:{\"mountPath\":\"/etc/tls/client\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/etc/tls/private\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        }
                      },
                      "k:{\"name\":\"node-exporter\"}": {
                        ".": {},
                        "f:args": {},
                        "f:command": {},
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:name": {},
                        "f:resources": {
                          ".": {},
                          "f:requests": {
                            ".": {},
                            "f:cpu": {},
                            "f:memory": {}
                          }
                        },
                        "f:securityContext": {},
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/host/root\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:mountPropagation": {},
                            "f:name": {},
                            "f:readOnly": {}
                          },
                          "k:{\"mountPath\":\"/host/sys\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:mountPropagation": {},
                            "f:name": {},
                            "f:readOnly": {}
                          },
                          "k:{\"mountPath\":\"/var/node_exporter/textfile\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {},
                            "f:readOnly": {}
                          }
                        },
                        "f:workingDir": {}
                      }
                    },
                    "f:dnsPolicy": {},
                    "f:hostNetwork": {},
                    "f:hostPID": {},
                    "f:initContainers": {
                      ".": {},
                      "k:{\"name\":\"init-textfile\"}": {
                        ".": {},
                        "f:command": {},
                        "f:env": {
                          ".": {},
                          "k:{\"name\":\"TMPDIR\"}": {
                            ".": {},
                            "f:name": {},
                            "f:value": {}
                          }
                        },
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:name": {},
                        "f:resources": {
                          ".": {},
                          "f:requests": {
                            ".": {},
                            "f:cpu": {},
                            "f:memory": {}
                          }
                        },
                        "f:securityContext": {
                          ".": {},
                          "f:privileged": {},
                          "f:runAsUser": {}
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/var/log/wtmp\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {},
                            "f:readOnly": {}
                          },
                          "k:{\"mountPath\":\"/var/node_exporter/textfile\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        },
                        "f:workingDir": {}
                      }
                    },
                    "f:nodeSelector": {},
                    "f:priorityClassName": {},
                    "f:restartPolicy": {},
                    "f:schedulerName": {},
                    "f:securityContext": {},
                    "f:serviceAccount": {},
                    "f:serviceAccountName": {},
                    "f:terminationGracePeriodSeconds": {},
                    "f:tolerations": {},
                    "f:volumes": {
                      ".": {},
                      "k:{\"name\":\"metrics-client-ca\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"node-exporter-kube-rbac-proxy-config\"}": {
                        ".": {},
                        "f:name": {},
                        "f:secret": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:secretName": {}
                        }
                      },
                      "k:{\"name\":\"node-exporter-textfile\"}": {
                        ".": {},
                        "f:emptyDir": {},
                        "f:name": {}
                      },
                      "k:{\"name\":\"node-exporter-tls\"}": {
                        ".": {},
                        "f:name": {},
                        "f:secret": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:secretName": {}
                        }
                      },
                      "k:{\"name\":\"node-exporter-wtmp\"}": {
                        ".": {},
                        "f:hostPath": {
                          ".": {},
                          "f:path": {},
                          "f:type": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"root\"}": {
                        ".": {},
                        "f:hostPath": {
                          ".": {},
                          "f:path": {},
                          "f:type": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"sys\"}": {
                        ".": {},
                        "f:hostPath": {
                          ".": {},
                          "f:path": {},
                          "f:type": {}
                        },
                        "f:name": {}
                      }
                    }
                  }
                },
                "f:updateStrategy": {
                  "f:rollingUpdate": {
                    ".": {},
                    "f:maxSurge": {},
                    "f:maxUnavailable": {}
                  },
                  "f:type": {}
                }
              }
            }
          },
          {
            "manager": "kube-controller-manager",
            "operation": "Update",
            "apiVersion": "apps/v1",
            "time": "2023-08-25T08:20:08Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": {
                "f:currentNumberScheduled": {},
                "f:desiredNumberScheduled": {},
                "f:numberAvailable": {},
                "f:numberReady": {},
                "f:observedGeneration": {},
                "f:updatedNumberScheduled": {}
              }
            },
            "subresource": "status"
          }
        ]
      },
      "spec": {
        "selector": {
          "matchLabels": {
            "app.kubernetes.io/component": "exporter",
            "app.kubernetes.io/name": "node-exporter",
            "app.kubernetes.io/part-of": "openshift-monitoring"
          }
        },
        "template": {
          "metadata": {
            "creationTimestamp": null,
            "labels": {
              "app.kubernetes.io/component": "exporter",
              "app.kubernetes.io/managed-by": "cluster-monitoring-operator",
              "app.kubernetes.io/name": "node-exporter",
              "app.kubernetes.io/part-of": "openshift-monitoring",
              "app.kubernetes.io/version": "1.5.0"
            },
            "annotations": {
              "kubectl.kubernetes.io/default-container": "node-exporter",
              "target.workload.openshift.io/management": "{\"effect\": \"PreferredDuringScheduling\"}"
            }
          },
          "spec": {
            "volumes": [
              {
                "name": "sys",
                "hostPath": {
                  "path": "/sys",
                  "type": ""
                }
              },
              {
                "name": "root",
                "hostPath": {
                  "path": "/",
                  "type": ""
                }
              },
              {
                "name": "node-exporter-textfile",
                "emptyDir": {}
              },
              {
                "name": "node-exporter-tls",
                "secret": {
                  "secretName": "node-exporter-tls",
                  "defaultMode": 420
                }
              },
              {
                "name": "node-exporter-wtmp",
                "hostPath": {
                  "path": "/var/log/wtmp",
                  "type": "File"
                }
              },
              {
                "name": "metrics-client-ca",
                "configMap": {
                  "name": "metrics-client-ca",
                  "defaultMode": 420
                }
              },
              {
                "name": "node-exporter-kube-rbac-proxy-config",
                "secret": {
                  "secretName": "node-exporter-kube-rbac-proxy-config",
                  "defaultMode": 420
                }
              }
            ],
            "initContainers": [
              {
                "name": "init-textfile",
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:4b7a2f69899688b7c7854c10a58d710347da0e737f5fdeccbb9e05e3349baaf1",
                "command": [
                  "/bin/sh",
                  "-c",
                  "[[ ! -d /node_exporter/collectors/init ]] || find /node_exporter/collectors/init -perm /111 -type f -exec {} \\;"
                ],
                "workingDir": "/var/node_exporter/textfile",
                "env": [
                  {
                    "name": "TMPDIR",
                    "value": "/tmp"
                  }
                ],
                "resources": {
                  "requests": {
                    "cpu": "1m",
                    "memory": "1Mi"
                  }
                },
                "volumeMounts": [
                  {
                    "name": "node-exporter-textfile",
                    "mountPath": "/var/node_exporter/textfile"
                  },
                  {
                    "name": "node-exporter-wtmp",
                    "readOnly": true,
                    "mountPath": "/var/log/wtmp"
                  }
                ],
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "FallbackToLogsOnError",
                "imagePullPolicy": "IfNotPresent",
                "securityContext": {
                  "privileged": true,
                  "runAsUser": 0
                }
              }
            ],
            "containers": [
              {
                "name": "node-exporter",
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:4b7a2f69899688b7c7854c10a58d710347da0e737f5fdeccbb9e05e3349baaf1",
                "command": [
                  "/bin/sh",
                  "-c",
                  "export GOMAXPROCS=4\n# We don't take CPU affinity into account as the container doesn't have integer CPU requests.\n# In case of error, fallback to the default value.\nNUM_CPUS=$(grep -c '^processor' \"/proc/cpuinfo\" 2>/dev/null || echo \"0\")\nif [ \"$NUM_CPUS\" -lt \"$GOMAXPROCS\" ]; then\n  export GOMAXPROCS=\"$NUM_CPUS\"\nfi\necho \"ts=$(date --iso-8601=seconds) num_cpus=$NUM_CPUS gomaxprocs=$GOMAXPROCS\"\nexec /bin/node_exporter \"$0\" \"$@\"\n"
                ],
                "args": [
                  "--web.listen-address=127.0.0.1:9100",
                  "--path.sysfs=/host/sys",
                  "--path.rootfs=/host/root",
                  "--path.udev.data=/host/root/run/udev/data",
                  "--no-collector.wifi",
                  "--collector.filesystem.mount-points-exclude=^/(dev|proc|sys|run/k3s/containerd/.+|var/lib/docker/.+|var/lib/kubelet/pods/.+)($|/)",
                  "--collector.netclass.ignored-devices=^(veth.*|[a-f0-9]{15}|enP.*|ovn-k8s-mp[0-9]*|br-ex|br-int|br-ext|br[0-9]*|tun[0-9]*|cali[a-f0-9]*)$",
                  "--collector.netdev.device-exclude=^(veth.*|[a-f0-9]{15}|enP.*|ovn-k8s-mp[0-9]*|br-ex|br-int|br-ext|br[0-9]*|tun[0-9]*|cali[a-f0-9]*)$",
                  "--collector.cpu.info",
                  "--collector.textfile.directory=/var/node_exporter/textfile",
                  "--no-collector.btrfs",
                  "--no-collector.cpufreq",
                  "--no-collector.tcpstat",
                  "--collector.netdev",
                  "--collector.netclass",
                  "--no-collector.buddyinfo"
                ],
                "workingDir": "/var/node_exporter/textfile",
                "resources": {
                  "requests": {
                    "cpu": "8m",
                    "memory": "32Mi"
                  }
                },
                "volumeMounts": [
                  {
                    "name": "sys",
                    "readOnly": true,
                    "mountPath": "/host/sys",
                    "mountPropagation": "HostToContainer"
                  },
                  {
                    "name": "root",
                    "readOnly": true,
                    "mountPath": "/host/root",
                    "mountPropagation": "HostToContainer"
                  },
                  {
                    "name": "node-exporter-textfile",
                    "readOnly": true,
                    "mountPath": "/var/node_exporter/textfile"
                  }
                ],
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "FallbackToLogsOnError",
                "imagePullPolicy": "IfNotPresent",
                "securityContext": {}
              },
              {
                "name": "kube-rbac-proxy",
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:eadc41af9cda0fa7e97b421f7b314024f7757cc545e87d5c99f96b03f335cf79",
                "args": [
                  "--logtostderr",
                  "--secure-listen-address=[$(IP)]:9100",
                  "--tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256",
                  "--upstream=http://127.0.0.1:9100/",
                  "--tls-cert-file=/etc/tls/private/tls.crt",
                  "--tls-private-key-file=/etc/tls/private/tls.key",
                  "--client-ca-file=/etc/tls/client/client-ca.crt",
                  "--config-file=/etc/kube-rbac-policy/config.yaml",
                  "--tls-min-version=VersionTLS12"
                ],
                "ports": [
                  {
                    "name": "https",
                    "hostPort": 9100,
                    "containerPort": 9100,
                    "protocol": "TCP"
                  }
                ],
                "env": [
                  {
                    "name": "IP",
                    "valueFrom": {
                      "fieldRef": {
                        "apiVersion": "v1",
                        "fieldPath": "status.podIP"
                      }
                    }
                  }
                ],
                "resources": {
                  "requests": {
                    "cpu": "1m",
                    "memory": "15Mi"
                  }
                },
                "volumeMounts": [
                  {
                    "name": "node-exporter-tls",
                    "mountPath": "/etc/tls/private"
                  },
                  {
                    "name": "metrics-client-ca",
                    "mountPath": "/etc/tls/client"
                  },
                  {
                    "name": "node-exporter-kube-rbac-proxy-config",
                    "readOnly": true,
                    "mountPath": "/etc/kube-rbac-policy"
                  }
                ],
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "FallbackToLogsOnError",
                "imagePullPolicy": "IfNotPresent",
                "securityContext": {
                  "capabilities": {
                    "drop": [
                      "ALL"
                    ]
                  },
                  "runAsUser": 65532,
                  "runAsGroup": 65532,
                  "runAsNonRoot": true,
                  "readOnlyRootFilesystem": true,
                  "allowPrivilegeEscalation": false
                }
              }
            ],
            "restartPolicy": "Always",
            "terminationGracePeriodSeconds": 30,
            "dnsPolicy": "ClusterFirst",
            "nodeSelector": {
              "kubernetes.io/os": "linux"
            },
            "serviceAccountName": "node-exporter",
            "serviceAccount": "node-exporter",
            "automountServiceAccountToken": true,
            "hostNetwork": true,
            "hostPID": true,
            "securityContext": {},
            "schedulerName": "default-scheduler",
            "tolerations": [
              {
                "operator": "Exists"
              }
            ],
            "priorityClassName": "system-cluster-critical"
          }
        },
        "updateStrategy": {
          "type": "RollingUpdate",
          "rollingUpdate": {
            "maxUnavailable": "10%",
            "maxSurge": 0
          }
        },
        "revisionHistoryLimit": 10
      },
      "status": {
        "currentNumberScheduled": 7,
        "numberMisscheduled": 0,
        "desiredNumberScheduled": 7,
        "numberReady": 7,
        "observedGeneration": 1,
        "updatedNumberScheduled": 7,
        "numberAvailable": 7
      }
    },
    {
      "metadata": {
        "name": "sre-dns-latency-exporter",
        "namespace": "openshift-monitoring",
        "uid": "8a0da389-6136-4831-ac4c-694c82c6d68b",
        "resourceVersion": "65399",
        "generation": 1,
        "creationTimestamp": "2023-08-25T08:00:39Z",
        "labels": {
          "hive.openshift.io/managed": "true",
          "name": "sre-dns-latency-exporter"
        },
        "annotations": {
          "deprecated.daemonset.template.generation": "1",
          "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"DaemonSet\",\"metadata\":{\"annotations\":{},\"labels\":{\"hive.openshift.io/managed\":\"true\",\"name\":\"sre-dns-latency-exporter\"},\"name\":\"sre-dns-latency-exporter\",\"namespace\":\"openshift-monitoring\"},\"spec\":{\"selector\":{\"matchLabels\":{\"name\":\"sre-dns-latency-exporter\"}},\"template\":{\"metadata\":{\"labels\":{\"name\":\"sre-dns-latency-exporter\"},\"name\":\"sre-dns-latency-exporter\"},\"spec\":{\"containers\":[{\"command\":[\"/bin/sh\",\"/monitor/start.sh\"],\"env\":[{\"name\":\"PYTHONPATH\",\"value\":\"/openshift-python/packages:/support/packages\"}],\"image\":\"quay.io/app-sre/managed-prometheus-exporter-base:latest\",\"imagePullPolicy\":\"IfNotPresent\",\"livenessProbe\":{\"failureThreshold\":2,\"httpGet\":{\"path\":\"/\",\"port\":8080},\"initialDelaySeconds\":420,\"periodSeconds\":360,\"timeoutSeconds\":240},\"name\":\"main\",\"ports\":[{\"containerPort\":8080,\"protocol\":\"TCP\"}],\"readinessProbe\":{\"httpGet\":{\"path\":\"/\",\"port\":8080},\"initialDelaySeconds\":3,\"timeoutSeconds\":240},\"volumeMounts\":[{\"mountPath\":\"/monitor\",\"name\":\"monitor-volume\",\"readOnly\":true},{\"mountPath\":\"/etc/pki/ca-trust/extracted/pem\",\"name\":\"trusted-ca-bundle\",\"readOnly\":true}],\"workingDir\":\"/monitor\"}],\"dnsPolicy\":\"ClusterFirst\",\"restartPolicy\":\"Always\",\"serviceAccountName\":\"sre-dns-latency-exporter\",\"tolerations\":[{\"operator\":\"Exists\"}],\"volumes\":[{\"configMap\":{\"name\":\"sre-dns-latency-exporter-code\"},\"name\":\"monitor-volume\"},{\"configMap\":{\"defaultMode\":420,\"items\":[{\"key\":\"ca-bundle.crt\",\"path\":\"tls-ca-bundle.pem\"}],\"name\":\"sre-dns-latency-exporter-trusted-ca-bundle\"},\"name\":\"trusted-ca-bundle\"}]}}}}\n"
        },
        "managedFields": [
          {
            "manager": "manager",
            "operation": "Update",
            "apiVersion": "apps/v1",
            "time": "2023-08-25T08:00:39Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:deprecated.daemonset.template.generation": {},
                  "f:kubectl.kubernetes.io/last-applied-configuration": {}
                },
                "f:labels": {
                  ".": {},
                  "f:hive.openshift.io/managed": {},
                  "f:name": {}
                }
              },
              "f:spec": {
                "f:revisionHistoryLimit": {},
                "f:selector": {},
                "f:template": {
                  "f:metadata": {
                    "f:labels": {
                      ".": {},
                      "f:name": {}
                    },
                    "f:name": {}
                  },
                  "f:spec": {
                    "f:containers": {
                      "k:{\"name\":\"main\"}": {
                        ".": {},
                        "f:command": {},
                        "f:env": {
                          ".": {},
                          "k:{\"name\":\"PYTHONPATH\"}": {
                            ".": {},
                            "f:name": {},
                            "f:value": {}
                          }
                        },
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:livenessProbe": {
                          ".": {},
                          "f:failureThreshold": {},
                          "f:httpGet": {
                            ".": {},
                            "f:path": {},
                            "f:port": {},
                            "f:scheme": {}
                          },
                          "f:initialDelaySeconds": {},
                          "f:periodSeconds": {},
                          "f:successThreshold": {},
                          "f:timeoutSeconds": {}
                        },
                        "f:name": {},
                        "f:ports": {
                          ".": {},
                          "k:{\"containerPort\":8080,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:protocol": {}
                          }
                        },
                        "f:readinessProbe": {
                          ".": {},
                          "f:failureThreshold": {},
                          "f:httpGet": {
                            ".": {},
                            "f:path": {},
                            "f:port": {},
                            "f:scheme": {}
                          },
                          "f:initialDelaySeconds": {},
                          "f:periodSeconds": {},
                          "f:successThreshold": {},
                          "f:timeoutSeconds": {}
                        },
                        "f:resources": {},
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/etc/pki/ca-trust/extracted/pem\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {},
                            "f:readOnly": {}
                          },
                          "k:{\"mountPath\":\"/monitor\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {},
                            "f:readOnly": {}
                          }
                        },
                        "f:workingDir": {}
                      }
                    },
                    "f:dnsPolicy": {},
                    "f:restartPolicy": {},
                    "f:schedulerName": {},
                    "f:securityContext": {},
                    "f:serviceAccount": {},
                    "f:serviceAccountName": {},
                    "f:terminationGracePeriodSeconds": {},
                    "f:tolerations": {},
                    "f:volumes": {
                      ".": {},
                      "k:{\"name\":\"monitor-volume\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"trusted-ca-bundle\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:items": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      }
                    }
                  }
                },
                "f:updateStrategy": {
                  "f:rollingUpdate": {
                    ".": {},
                    "f:maxSurge": {},
                    "f:maxUnavailable": {}
                  },
                  "f:type": {}
                }
              }
            }
          },
          {
            "manager": "kube-controller-manager",
            "operation": "Update",
            "apiVersion": "apps/v1",
            "time": "2023-08-25T08:20:09Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": {
                "f:currentNumberScheduled": {},
                "f:desiredNumberScheduled": {},
                "f:numberAvailable": {},
                "f:numberReady": {},
                "f:observedGeneration": {},
                "f:updatedNumberScheduled": {}
              }
            },
            "subresource": "status"
          }
        ]
      },
      "spec": {
        "selector": {
          "matchLabels": {
            "name": "sre-dns-latency-exporter"
          }
        },
        "template": {
          "metadata": {
            "name": "sre-dns-latency-exporter",
            "creationTimestamp": null,
            "labels": {
              "name": "sre-dns-latency-exporter"
            }
          },
          "spec": {
            "volumes": [
              {
                "name": "monitor-volume",
                "configMap": {
                  "name": "sre-dns-latency-exporter-code",
                  "defaultMode": 420
                }
              },
              {
                "name": "trusted-ca-bundle",
                "configMap": {
                  "name": "sre-dns-latency-exporter-trusted-ca-bundle",
                  "items": [
                    {
                      "key": "ca-bundle.crt",
                      "path": "tls-ca-bundle.pem"
                    }
                  ],
                  "defaultMode": 420
                }
              }
            ],
            "containers": [
              {
                "name": "main",
                "image": "quay.io/app-sre/managed-prometheus-exporter-base:latest",
                "command": [
                  "/bin/sh",
                  "/monitor/start.sh"
                ],
                "workingDir": "/monitor",
                "ports": [
                  {
                    "containerPort": 8080,
                    "protocol": "TCP"
                  }
                ],
                "env": [
                  {
                    "name": "PYTHONPATH",
                    "value": "/openshift-python/packages:/support/packages"
                  }
                ],
                "resources": {},
                "volumeMounts": [
                  {
                    "name": "monitor-volume",
                    "readOnly": true,
                    "mountPath": "/monitor"
                  },
                  {
                    "name": "trusted-ca-bundle",
                    "readOnly": true,
                    "mountPath": "/etc/pki/ca-trust/extracted/pem"
                  }
                ],
                "livenessProbe": {
                  "httpGet": {
                    "path": "/",
                    "port": 8080,
                    "scheme": "HTTP"
                  },
                  "initialDelaySeconds": 420,
                  "timeoutSeconds": 240,
                  "periodSeconds": 360,
                  "successThreshold": 1,
                  "failureThreshold": 2
                },
                "readinessProbe": {
                  "httpGet": {
                    "path": "/",
                    "port": 8080,
                    "scheme": "HTTP"
                  },
                  "initialDelaySeconds": 3,
                  "timeoutSeconds": 240,
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "failureThreshold": 3
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "imagePullPolicy": "IfNotPresent"
              }
            ],
            "restartPolicy": "Always",
            "terminationGracePeriodSeconds": 30,
            "dnsPolicy": "ClusterFirst",
            "serviceAccountName": "sre-dns-latency-exporter",
            "serviceAccount": "sre-dns-latency-exporter",
            "securityContext": {},
            "schedulerName": "default-scheduler",
            "tolerations": [
              {
                "operator": "Exists"
              }
            ]
          }
        },
        "updateStrategy": {
          "type": "RollingUpdate",
          "rollingUpdate": {
            "maxUnavailable": 1,
            "maxSurge": 0
          }
        },
        "revisionHistoryLimit": 10
      },
      "status": {
        "currentNumberScheduled": 7,
        "numberMisscheduled": 0,
        "desiredNumberScheduled": 7,
        "numberReady": 7,
        "observedGeneration": 1,
        "updatedNumberScheduled": 7,
        "numberAvailable": 7
      }
    },
    {
      "metadata": {
        "name": "multus",
        "namespace": "openshift-multus",
        "uid": "a08844cf-3425-4460-bd7d-f85f890f9bcc",
        "resourceVersion": "65381",
        "generation": 1,
        "creationTimestamp": "2023-08-25T07:43:30Z",
        "labels": {
          "networkoperator.openshift.io/generates-operator-status": "stand-alone"
        },
        "annotations": {
          "deprecated.daemonset.template.generation": "1",
          "kubernetes.io/description": "This daemon set launches the Multus networking component on each node.\n",
          "release.openshift.io/version": "4.13.9"
        },
        "ownerReferences": [
          {
            "apiVersion": "operator.openshift.io/v1",
            "kind": "Network",
            "name": "cluster",
            "uid": "53e9017c-f35d-4e74-93d8-a278bb08cf90",
            "controller": true,
            "blockOwnerDeletion": true
          }
        ],
        "managedFields": [
          {
            "manager": "cluster-network-operator/operconfig",
            "operation": "Apply",
            "apiVersion": "apps/v1",
            "time": "2023-08-25T07:43:30Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  "f:kubernetes.io/description": {},
                  "f:release.openshift.io/version": {}
                },
                "f:labels": {
                  "f:networkoperator.openshift.io/generates-operator-status": {}
                },
                "f:ownerReferences": {
                  "k:{\"uid\":\"53e9017c-f35d-4e74-93d8-a278bb08cf90\"}": {}
                }
              },
              "f:spec": {
                "f:selector": {},
                "f:template": {
                  "f:metadata": {
                    "f:annotations": {
                      "f:target.workload.openshift.io/management": {}
                    },
                    "f:labels": {
                      "f:app": {},
                      "f:component": {},
                      "f:openshift.io/component": {},
                      "f:type": {}
                    }
                  },
                  "f:spec": {
                    "f:containers": {
                      "k:{\"name\":\"kube-multus\"}": {
                        ".": {},
                        "f:args": {},
                        "f:command": {},
                        "f:env": {
                          "k:{\"name\":\"DEFAULT_SOURCE_DIRECTORY\"}": {
                            ".": {},
                            "f:name": {},
                            "f:value": {}
                          },
                          "k:{\"name\":\"KUBERNETES_SERVICE_HOST\"}": {
                            ".": {},
                            "f:name": {},
                            "f:value": {}
                          },
                          "k:{\"name\":\"KUBERNETES_SERVICE_PORT\"}": {
                            ".": {},
                            "f:name": {},
                            "f:value": {}
                          },
                          "k:{\"name\":\"RHEL8_SOURCE_DIRECTORY\"}": {
                            ".": {},
                            "f:name": {},
                            "f:value": {}
                          },
                          "k:{\"name\":\"RHEL9_SOURCE_DIRECTORY\"}": {
                            ".": {},
                            "f:name": {},
                            "f:value": {}
                          }
                        },
                        "f:image": {},
                        "f:name": {},
                        "f:resources": {
                          "f:requests": {
                            "f:cpu": {},
                            "f:memory": {}
                          }
                        },
                        "f:securityContext": {
                          "f:privileged": {}
                        },
                        "f:volumeMounts": {
                          "k:{\"mountPath\":\"/entrypoint\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/host/etc/cni/net.d\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/host/etc/os-release\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/host/opt/cni/bin\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/host/var/run/multus/cni/net.d\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        }
                      }
                    },
                    "f:hostNetwork": {},
                    "f:nodeSelector": {},
                    "f:priorityClassName": {},
                    "f:serviceAccountName": {},
                    "f:terminationGracePeriodSeconds": {},
                    "f:tolerations": {},
                    "f:volumes": {
                      "k:{\"name\":\"cni-binary-copy\"}": {
                        ".": {},
                        "f:configMap": {
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"cnibin\"}": {
                        ".": {},
                        "f:hostPath": {
                          "f:path": {},
                          "f:type": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"multus-cni-dir\"}": {
                        ".": {},
                        "f:hostPath": {
                          "f:path": {},
                          "f:type": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"os-release\"}": {
                        ".": {},
                        "f:hostPath": {
                          "f:path": {},
                          "f:type": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"system-cni-dir\"}": {
                        ".": {},
                        "f:hostPath": {
                          "f:path": {},
                          "f:type": {}
                        },
                        "f:name": {}
                      }
                    }
                  }
                },
                "f:updateStrategy": {
                  "f:rollingUpdate": {
                    "f:maxUnavailable": {}
                  },
                  "f:type": {}
                }
              }
            }
          },
          {
            "manager": "kube-controller-manager",
            "operation": "Update",
            "apiVersion": "apps/v1",
            "time": "2023-08-25T08:20:08Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": {
                "f:currentNumberScheduled": {},
                "f:desiredNumberScheduled": {},
                "f:numberAvailable": {},
                "f:numberReady": {},
                "f:observedGeneration": {},
                "f:updatedNumberScheduled": {}
              }
            },
            "subresource": "status"
          }
        ]
      },
      "spec": {
        "selector": {
          "matchLabels": {
            "app": "multus"
          }
        },
        "template": {
          "metadata": {
            "creationTimestamp": null,
            "labels": {
              "app": "multus",
              "component": "network",
              "openshift.io/component": "network",
              "type": "infra"
            },
            "annotations": {
              "target.workload.openshift.io/management": "{\"effect\": \"PreferredDuringScheduling\"}"
            }
          },
          "spec": {
            "volumes": [
              {
                "name": "system-cni-dir",
                "hostPath": {
                  "path": "/etc/kubernetes/cni/net.d",
                  "type": "Directory"
                }
              },
              {
                "name": "multus-cni-dir",
                "hostPath": {
                  "path": "/var/run/multus/cni/net.d",
                  "type": "Directory"
                }
              },
              {
                "name": "cnibin",
                "hostPath": {
                  "path": "/var/lib/cni/bin",
                  "type": "Directory"
                }
              },
              {
                "name": "os-release",
                "hostPath": {
                  "path": "/etc/os-release",
                  "type": "File"
                }
              },
              {
                "name": "cni-binary-copy",
                "configMap": {
                  "name": "cni-copy-resources",
                  "defaultMode": 484
                }
              }
            ],
            "containers": [
              {
                "name": "kube-multus",
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:107a711ff6596bbfafd264699322e77368a96d32dc7194ce16a3040cdcfebc1a",
                "command": [
                  "/bin/bash",
                  "-ec",
                  "--"
                ],
                "args": [
                  "/entrypoint/cnibincopy.sh; exec /entrypoint.sh --multus-conf-file=auto --multus-autoconfig-dir=/host/var/run/multus/cni/net.d --multus-kubeconfig-file-host=/etc/kubernetes/cni/net.d/multus.d/multus.kubeconfig --readiness-indicator-file=/var/run/multus/cni/net.d/10-ovn-kubernetes.conf --cleanup-config-on-exit=true --namespace-isolation=true --multus-log-level=verbose --cni-version=0.3.1 --additional-bin-dir=/opt/multus/bin --skip-multus-binary-copy=true - \"--global-namespaces=default,openshift-multus,openshift-sriov-network-operator\"\n"
                ],
                "env": [
                  {
                    "name": "RHEL8_SOURCE_DIRECTORY",
                    "value": "/usr/src/multus-cni/rhel8/bin/"
                  },
                  {
                    "name": "RHEL9_SOURCE_DIRECTORY",
                    "value": "/usr/src/multus-cni/rhel9/bin/"
                  },
                  {
                    "name": "DEFAULT_SOURCE_DIRECTORY",
                    "value": "/usr/src/multus-cni/bin/"
                  },
                  {
                    "name": "KUBERNETES_SERVICE_PORT",
                    "value": "6443"
                  },
                  {
                    "name": "KUBERNETES_SERVICE_HOST",
                    "value": "api-int.aws-cls-os.itja.p1.openshiftapps.com"
                  }
                ],
                "resources": {
                  "requests": {
                    "cpu": "10m",
                    "memory": "65Mi"
                  }
                },
                "volumeMounts": [
                  {
                    "name": "cni-binary-copy",
                    "mountPath": "/entrypoint"
                  },
                  {
                    "name": "os-release",
                    "mountPath": "/host/etc/os-release"
                  },
                  {
                    "name": "system-cni-dir",
                    "mountPath": "/host/etc/cni/net.d"
                  },
                  {
                    "name": "multus-cni-dir",
                    "mountPath": "/host/var/run/multus/cni/net.d"
                  },
                  {
                    "name": "cnibin",
                    "mountPath": "/host/opt/cni/bin"
                  }
                ],
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "imagePullPolicy": "IfNotPresent",
                "securityContext": {
                  "privileged": true
                }
              }
            ],
            "restartPolicy": "Always",
            "terminationGracePeriodSeconds": 10,
            "dnsPolicy": "ClusterFirst",
            "nodeSelector": {
              "kubernetes.io/os": "linux"
            },
            "serviceAccountName": "multus",
            "serviceAccount": "multus",
            "hostNetwork": true,
            "securityContext": {},
            "schedulerName": "default-scheduler",
            "tolerations": [
              {
                "operator": "Exists"
              }
            ],
            "priorityClassName": "system-node-critical"
          }
        },
        "updateStrategy": {
          "type": "RollingUpdate",
          "rollingUpdate": {
            "maxUnavailable": "10%",
            "maxSurge": 0
          }
        },
        "revisionHistoryLimit": 10
      },
      "status": {
        "currentNumberScheduled": 7,
        "numberMisscheduled": 0,
        "desiredNumberScheduled": 7,
        "numberReady": 7,
        "observedGeneration": 1,
        "updatedNumberScheduled": 7,
        "numberAvailable": 7
      }
    },
    {
      "metadata": {
        "name": "multus-additional-cni-plugins",
        "namespace": "openshift-multus",
        "uid": "206b5543-a088-41fe-bb84-f173b037461d",
        "resourceVersion": "65389",
        "generation": 1,
        "creationTimestamp": "2023-08-25T07:43:31Z",
        "labels": {
          "networkoperator.openshift.io/generates-operator-status": "stand-alone"
        },
        "annotations": {
          "deprecated.daemonset.template.generation": "1",
          "kubernetes.io/description": "This daemon installs and configures auxiliary CNI plugins on each node.\n",
          "release.openshift.io/version": "4.13.9"
        },
        "ownerReferences": [
          {
            "apiVersion": "operator.openshift.io/v1",
            "kind": "Network",
            "name": "cluster",
            "uid": "53e9017c-f35d-4e74-93d8-a278bb08cf90",
            "controller": true,
            "blockOwnerDeletion": true
          }
        ],
        "managedFields": [
          {
            "manager": "cluster-network-operator/operconfig",
            "operation": "Apply",
            "apiVersion": "apps/v1",
            "time": "2023-08-25T07:43:31Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  "f:kubernetes.io/description": {},
                  "f:release.openshift.io/version": {}
                },
                "f:labels": {
                  "f:networkoperator.openshift.io/generates-operator-status": {}
                },
                "f:ownerReferences": {
                  "k:{\"uid\":\"53e9017c-f35d-4e74-93d8-a278bb08cf90\"}": {}
                }
              },
              "f:spec": {
                "f:selector": {},
                "f:template": {
                  "f:metadata": {
                    "f:annotations": {
                      "f:target.workload.openshift.io/management": {}
                    },
                    "f:labels": {
                      "f:app": {},
                      "f:component": {},
                      "f:openshift.io/component": {},
                      "f:type": {}
                    }
                  },
                  "f:spec": {
                    "f:containers": {
                      "k:{\"name\":\"kube-multus-additional-cni-plugins\"}": {
                        ".": {},
                        "f:args": {},
                        "f:command": {},
                        "f:image": {},
                        "f:name": {},
                        "f:resources": {
                          "f:requests": {
                            "f:cpu": {},
                            "f:memory": {}
                          }
                        },
                        "f:securityContext": {
                          "f:privileged": {}
                        }
                      }
                    },
                    "f:hostNetwork": {},
                    "f:initContainers": {
                      "k:{\"name\":\"bond-cni-plugin\"}": {
                        ".": {},
                        "f:command": {},
                        "f:env": {
                          "k:{\"name\":\"DEFAULT_SOURCE_DIRECTORY\"}": {
                            ".": {},
                            "f:name": {},
                            "f:value": {}
                          },
                          "k:{\"name\":\"RHEL8_SOURCE_DIRECTORY\"}": {
                            ".": {},
                            "f:name": {},
                            "f:value": {}
                          },
                          "k:{\"name\":\"RHEL9_SOURCE_DIRECTORY\"}": {
                            ".": {},
                            "f:name": {},
                            "f:value": {}
                          }
                        },
                        "f:image": {},
                        "f:name": {},
                        "f:volumeMounts": {
                          "k:{\"mountPath\":\"/entrypoint\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/host/etc/os-release\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {},
                            "f:readOnly": {}
                          },
                          "k:{\"mountPath\":\"/host/opt/cni/bin\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        }
                      },
                      "k:{\"name\":\"cni-plugins\"}": {
                        ".": {},
                        "f:command": {},
                        "f:env": {
                          "k:{\"name\":\"DEFAULT_SOURCE_DIRECTORY\"}": {
                            ".": {},
                            "f:name": {},
                            "f:value": {}
                          },
                          "k:{\"name\":\"RHEL8_SOURCE_DIRECTORY\"}": {
                            ".": {},
                            "f:name": {},
                            "f:value": {}
                          },
                          "k:{\"name\":\"RHEL9_SOURCE_DIRECTORY\"}": {
                            ".": {},
                            "f:name": {},
                            "f:value": {}
                          }
                        },
                        "f:image": {},
                        "f:name": {},
                        "f:volumeMounts": {
                          "k:{\"mountPath\":\"/entrypoint\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/host/etc/cni/tuning/\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {},
                            "f:readOnly": {}
                          },
                          "k:{\"mountPath\":\"/host/etc/os-release\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {},
                            "f:readOnly": {}
                          },
                          "k:{\"mountPath\":\"/host/opt/cni/bin\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/sysctls\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        }
                      },
                      "k:{\"name\":\"egress-router-binary-copy\"}": {
                        ".": {},
                        "f:command": {},
                        "f:env": {
                          "k:{\"name\":\"DEFAULT_SOURCE_DIRECTORY\"}": {
                            ".": {},
                            "f:name": {},
                            "f:value": {}
                          },
                          "k:{\"name\":\"RHEL8_SOURCE_DIRECTORY\"}": {
                            ".": {},
                            "f:name": {},
                            "f:value": {}
                          },
                          "k:{\"name\":\"RHEL9_SOURCE_DIRECTORY\"}": {
                            ".": {},
                            "f:name": {},
                            "f:value": {}
                          }
                        },
                        "f:image": {},
                        "f:name": {},
                        "f:volumeMounts": {
                          "k:{\"mountPath\":\"/entrypoint\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/host/etc/os-release\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {},
                            "f:readOnly": {}
                          },
                          "k:{\"mountPath\":\"/host/opt/cni/bin\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        }
                      },
                      "k:{\"name\":\"routeoverride-cni\"}": {
                        ".": {},
                        "f:command": {},
                        "f:env": {
                          "k:{\"name\":\"DEFAULT_SOURCE_DIRECTORY\"}": {
                            ".": {},
                            "f:name": {},
                            "f:value": {}
                          },
                          "k:{\"name\":\"RHEL8_SOURCE_DIRECTORY\"}": {
                            ".": {},
                            "f:name": {},
                            "f:value": {}
                          },
                          "k:{\"name\":\"RHEL9_SOURCE_DIRECTORY\"}": {
                            ".": {},
                            "f:name": {},
                            "f:value": {}
                          }
                        },
                        "f:image": {},
                        "f:name": {},
                        "f:volumeMounts": {
                          "k:{\"mountPath\":\"/entrypoint\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/host/etc/os-release\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {},
                            "f:readOnly": {}
                          },
                          "k:{\"mountPath\":\"/host/opt/cni/bin\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        }
                      },
                      "k:{\"name\":\"whereabouts-cni\"}": {
                        ".": {},
                        "f:command": {},
                        "f:env": {
                          "k:{\"name\":\"CNI_BIN_DIR\"}": {
                            ".": {},
                            "f:name": {},
                            "f:value": {}
                          },
                          "k:{\"name\":\"CNI_CONF_DIR\"}": {
                            ".": {},
                            "f:name": {},
                            "f:value": {}
                          },
                          "k:{\"name\":\"KUBERNETES_SERVICE_HOST\"}": {
                            ".": {},
                            "f:name": {},
                            "f:value": {}
                          },
                          "k:{\"name\":\"KUBERNETES_SERVICE_PORT\"}": {
                            ".": {},
                            "f:name": {},
                            "f:value": {}
                          },
                          "k:{\"name\":\"SLEEP\"}": {
                            ".": {},
                            "f:name": {},
                            "f:value": {}
                          },
                          "k:{\"name\":\"WHEREABOUTS_NAMESPACE\"}": {
                            ".": {},
                            "f:name": {},
                            "f:value": {}
                          }
                        },
                        "f:image": {},
                        "f:name": {},
                        "f:resources": {
                          "f:requests": {
                            "f:cpu": {},
                            "f:memory": {}
                          }
                        },
                        "f:volumeMounts": {
                          "k:{\"mountPath\":\"/host/etc/cni/net.d\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/host/opt/cni/bin\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        }
                      },
                      "k:{\"name\":\"whereabouts-cni-bincopy\"}": {
                        ".": {},
                        "f:command": {},
                        "f:env": {
                          "k:{\"name\":\"DEFAULT_SOURCE_DIRECTORY\"}": {
                            ".": {},
                            "f:name": {},
                            "f:value": {}
                          },
                          "k:{\"name\":\"RHEL8_SOURCE_DIRECTORY\"}": {
                            ".": {},
                            "f:name": {},
                            "f:value": {}
                          },
                          "k:{\"name\":\"RHEL9_SOURCE_DIRECTORY\"}": {
                            ".": {},
                            "f:name": {},
                            "f:value": {}
                          }
                        },
                        "f:image": {},
                        "f:name": {},
                        "f:resources": {
                          "f:requests": {
                            "f:cpu": {},
                            "f:memory": {}
                          }
                        },
                        "f:volumeMounts": {
                          "k:{\"mountPath\":\"/entrypoint\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/host/etc/os-release\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {},
                            "f:readOnly": {}
                          },
                          "k:{\"mountPath\":\"/host/opt/cni/bin\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        }
                      }
                    },
                    "f:nodeSelector": {},
                    "f:priorityClassName": {},
                    "f:serviceAccountName": {},
                    "f:terminationGracePeriodSeconds": {},
                    "f:tolerations": {},
                    "f:volumes": {
                      "k:{\"name\":\"cni-binary-copy\"}": {
                        ".": {},
                        "f:configMap": {
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"cni-sysctl-allowlist\"}": {
                        ".": {},
                        "f:configMap": {
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"cnibin\"}": {
                        ".": {},
                        "f:hostPath": {
                          "f:path": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"multus-cni-dir\"}": {
                        ".": {},
                        "f:hostPath": {
                          "f:path": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"os-release\"}": {
                        ".": {},
                        "f:hostPath": {
                          "f:path": {},
                          "f:type": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"system-cni-dir\"}": {
                        ".": {},
                        "f:hostPath": {
                          "f:path": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"tuning-conf-dir\"}": {
                        ".": {},
                        "f:hostPath": {
                          "f:path": {},
                          "f:type": {}
                        },
                        "f:name": {}
                      }
                    }
                  }
                },
                "f:updateStrategy": {
                  "f:rollingUpdate": {
                    "f:maxUnavailable": {}
                  },
                  "f:type": {}
                }
              }
            }
          },
          {
            "manager": "kube-controller-manager",
            "operation": "Update",
            "apiVersion": "apps/v1",
            "time": "2023-08-25T08:20:08Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": {
                "f:currentNumberScheduled": {},
                "f:desiredNumberScheduled": {},
                "f:numberAvailable": {},
                "f:numberReady": {},
                "f:observedGeneration": {},
                "f:updatedNumberScheduled": {}
              }
            },
            "subresource": "status"
          }
        ]
      },
      "spec": {
        "selector": {
          "matchLabels": {
            "app": "multus-additional-cni-plugins"
          }
        },
        "template": {
          "metadata": {
            "creationTimestamp": null,
            "labels": {
              "app": "multus-additional-cni-plugins",
              "component": "network",
              "openshift.io/component": "network",
              "type": "infra"
            },
            "annotations": {
              "target.workload.openshift.io/management": "{\"effect\": \"PreferredDuringScheduling\"}"
            }
          },
          "spec": {
            "volumes": [
              {
                "name": "system-cni-dir",
                "hostPath": {
                  "path": "/etc/kubernetes/cni/net.d",
                  "type": ""
                }
              },
              {
                "name": "multus-cni-dir",
                "hostPath": {
                  "path": "/var/run/multus/cni/net.d",
                  "type": ""
                }
              },
              {
                "name": "cnibin",
                "hostPath": {
                  "path": "/var/lib/cni/bin",
                  "type": ""
                }
              },
              {
                "name": "os-release",
                "hostPath": {
                  "path": "/etc/os-release",
                  "type": "File"
                }
              },
              {
                "name": "cni-binary-copy",
                "configMap": {
                  "name": "cni-copy-resources",
                  "defaultMode": 484
                }
              },
              {
                "name": "tuning-conf-dir",
                "hostPath": {
                  "path": "/etc/cni/tuning/",
                  "type": "DirectoryOrCreate"
                }
              },
              {
                "name": "cni-sysctl-allowlist",
                "configMap": {
                  "name": "default-cni-sysctl-allowlist",
                  "defaultMode": 484
                }
              }
            ],
            "initContainers": [
              {
                "name": "egress-router-binary-copy",
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:55fa691e775ce7d116c9b28aeede76c37eb6f0f7c3f43292cbebfa32b7abc4db",
                "command": [
                  "/entrypoint/cnibincopy.sh"
                ],
                "env": [
                  {
                    "name": "RHEL8_SOURCE_DIRECTORY",
                    "value": "/usr/src/egress-router-cni/rhel8/bin/"
                  },
                  {
                    "name": "RHEL9_SOURCE_DIRECTORY",
                    "value": "/usr/src/egress-router-cni/rhel9/bin/"
                  },
                  {
                    "name": "DEFAULT_SOURCE_DIRECTORY",
                    "value": "/usr/src/egress-router-cni/bin/"
                  }
                ],
                "resources": {},
                "volumeMounts": [
                  {
                    "name": "cni-binary-copy",
                    "mountPath": "/entrypoint"
                  },
                  {
                    "name": "cnibin",
                    "mountPath": "/host/opt/cni/bin"
                  },
                  {
                    "name": "os-release",
                    "readOnly": true,
                    "mountPath": "/host/etc/os-release"
                  }
                ],
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "imagePullPolicy": "IfNotPresent"
              },
              {
                "name": "cni-plugins",
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:b3494f52065619c5f90c7886c7d71ae5285ae75bedce6659210db35230dd9f25",
                "command": [
                  "/bin/bash",
                  "-c",
                  "/entrypoint/cnibincopy.sh && cp -n /sysctls/allowlist.conf /host/etc/cni/tuning/"
                ],
                "env": [
                  {
                    "name": "RHEL8_SOURCE_DIRECTORY",
                    "value": "/usr/src/plugins/rhel8/bin/"
                  },
                  {
                    "name": "RHEL9_SOURCE_DIRECTORY",
                    "value": "/usr/src/plugins/rhel9/bin/"
                  },
                  {
                    "name": "DEFAULT_SOURCE_DIRECTORY",
                    "value": "/usr/src/plugins/bin/"
                  }
                ],
                "resources": {},
                "volumeMounts": [
                  {
                    "name": "cni-binary-copy",
                    "mountPath": "/entrypoint"
                  },
                  {
                    "name": "cnibin",
                    "mountPath": "/host/opt/cni/bin"
                  },
                  {
                    "name": "os-release",
                    "readOnly": true,
                    "mountPath": "/host/etc/os-release"
                  },
                  {
                    "name": "tuning-conf-dir",
                    "mountPath": "/host/etc/cni/tuning/"
                  },
                  {
                    "name": "cni-sysctl-allowlist",
                    "mountPath": "/sysctls"
                  }
                ],
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "imagePullPolicy": "IfNotPresent"
              },
              {
                "name": "bond-cni-plugin",
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:3c471b0ee7b5e154d29d8e91ccc897dcd315dbc652998b38df20b95fcfea5be4",
                "command": [
                  "/entrypoint/cnibincopy.sh"
                ],
                "env": [
                  {
                    "name": "RHEL8_SOURCE_DIRECTORY",
                    "value": "/bondcni/rhel8/"
                  },
                  {
                    "name": "RHEL9_SOURCE_DIRECTORY",
                    "value": "/bondcni/rhel9/"
                  },
                  {
                    "name": "DEFAULT_SOURCE_DIRECTORY",
                    "value": "/bondcni/"
                  }
                ],
                "resources": {},
                "volumeMounts": [
                  {
                    "name": "cni-binary-copy",
                    "mountPath": "/entrypoint"
                  },
                  {
                    "name": "cnibin",
                    "mountPath": "/host/opt/cni/bin"
                  },
                  {
                    "name": "os-release",
                    "readOnly": true,
                    "mountPath": "/host/etc/os-release"
                  }
                ],
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "imagePullPolicy": "IfNotPresent"
              },
              {
                "name": "routeoverride-cni",
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:be906595544fa1d4760e0747446bfbbff5a16dc9c897d79b3343c1899e44cd69",
                "command": [
                  "/entrypoint/cnibincopy.sh"
                ],
                "env": [
                  {
                    "name": "RHEL8_SOURCE_DIRECTORY",
                    "value": "/usr/src/route-override/rhel8/bin/"
                  },
                  {
                    "name": "RHEL9_SOURCE_DIRECTORY",
                    "value": "/usr/src/route-override/rhel9/bin/"
                  },
                  {
                    "name": "DEFAULT_SOURCE_DIRECTORY",
                    "value": "/usr/src/route-override/bin/"
                  }
                ],
                "resources": {},
                "volumeMounts": [
                  {
                    "name": "cni-binary-copy",
                    "mountPath": "/entrypoint"
                  },
                  {
                    "name": "cnibin",
                    "mountPath": "/host/opt/cni/bin"
                  },
                  {
                    "name": "os-release",
                    "readOnly": true,
                    "mountPath": "/host/etc/os-release"
                  }
                ],
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "imagePullPolicy": "IfNotPresent"
              },
              {
                "name": "whereabouts-cni-bincopy",
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:46527c4fe1ef45bd7f9a775a1d387f178841e95e48c5034dd1fcbcae4acea03d",
                "command": [
                  "/entrypoint/cnibincopy.sh"
                ],
                "env": [
                  {
                    "name": "RHEL8_SOURCE_DIRECTORY",
                    "value": "/usr/src/whereabouts/rhel8/bin/"
                  },
                  {
                    "name": "RHEL9_SOURCE_DIRECTORY",
                    "value": "/usr/src/whereabouts/rhel9/bin/"
                  },
                  {
                    "name": "DEFAULT_SOURCE_DIRECTORY",
                    "value": "/usr/src/whereabouts/bin/"
                  }
                ],
                "resources": {
                  "requests": {
                    "cpu": "10m",
                    "memory": "10Mi"
                  }
                },
                "volumeMounts": [
                  {
                    "name": "cni-binary-copy",
                    "mountPath": "/entrypoint"
                  },
                  {
                    "name": "cnibin",
                    "mountPath": "/host/opt/cni/bin"
                  },
                  {
                    "name": "os-release",
                    "readOnly": true,
                    "mountPath": "/host/etc/os-release"
                  }
                ],
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "imagePullPolicy": "IfNotPresent"
              },
              {
                "name": "whereabouts-cni",
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:46527c4fe1ef45bd7f9a775a1d387f178841e95e48c5034dd1fcbcae4acea03d",
                "command": [
                  "/bin/sh",
                  "-c",
                  "#!/bin/sh\n\nset -u -e\n\nCNI_BIN_DIR=${CNI_BIN_DIR:-\"/host/opt/cni/bin/\"}\nWHEREABOUTS_KUBECONFIG_FILE_HOST=${WHEREABOUTS_KUBECONFIG_FILE_HOST:-\"/etc/cni/net.d/whereabouts.d/whereabouts.kubeconfig\"}\nCNI_CONF_DIR=${CNI_CONF_DIR:-\"/host/etc/cni/net.d\"}\n\n# Make a whereabouts.d directory (for our kubeconfig)\n\nmkdir -p $CNI_CONF_DIR/whereabouts.d\nWHEREABOUTS_KUBECONFIG=$CNI_CONF_DIR/whereabouts.d/whereabouts.kubeconfig\nWHEREABOUTS_GLOBALCONFIG=$CNI_CONF_DIR/whereabouts.d/whereabouts.conf\n\n# ------------------------------- Generate a \"kube-config\"\nSERVICE_ACCOUNT_PATH=/var/run/secrets/kubernetes.io/serviceaccount\nKUBE_CA_FILE=${KUBE_CA_FILE:-$SERVICE_ACCOUNT_PATH/ca.crt}\nSERVICEACCOUNT_TOKEN=$(cat $SERVICE_ACCOUNT_PATH/token)\nSKIP_TLS_VERIFY=${SKIP_TLS_VERIFY:-false}\n\n\n# Check if we're running as a k8s pod.\nif [ -f \"$SERVICE_ACCOUNT_PATH/token\" ]; then\n  # We're running as a k8d pod - expect some variables.\n  if [ -z ${KUBERNETES_SERVICE_HOST} ]; then\n    error \"KUBERNETES_SERVICE_HOST not set\"; exit 1;\n  fi\n  if [ -z ${KUBERNETES_SERVICE_PORT} ]; then\n    error \"KUBERNETES_SERVICE_PORT not set\"; exit 1;\n  fi\n\n  if [ \"$SKIP_TLS_VERIFY\" == \"true\" ]; then\n    TLS_CFG=\"insecure-skip-tls-verify: true\"\n  elif [ -f \"$KUBE_CA_FILE\" ]; then\n    TLS_CFG=\"certificate-authority-data: $(cat $KUBE_CA_FILE | base64 | tr -d '\\n')\"\n  fi\n\n  # Write a kubeconfig file for the CNI plugin.  Do this\n  # to skip TLS verification for now.  We should eventually support\n  # writing more complete kubeconfig files. This is only used\n  # if the provided CNI network config references it.\n  touch $WHEREABOUTS_KUBECONFIG\n  chmod ${KUBECONFIG_MODE:-600} $WHEREABOUTS_KUBECONFIG\n  cat > $WHEREABOUTS_KUBECONFIG <<EOF\n# Kubeconfig file for Multus CNI plugin.\napiVersion: v1\nkind: Config\nclusters:\n- name: local\n  cluster:\n    server: ${KUBERNETES_SERVICE_PROTOCOL:-https}://${KUBERNETES_SERVICE_HOST}:${KUBERNETES_SERVICE_PORT}\n    $TLS_CFG\nusers:\n- name: whereabouts\n  user:\n    token: \"${SERVICEACCOUNT_TOKEN}\"\ncontexts:\n- name: whereabouts-context\n  context:\n    cluster: local\n    user: whereabouts\n    namespace: ${WHEREABOUTS_NAMESPACE}\ncurrent-context: whereabouts-context\nEOF\n\n# Kubeconfig file for Whereabouts CNI plugin.\ncat > $WHEREABOUTS_GLOBALCONFIG <<EOF\n{\n  \"datastore\": \"kubernetes\",\n  \"kubernetes\": {\n    \"kubeconfig\": \"/etc/kubernetes/cni/net.d/whereabouts.d/whereabouts.kubeconfig\"\n  },\n  \"reconciler_cron_expression\": \"30 4 * * *\",\n  \"log_level\": \"debug\"\n}\nEOF\n\nelse\n  warn \"Doesn't look like we're running in a kubernetes environment (no serviceaccount token)\"\nfi\n\n# copy whereabouts to the cni bin dir\n# SKIPPED DUE TO FIPS COPY.\n# cp -f /whereabouts $CNI_BIN_DIR\n\n# ---------------------- end Generate a \"kube-config\".\n\n# Unless told otherwise, sleep forever.\n# This prevents Kubernetes from restarting the pod repeatedly.\nshould_sleep=${SLEEP:-\"true\"}\necho \"Done configuring CNI.  Sleep=$should_sleep\"\nwhile [ \"$should_sleep\" == \"true\"  ]; do\n    sleep 1000000000000\ndone\n"
                ],
                "env": [
                  {
                    "name": "KUBERNETES_SERVICE_PORT",
                    "value": "6443"
                  },
                  {
                    "name": "KUBERNETES_SERVICE_HOST",
                    "value": "api-int.aws-cls-os.itja.p1.openshiftapps.com"
                  },
                  {
                    "name": "CNI_BIN_DIR",
                    "value": "/host/opt/cni/bin/"
                  },
                  {
                    "name": "CNI_CONF_DIR",
                    "value": "/host/etc/cni/net.d"
                  },
                  {
                    "name": "SLEEP",
                    "value": "false"
                  },
                  {
                    "name": "WHEREABOUTS_NAMESPACE",
                    "value": "openshift-multus"
                  }
                ],
                "resources": {
                  "requests": {
                    "cpu": "10m",
                    "memory": "10Mi"
                  }
                },
                "volumeMounts": [
                  {
                    "name": "cnibin",
                    "mountPath": "/host/opt/cni/bin"
                  },
                  {
                    "name": "system-cni-dir",
                    "mountPath": "/host/etc/cni/net.d"
                  }
                ],
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "imagePullPolicy": "IfNotPresent"
              }
            ],
            "containers": [
              {
                "name": "kube-multus-additional-cni-plugins",
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:107a711ff6596bbfafd264699322e77368a96d32dc7194ce16a3040cdcfebc1a",
                "command": [
                  "/bin/bash",
                  "-ec",
                  "--"
                ],
                "args": [
                  "trap : TERM INT; sleep infinity & wait\n"
                ],
                "resources": {
                  "requests": {
                    "cpu": "10m",
                    "memory": "10Mi"
                  }
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "imagePullPolicy": "IfNotPresent",
                "securityContext": {
                  "privileged": true
                }
              }
            ],
            "restartPolicy": "Always",
            "terminationGracePeriodSeconds": 10,
            "dnsPolicy": "ClusterFirst",
            "nodeSelector": {
              "kubernetes.io/os": "linux"
            },
            "serviceAccountName": "multus",
            "serviceAccount": "multus",
            "hostNetwork": true,
            "securityContext": {},
            "schedulerName": "default-scheduler",
            "tolerations": [
              {
                "operator": "Exists"
              }
            ],
            "priorityClassName": "system-node-critical"
          }
        },
        "updateStrategy": {
          "type": "RollingUpdate",
          "rollingUpdate": {
            "maxUnavailable": "10%",
            "maxSurge": 0
          }
        },
        "revisionHistoryLimit": 10
      },
      "status": {
        "currentNumberScheduled": 7,
        "numberMisscheduled": 0,
        "desiredNumberScheduled": 7,
        "numberReady": 7,
        "observedGeneration": 1,
        "updatedNumberScheduled": 7,
        "numberAvailable": 7
      }
    },
    {
      "metadata": {
        "name": "network-metrics-daemon",
        "namespace": "openshift-multus",
        "uid": "b008e659-66a4-4562-8e95-8b3db00c0215",
        "resourceVersion": "65390",
        "generation": 1,
        "creationTimestamp": "2023-08-25T07:43:31Z",
        "labels": {
          "networkoperator.openshift.io/generates-operator-status": "stand-alone"
        },
        "annotations": {
          "deprecated.daemonset.template.generation": "1",
          "kubernetes.io/description": "This daemonset launches the network metrics daemon on each node\n",
          "networkoperator.openshift.io/non-critical": "",
          "release.openshift.io/version": "4.13.9"
        },
        "ownerReferences": [
          {
            "apiVersion": "operator.openshift.io/v1",
            "kind": "Network",
            "name": "cluster",
            "uid": "53e9017c-f35d-4e74-93d8-a278bb08cf90",
            "controller": true,
            "blockOwnerDeletion": true
          }
        ],
        "managedFields": [
          {
            "manager": "cluster-network-operator/operconfig",
            "operation": "Apply",
            "apiVersion": "apps/v1",
            "time": "2023-08-25T07:43:31Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  "f:kubernetes.io/description": {},
                  "f:networkoperator.openshift.io/non-critical": {},
                  "f:release.openshift.io/version": {}
                },
                "f:labels": {
                  "f:networkoperator.openshift.io/generates-operator-status": {}
                },
                "f:ownerReferences": {
                  "k:{\"uid\":\"53e9017c-f35d-4e74-93d8-a278bb08cf90\"}": {}
                }
              },
              "f:spec": {
                "f:selector": {},
                "f:template": {
                  "f:metadata": {
                    "f:annotations": {
                      "f:target.workload.openshift.io/management": {}
                    },
                    "f:labels": {
                      "f:app": {},
                      "f:component": {},
                      "f:openshift.io/component": {},
                      "f:type": {}
                    }
                  },
                  "f:spec": {
                    "f:affinity": {
                      "f:nodeAffinity": {
                        "f:requiredDuringSchedulingIgnoredDuringExecution": {}
                      }
                    },
                    "f:containers": {
                      "k:{\"name\":\"kube-rbac-proxy\"}": {
                        ".": {},
                        "f:args": {},
                        "f:image": {},
                        "f:name": {},
                        "f:ports": {
                          "k:{\"containerPort\":8443,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:name": {}
                          }
                        },
                        "f:resources": {
                          "f:requests": {
                            "f:cpu": {},
                            "f:memory": {}
                          }
                        },
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          "k:{\"mountPath\":\"/etc/metrics\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {},
                            "f:readOnly": {}
                          }
                        }
                      },
                      "k:{\"name\":\"network-metrics-daemon\"}": {
                        ".": {},
                        "f:args": {},
                        "f:command": {},
                        "f:env": {
                          "k:{\"name\":\"NODE_NAME\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": {
                              "f:fieldRef": {}
                            }
                          }
                        },
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:name": {},
                        "f:resources": {
                          "f:requests": {
                            "f:cpu": {},
                            "f:memory": {}
                          }
                        }
                      }
                    },
                    "f:nodeSelector": {},
                    "f:priorityClassName": {},
                    "f:securityContext": {
                      "f:runAsNonRoot": {},
                      "f:runAsUser": {}
                    },
                    "f:serviceAccountName": {},
                    "f:tolerations": {},
                    "f:volumes": {
                      "k:{\"name\":\"metrics-certs\"}": {
                        ".": {},
                        "f:name": {},
                        "f:secret": {
                          "f:secretName": {}
                        }
                      }
                    }
                  }
                },
                "f:updateStrategy": {
                  "f:rollingUpdate": {
                    "f:maxUnavailable": {}
                  },
                  "f:type": {}
                }
              }
            }
          },
          {
            "manager": "kube-controller-manager",
            "operation": "Update",
            "apiVersion": "apps/v1",
            "time": "2023-08-25T08:20:08Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": {
                "f:currentNumberScheduled": {},
                "f:desiredNumberScheduled": {},
                "f:numberAvailable": {},
                "f:numberReady": {},
                "f:observedGeneration": {},
                "f:updatedNumberScheduled": {}
              }
            },
            "subresource": "status"
          }
        ]
      },
      "spec": {
        "selector": {
          "matchLabels": {
            "app": "network-metrics-daemon"
          }
        },
        "template": {
          "metadata": {
            "creationTimestamp": null,
            "labels": {
              "app": "network-metrics-daemon",
              "component": "network",
              "openshift.io/component": "network",
              "type": "infra"
            },
            "annotations": {
              "target.workload.openshift.io/management": "{\"effect\": \"PreferredDuringScheduling\"}"
            }
          },
          "spec": {
            "volumes": [
              {
                "name": "metrics-certs",
                "secret": {
                  "secretName": "metrics-daemon-secret",
                  "defaultMode": 420
                }
              }
            ],
            "containers": [
              {
                "name": "network-metrics-daemon",
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:7d3345a1fa118e9e91863786eb1911115d4c9c7394aad9b5078d28a751873bdc",
                "command": [
                  "/usr/bin/network-metrics"
                ],
                "args": [
                  "--node-name",
                  "$(NODE_NAME)"
                ],
                "env": [
                  {
                    "name": "NODE_NAME",
                    "valueFrom": {
                      "fieldRef": {
                        "apiVersion": "v1",
                        "fieldPath": "spec.nodeName"
                      }
                    }
                  }
                ],
                "resources": {
                  "requests": {
                    "cpu": "10m",
                    "memory": "100Mi"
                  }
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "imagePullPolicy": "IfNotPresent"
              },
              {
                "name": "kube-rbac-proxy",
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:eadc41af9cda0fa7e97b421f7b314024f7757cc545e87d5c99f96b03f335cf79",
                "args": [
                  "--logtostderr",
                  "--secure-listen-address=:8443",
                  "--tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256",
                  "--upstream=http://127.0.0.1:9091/",
                  "--tls-private-key-file=/etc/metrics/tls.key",
                  "--tls-cert-file=/etc/metrics/tls.crt"
                ],
                "ports": [
                  {
                    "name": "https",
                    "containerPort": 8443,
                    "protocol": "TCP"
                  }
                ],
                "resources": {
                  "requests": {
                    "cpu": "10m",
                    "memory": "20Mi"
                  }
                },
                "volumeMounts": [
                  {
                    "name": "metrics-certs",
                    "readOnly": true,
                    "mountPath": "/etc/metrics"
                  }
                ],
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "FallbackToLogsOnError",
                "imagePullPolicy": "IfNotPresent"
              }
            ],
            "restartPolicy": "Always",
            "terminationGracePeriodSeconds": 30,
            "dnsPolicy": "ClusterFirst",
            "nodeSelector": {
              "kubernetes.io/os": "linux"
            },
            "serviceAccountName": "metrics-daemon-sa",
            "serviceAccount": "metrics-daemon-sa",
            "securityContext": {
              "runAsUser": 65534,
              "runAsNonRoot": true
            },
            "affinity": {
              "nodeAffinity": {
                "requiredDuringSchedulingIgnoredDuringExecution": {
                  "nodeSelectorTerms": [
                    {
                      "matchExpressions": [
                        {
                          "key": "network.operator.openshift.io/dpu-host",
                          "operator": "DoesNotExist"
                        },
                        {
                          "key": "network.operator.openshift.io/dpu",
                          "operator": "DoesNotExist"
                        }
                      ]
                    }
                  ]
                }
              }
            },
            "schedulerName": "default-scheduler",
            "tolerations": [
              {
                "operator": "Exists"
              }
            ],
            "priorityClassName": "system-node-critical"
          }
        },
        "updateStrategy": {
          "type": "RollingUpdate",
          "rollingUpdate": {
            "maxUnavailable": "33%",
            "maxSurge": 0
          }
        },
        "revisionHistoryLimit": 10
      },
      "status": {
        "currentNumberScheduled": 7,
        "numberMisscheduled": 0,
        "desiredNumberScheduled": 7,
        "numberReady": 7,
        "observedGeneration": 1,
        "updatedNumberScheduled": 7,
        "numberAvailable": 7
      }
    },
    {
      "metadata": {
        "name": "network-check-target",
        "namespace": "openshift-network-diagnostics",
        "uid": "c93bf3fb-c04c-4f4a-8c71-7b84ab1da236",
        "resourceVersion": "66033",
        "generation": 1,
        "creationTimestamp": "2023-08-25T07:43:44Z",
        "labels": {
          "networkoperator.openshift.io/generates-operator-status": "stand-alone"
        },
        "annotations": {
          "deprecated.daemonset.template.generation": "1",
          "kubernetes.io/description": "This daemonset deploys the network-check-target pods that run\na dummy app to be checked by network-check-source pod\n",
          "networkoperator.openshift.io/non-critical": "",
          "release.openshift.io/version": "4.13.9"
        },
        "ownerReferences": [
          {
            "apiVersion": "operator.openshift.io/v1",
            "kind": "Network",
            "name": "cluster",
            "uid": "53e9017c-f35d-4e74-93d8-a278bb08cf90",
            "controller": true,
            "blockOwnerDeletion": true
          }
        ],
        "managedFields": [
          {
            "manager": "cluster-network-operator/operconfig",
            "operation": "Apply",
            "apiVersion": "apps/v1",
            "time": "2023-08-25T07:43:44Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  "f:kubernetes.io/description": {},
                  "f:networkoperator.openshift.io/non-critical": {},
                  "f:release.openshift.io/version": {}
                },
                "f:labels": {
                  "f:networkoperator.openshift.io/generates-operator-status": {}
                },
                "f:ownerReferences": {
                  "k:{\"uid\":\"53e9017c-f35d-4e74-93d8-a278bb08cf90\"}": {}
                }
              },
              "f:spec": {
                "f:selector": {},
                "f:template": {
                  "f:metadata": {
                    "f:annotations": {
                      "f:target.workload.openshift.io/management": {}
                    },
                    "f:labels": {
                      "f:app": {},
                      "f:kubernetes.io/os": {}
                    }
                  },
                  "f:spec": {
                    "f:affinity": {
                      "f:nodeAffinity": {
                        "f:requiredDuringSchedulingIgnoredDuringExecution": {}
                      }
                    },
                    "f:containers": {
                      "k:{\"name\":\"network-check-target-container\"}": {
                        ".": {},
                        "f:command": {},
                        "f:env": {
                          "k:{\"name\":\"K8S_NODE_NAME\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": {
                              "f:fieldRef": {}
                            }
                          }
                        },
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:name": {},
                        "f:ports": {
                          "k:{\"containerPort\":8080,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:protocol": {}
                          }
                        },
                        "f:readinessProbe": {
                          "f:httpGet": {
                            "f:path": {},
                            "f:port": {}
                          },
                          "f:initialDelaySeconds": {},
                          "f:timeoutSeconds": {}
                        },
                        "f:resources": {
                          "f:requests": {
                            "f:cpu": {},
                            "f:memory": {}
                          }
                        },
                        "f:securityContext": {
                          "f:allowPrivilegeEscalation": {},
                          "f:capabilities": {
                            "f:drop": {}
                          }
                        }
                      }
                    },
                    "f:nodeSelector": {},
                    "f:priorityClassName": {},
                    "f:securityContext": {
                      "f:runAsNonRoot": {},
                      "f:seccompProfile": {
                        "f:type": {}
                      }
                    },
                    "f:serviceAccount": {},
                    "f:terminationGracePeriodSeconds": {},
                    "f:tolerations": {}
                  }
                },
                "f:updateStrategy": {
                  "f:rollingUpdate": {
                    "f:maxUnavailable": {}
                  },
                  "f:type": {}
                }
              }
            }
          },
          {
            "manager": "kube-controller-manager",
            "operation": "Update",
            "apiVersion": "apps/v1",
            "time": "2023-08-25T08:20:44Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": {
                "f:currentNumberScheduled": {},
                "f:desiredNumberScheduled": {},
                "f:numberAvailable": {},
                "f:numberReady": {},
                "f:observedGeneration": {},
                "f:updatedNumberScheduled": {}
              }
            },
            "subresource": "status"
          }
        ]
      },
      "spec": {
        "selector": {
          "matchLabels": {
            "app": "network-check-target"
          }
        },
        "template": {
          "metadata": {
            "creationTimestamp": null,
            "labels": {
              "app": "network-check-target",
              "kubernetes.io/os": "linux"
            },
            "annotations": {
              "target.workload.openshift.io/management": "{\"effect\": \"PreferredDuringScheduling\"}"
            }
          },
          "spec": {
            "containers": [
              {
                "name": "network-check-target-container",
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:33050327eb5937b342057fd2920ff04ca87ecd84305c5a53eb0934901d86b0d4",
                "command": [
                  "cluster-network-check-target"
                ],
                "ports": [
                  {
                    "containerPort": 8080,
                    "protocol": "TCP"
                  }
                ],
                "env": [
                  {
                    "name": "K8S_NODE_NAME",
                    "valueFrom": {
                      "fieldRef": {
                        "apiVersion": "v1",
                        "fieldPath": "spec.nodeName"
                      }
                    }
                  }
                ],
                "resources": {
                  "requests": {
                    "cpu": "10m",
                    "memory": "15Mi"
                  }
                },
                "readinessProbe": {
                  "httpGet": {
                    "path": "/",
                    "port": 8080,
                    "scheme": "HTTP"
                  },
                  "initialDelaySeconds": 30,
                  "timeoutSeconds": 10,
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "failureThreshold": 3
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "imagePullPolicy": "IfNotPresent",
                "securityContext": {
                  "capabilities": {
                    "drop": [
                      "ALL"
                    ]
                  },
                  "allowPrivilegeEscalation": false
                }
              }
            ],
            "restartPolicy": "Always",
            "terminationGracePeriodSeconds": 10,
            "dnsPolicy": "ClusterFirst",
            "nodeSelector": {
              "beta.kubernetes.io/os": "linux"
            },
            "serviceAccountName": "default",
            "serviceAccount": "default",
            "securityContext": {
              "runAsNonRoot": true,
              "seccompProfile": {
                "type": "RuntimeDefault"
              }
            },
            "affinity": {
              "nodeAffinity": {
                "requiredDuringSchedulingIgnoredDuringExecution": {
                  "nodeSelectorTerms": [
                    {
                      "matchExpressions": [
                        {
                          "key": "network.operator.openshift.io/dpu-host",
                          "operator": "DoesNotExist"
                        },
                        {
                          "key": "network.operator.openshift.io/dpu",
                          "operator": "DoesNotExist"
                        }
                      ]
                    }
                  ]
                }
              }
            },
            "schedulerName": "default-scheduler",
            "tolerations": [
              {
                "operator": "Exists"
              }
            ],
            "priorityClassName": "openshift-user-critical"
          }
        },
        "updateStrategy": {
          "type": "RollingUpdate",
          "rollingUpdate": {
            "maxUnavailable": "10%",
            "maxSurge": 0
          }
        },
        "revisionHistoryLimit": 10
      },
      "status": {
        "currentNumberScheduled": 7,
        "numberMisscheduled": 0,
        "desiredNumberScheduled": 7,
        "numberReady": 7,
        "observedGeneration": 1,
        "updatedNumberScheduled": 7,
        "numberAvailable": 7
      }
    },
    {
      "metadata": {
        "name": "ovnkube-master",
        "namespace": "openshift-ovn-kubernetes",
        "uid": "91a04f7b-cb91-40fa-8af0-c8c16bae903e",
        "resourceVersion": "64666",
        "generation": 1,
        "creationTimestamp": "2023-08-25T07:43:41Z",
        "labels": {
          "networkoperator.openshift.io/generates-operator-status": "stand-alone"
        },
        "annotations": {
          "deprecated.daemonset.template.generation": "1",
          "kubernetes.io/description": "This daemonset launches the ovn-kubernetes controller (master) networking components.\n",
          "networkoperator.openshift.io/cluster-network-cidr": "10.128.0.0/16",
          "networkoperator.openshift.io/hybrid-overlay-status": "disabled",
          "networkoperator.openshift.io/ip-family-mode": "single-stack",
          "release.openshift.io/version": "4.13.9"
        },
        "ownerReferences": [
          {
            "apiVersion": "operator.openshift.io/v1",
            "kind": "Network",
            "name": "cluster",
            "uid": "53e9017c-f35d-4e74-93d8-a278bb08cf90",
            "controller": true,
            "blockOwnerDeletion": true
          }
        ],
        "managedFields": [
          {
            "manager": "cluster-network-operator/operconfig",
            "operation": "Apply",
            "apiVersion": "apps/v1",
            "time": "2023-08-25T07:43:41Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  "f:kubernetes.io/description": {},
                  "f:networkoperator.openshift.io/cluster-network-cidr": {},
                  "f:networkoperator.openshift.io/hybrid-overlay-status": {},
                  "f:networkoperator.openshift.io/ip-family-mode": {},
                  "f:release.openshift.io/version": {}
                },
                "f:labels": {
                  "f:networkoperator.openshift.io/generates-operator-status": {}
                },
                "f:ownerReferences": {
                  "k:{\"uid\":\"53e9017c-f35d-4e74-93d8-a278bb08cf90\"}": {}
                }
              },
              "f:spec": {
                "f:selector": {},
                "f:template": {
                  "f:metadata": {
                    "f:annotations": {
                      "f:networkoperator.openshift.io/cluster-network-cidr": {},
                      "f:networkoperator.openshift.io/hybrid-overlay-status": {},
                      "f:networkoperator.openshift.io/ip-family-mode": {},
                      "f:target.workload.openshift.io/management": {}
                    },
                    "f:labels": {
                      "f:app": {},
                      "f:component": {},
                      "f:kubernetes.io/os": {},
                      "f:openshift.io/component": {},
                      "f:ovn-db-pod": {},
                      "f:type": {}
                    }
                  },
                  "f:spec": {
                    "f:containers": {
                      "k:{\"name\":\"kube-rbac-proxy\"}": {
                        ".": {},
                        "f:command": {},
                        "f:image": {},
                        "f:name": {},
                        "f:ports": {
                          "k:{\"containerPort\":9102,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:name": {}
                          }
                        },
                        "f:resources": {
                          "f:requests": {
                            "f:cpu": {},
                            "f:memory": {}
                          }
                        },
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          "k:{\"mountPath\":\"/etc/pki/tls/metrics-cert\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {},
                            "f:readOnly": {}
                          }
                        }
                      },
                      "k:{\"name\":\"nbdb\"}": {
                        ".": {},
                        "f:command": {},
                        "f:env": {
                          "k:{\"name\":\"K8S_NODE_IP\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": {
                              "f:fieldRef": {}
                            }
                          },
                          "k:{\"name\":\"OVN_LOG_LEVEL\"}": {
                            ".": {},
                            "f:name": {},
                            "f:value": {}
                          },
                          "k:{\"name\":\"OVN_NORTHD_PROBE_INTERVAL\"}": {
                            ".": {},
                            "f:name": {},
                            "f:value": {}
                          }
                        },
                        "f:image": {},
                        "f:lifecycle": {
                          "f:postStart": {
                            "f:exec": {
                              "f:command": {}
                            }
                          },
                          "f:preStop": {
                            "f:exec": {
                              "f:command": {}
                            }
                          }
                        },
                        "f:name": {},
                        "f:ports": {
                          "k:{\"containerPort\":9641,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:name": {}
                          },
                          "k:{\"containerPort\":9643,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:name": {}
                          }
                        },
                        "f:readinessProbe": {
                          "f:exec": {
                            "f:command": {}
                          },
                          "f:initialDelaySeconds": {},
                          "f:timeoutSeconds": {}
                        },
                        "f:resources": {
                          "f:requests": {
                            "f:cpu": {},
                            "f:memory": {}
                          }
                        },
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          "k:{\"mountPath\":\"/env\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/etc/openvswitch/\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/etc/ovn/\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/ovn-ca\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/ovn-cert\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/run/openvswitch/\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/run/ovn/\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/var/lib/openvswitch/\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        }
                      },
                      "k:{\"name\":\"northd\"}": {
                        ".": {},
                        "f:command": {},
                        "f:env": {
                          "k:{\"name\":\"OVN_LOG_LEVEL\"}": {
                            ".": {},
                            "f:name": {},
                            "f:value": {}
                          }
                        },
                        "f:image": {},
                        "f:lifecycle": {
                          "f:preStop": {
                            "f:exec": {
                              "f:command": {}
                            }
                          }
                        },
                        "f:name": {},
                        "f:resources": {
                          "f:requests": {
                            "f:cpu": {},
                            "f:memory": {}
                          }
                        },
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          "k:{\"mountPath\":\"/env\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/etc/openvswitch/\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/ovn-ca\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/ovn-cert\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/run/openvswitch/\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/run/ovn/\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/var/lib/openvswitch/\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        }
                      },
                      "k:{\"name\":\"ovn-dbchecker\"}": {
                        ".": {},
                        "f:command": {},
                        "f:env": {
                          "k:{\"name\":\"K8S_NODE_IP\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": {
                              "f:fieldRef": {}
                            }
                          },
                          "k:{\"name\":\"OVN_KUBE_LOG_LEVEL\"}": {
                            ".": {},
                            "f:name": {},
                            "f:value": {}
                          }
                        },
                        "f:image": {},
                        "f:name": {},
                        "f:resources": {
                          "f:requests": {
                            "f:cpu": {},
                            "f:memory": {}
                          }
                        },
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          "k:{\"mountPath\":\"/env\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/etc/openvswitch/\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/etc/ovn/\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/ovn-ca\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/ovn-cert\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/run/openvswitch/\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/run/ovn/\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/run/ovnkube-config/\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/var/lib/openvswitch/\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        }
                      },
                      "k:{\"name\":\"ovnkube-master\"}": {
                        ".": {},
                        "f:command": {},
                        "f:env": {
                          "k:{\"name\":\"K8S_NODE\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": {
                              "f:fieldRef": {}
                            }
                          },
                          "k:{\"name\":\"OVN_KUBE_LOG_LEVEL\"}": {
                            ".": {},
                            "f:name": {},
                            "f:value": {}
                          }
                        },
                        "f:image": {},
                        "f:name": {},
                        "f:ports": {
                          "k:{\"containerPort\":29102,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:name": {}
                          }
                        },
                        "f:resources": {
                          "f:requests": {
                            "f:cpu": {},
                            "f:memory": {}
                          }
                        },
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          "k:{\"mountPath\":\"/env\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/etc/openvswitch/\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/etc/ovn/\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/etc/systemd/system\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {},
                            "f:readOnly": {}
                          },
                          "k:{\"mountPath\":\"/ovn-ca\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/ovn-cert\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/run/openvswitch/\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/run/ovn/\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/run/ovnkube-config/\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/var/lib/openvswitch/\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        }
                      },
                      "k:{\"name\":\"sbdb\"}": {
                        ".": {},
                        "f:command": {},
                        "f:env": {
                          "k:{\"name\":\"K8S_NODE_IP\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": {
                              "f:fieldRef": {}
                            }
                          },
                          "k:{\"name\":\"OVN_LOG_LEVEL\"}": {
                            ".": {},
                            "f:name": {},
                            "f:value": {}
                          }
                        },
                        "f:image": {},
                        "f:lifecycle": {
                          "f:postStart": {
                            "f:exec": {
                              "f:command": {}
                            }
                          },
                          "f:preStop": {
                            "f:exec": {
                              "f:command": {}
                            }
                          }
                        },
                        "f:name": {},
                        "f:ports": {
                          "k:{\"containerPort\":9642,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:name": {}
                          },
                          "k:{\"containerPort\":9644,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:name": {}
                          }
                        },
                        "f:readinessProbe": {
                          "f:exec": {
                            "f:command": {}
                          },
                          "f:initialDelaySeconds": {},
                          "f:timeoutSeconds": {}
                        },
                        "f:resources": {
                          "f:requests": {
                            "f:cpu": {},
                            "f:memory": {}
                          }
                        },
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          "k:{\"mountPath\":\"/env\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/etc/openvswitch/\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/etc/ovn/\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/ovn-ca\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/ovn-cert\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/run/openvswitch/\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/run/ovn/\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/var/lib/openvswitch/\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        }
                      }
                    },
                    "f:dnsPolicy": {},
                    "f:hostNetwork": {},
                    "f:nodeSelector": {},
                    "f:priorityClassName": {},
                    "f:serviceAccountName": {},
                    "f:tolerations": {},
                    "f:volumes": {
                      "k:{\"name\":\"env-overrides\"}": {
                        ".": {},
                        "f:configMap": {
                          "f:name": {},
                          "f:optional": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"etc-openvswitch\"}": {
                        ".": {},
                        "f:hostPath": {
                          "f:path": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"ovn-ca\"}": {
                        ".": {},
                        "f:configMap": {
                          "f:name": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"ovn-cert\"}": {
                        ".": {},
                        "f:name": {},
                        "f:secret": {
                          "f:secretName": {}
                        }
                      },
                      "k:{\"name\":\"ovn-master-metrics-cert\"}": {
                        ".": {},
                        "f:name": {},
                        "f:secret": {
                          "f:optional": {},
                          "f:secretName": {}
                        }
                      },
                      "k:{\"name\":\"ovnkube-config\"}": {
                        ".": {},
                        "f:configMap": {
                          "f:name": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"run-openvswitch\"}": {
                        ".": {},
                        "f:hostPath": {
                          "f:path": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"run-ovn\"}": {
                        ".": {},
                        "f:hostPath": {
                          "f:path": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"systemd-units\"}": {
                        ".": {},
                        "f:hostPath": {
                          "f:path": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"var-lib-openvswitch\"}": {
                        ".": {},
                        "f:hostPath": {
                          "f:path": {}
                        },
                        "f:name": {}
                      }
                    }
                  }
                },
                "f:updateStrategy": {
                  "f:rollingUpdate": {
                    "f:maxSurge": {},
                    "f:maxUnavailable": {}
                  },
                  "f:type": {}
                }
              }
            }
          },
          {
            "manager": "kube-controller-manager",
            "operation": "Update",
            "apiVersion": "apps/v1",
            "time": "2023-08-25T08:19:23Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": {
                "f:currentNumberScheduled": {},
                "f:desiredNumberScheduled": {},
                "f:numberAvailable": {},
                "f:numberReady": {},
                "f:observedGeneration": {},
                "f:updatedNumberScheduled": {}
              }
            },
            "subresource": "status"
          }
        ]
      },
      "spec": {
        "selector": {
          "matchLabels": {
            "app": "ovnkube-master"
          }
        },
        "template": {
          "metadata": {
            "creationTimestamp": null,
            "labels": {
              "app": "ovnkube-master",
              "component": "network",
              "kubernetes.io/os": "linux",
              "openshift.io/component": "network",
              "ovn-db-pod": "true",
              "type": "infra"
            },
            "annotations": {
              "networkoperator.openshift.io/cluster-network-cidr": "10.128.0.0/16",
              "networkoperator.openshift.io/hybrid-overlay-status": "disabled",
              "networkoperator.openshift.io/ip-family-mode": "single-stack",
              "target.workload.openshift.io/management": "{\"effect\": \"PreferredDuringScheduling\"}"
            }
          },
          "spec": {
            "volumes": [
              {
                "name": "systemd-units",
                "hostPath": {
                  "path": "/etc/systemd/system",
                  "type": ""
                }
              },
              {
                "name": "etc-openvswitch",
                "hostPath": {
                  "path": "/var/lib/ovn/etc",
                  "type": ""
                }
              },
              {
                "name": "var-lib-openvswitch",
                "hostPath": {
                  "path": "/var/lib/ovn/data",
                  "type": ""
                }
              },
              {
                "name": "run-openvswitch",
                "hostPath": {
                  "path": "/var/run/openvswitch",
                  "type": ""
                }
              },
              {
                "name": "run-ovn",
                "hostPath": {
                  "path": "/var/run/ovn",
                  "type": ""
                }
              },
              {
                "name": "ovnkube-config",
                "configMap": {
                  "name": "ovnkube-config",
                  "defaultMode": 420
                }
              },
              {
                "name": "env-overrides",
                "configMap": {
                  "name": "env-overrides",
                  "defaultMode": 420,
                  "optional": true
                }
              },
              {
                "name": "ovn-ca",
                "configMap": {
                  "name": "ovn-ca",
                  "defaultMode": 420
                }
              },
              {
                "name": "ovn-cert",
                "secret": {
                  "secretName": "ovn-cert",
                  "defaultMode": 420
                }
              },
              {
                "name": "ovn-master-metrics-cert",
                "secret": {
                  "secretName": "ovn-master-metrics-cert",
                  "defaultMode": 420,
                  "optional": true
                }
              }
            ],
            "containers": [
              {
                "name": "northd",
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:4b84a9489275cd767349ff95cc0b8b5ade73bef626dea8b941b0cea8bbb5ac96",
                "command": [
                  "/bin/bash",
                  "-c",
                  "set -xem\nif [[ -f /env/_master ]]; then\n  set -o allexport\n  source /env/_master\n  set +o allexport\nfi\n\nquit() {\n  echo \"$(date -Iseconds) - stopping ovn-northd\"\n  OVN_MANAGE_OVSDB=no /usr/share/ovn/scripts/ovn-ctl stop_northd\n  echo \"$(date -Iseconds) - ovn-northd stopped\"\n  rm -f /var/run/ovn/ovn-northd.pid\n  exit 0\n}\n# end of quit\ntrap quit TERM INT\n\necho \"$(date -Iseconds) - starting ovn-northd\"\nexec ovn-northd \\\n  --no-chdir \"-vconsole:${OVN_LOG_LEVEL}\" -vfile:off \"-vPATTERN:console:%D{%Y-%m-%dT%H:%M:%S.###Z}|%05N|%c%T|%p|%m\" \\\n  --ovnnb-db \"ssl:10.0.216.248:9641,ssl:10.0.242.13:9641,ssl:10.0.172.21:9641\" \\\n  --ovnsb-db \"ssl:10.0.216.248:9642,ssl:10.0.242.13:9642,ssl:10.0.172.21:9642\" \\\n  --pidfile /var/run/ovn/ovn-northd.pid \\\n  --n-threads=4 \\\n  -p /ovn-cert/tls.key \\\n  -c /ovn-cert/tls.crt \\\n  -C /ovn-ca/ca-bundle.crt &\n\nwait $!\n"
                ],
                "env": [
                  {
                    "name": "OVN_LOG_LEVEL",
                    "value": "info"
                  }
                ],
                "resources": {
                  "requests": {
                    "cpu": "10m",
                    "memory": "300Mi"
                  }
                },
                "volumeMounts": [
                  {
                    "name": "etc-openvswitch",
                    "mountPath": "/etc/openvswitch/"
                  },
                  {
                    "name": "var-lib-openvswitch",
                    "mountPath": "/var/lib/openvswitch/"
                  },
                  {
                    "name": "run-openvswitch",
                    "mountPath": "/run/openvswitch/"
                  },
                  {
                    "name": "run-ovn",
                    "mountPath": "/run/ovn/"
                  },
                  {
                    "name": "env-overrides",
                    "mountPath": "/env"
                  },
                  {
                    "name": "ovn-cert",
                    "mountPath": "/ovn-cert"
                  },
                  {
                    "name": "ovn-ca",
                    "mountPath": "/ovn-ca"
                  }
                ],
                "lifecycle": {
                  "preStop": {
                    "exec": {
                      "command": [
                        "/bin/bash",
                        "-c",
                        "OVN_MANAGE_OVSDB=no /usr/share/ovn/scripts/ovn-ctl stop_northd"
                      ]
                    }
                  }
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "FallbackToLogsOnError",
                "imagePullPolicy": "IfNotPresent"
              },
              {
                "name": "nbdb",
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:4b84a9489275cd767349ff95cc0b8b5ade73bef626dea8b941b0cea8bbb5ac96",
                "command": [
                  "/bin/bash",
                  "-c",
                  "set -xem\nif [[ -f /env/_master ]]; then\n  set -o allexport\n  source /env/_master\n  set +o allexport\nfi\n\nquit() {\n  echo \"$(date -Iseconds) - stopping nbdb\"\n  /usr/share/ovn/scripts/ovn-ctl stop_nb_ovsdb\n  echo \"$(date -Iseconds) - nbdb stopped\"\n  rm -f /var/run/ovn/ovnnb_db.pid\n  exit 0\n}\n# end of quit\ntrap quit TERM INT\n\nbracketify() { case \"$1\" in *:*) echo \"[$1]\" ;; *) echo \"$1\" ;; esac }\n# initialize variables\novn_kubernetes_namespace=openshift-ovn-kubernetes\novndb_ctl_ssl_opts=\"-p /ovn-cert/tls.key -c /ovn-cert/tls.crt -C /ovn-ca/ca-bundle.crt\"\ntransport=\"ssl\"\novn_raft_conn_ip_url_suffix=\"\"\nif [[ \"${K8S_NODE_IP}\" == *\":\"* ]]; then\n  ovn_raft_conn_ip_url_suffix=\":[::]\"\nfi\ndb=\"nb\"\ndb_port=\"9641\"\novn_db_file=\"/etc/ovn/ovn${db}_db.db\"\n# checks if a db pod is part of a current cluster\ndb_part_of_cluster() {\n  local pod=${1}\n  local db=${2}\n  local port=${3}\n  echo \"Checking if ${pod} is part of cluster\"\n  # TODO: change to use '--request-timeout=5s', if https://github.com/kubernetes/kubernetes/issues/49343 is fixed. \n  init_ip=$(timeout 5 kubectl get pod -n ${ovn_kubernetes_namespace} ${pod} -o=jsonpath='{.status.podIP}')\n  if [[ $? != 0 ]]; then\n    echo \"Unable to get ${pod} ip \"\n    return 1\n  fi\n  echo \"Found ${pod} ip: $init_ip\"\n  init_ip=$(bracketify $init_ip)\n  target=$(ovn-${db}ctl --timeout=5 --db=${transport}:${init_ip}:${port} ${ovndb_ctl_ssl_opts} \\\n            --data=bare --no-headings --columns=target list connection)\n  if [[ \"${target}\" != \"p${transport}:${port}${ovn_raft_conn_ip_url_suffix}\" ]]; then\n    echo \"Unable to check correct target ${target} \"\n    return 1\n  fi\n  echo \"${pod} is part of cluster\"\n  return 0\n}\n# end of db_part_of_cluster\n\n# Checks if cluster has already been initialized.\n# If not it returns false and sets init_ip to CLUSTER_INITIATOR_IP\ncluster_exists() {\n  local db=${1}\n  local port=${2}\n  # TODO: change to use '--request-timeout=5s', if https://github.com/kubernetes/kubernetes/issues/49343 is fixed. \n  db_pods=$(timeout 5 kubectl get pod -n ${ovn_kubernetes_namespace} -o=jsonpath='{.items[*].metadata.name}' | egrep -o 'ovnkube-master-\\w+' | grep -v \"metrics\")\n\n  for db_pod in $db_pods; do\n    if db_part_of_cluster $db_pod $db $port; then\n      echo \"${db_pod} is part of current cluster with ip: ${init_ip}!\"\n      return 0\n    fi\n  done\n  # if we get here  there is no cluster, set init_ip and get out\n  init_ip=$(bracketify $CLUSTER_INITIATOR_IP)\n  return 1\n}\n# end of cluster_exists()\n\n# RAFT clusters need an odd number of members to achieve consensus.\n# The CNO determines which members make up the cluster, so if this container\n# is not supposed to be part of the cluster, wait forever doing nothing\n# (instad of exiting and causing CrashLoopBackoffs for no reason).\nif [[ ! \"ssl:10.0.216.248:9641,ssl:10.0.242.13:9641,ssl:10.0.172.21:9641\" =~ .*\":${K8S_NODE_IP}:\".* ]] && [[ ! \"ssl:10.0.216.248:9641,ssl:10.0.242.13:9641,ssl:10.0.172.21:9641\" =~ .*\":[${K8S_NODE_IP}]:\".* ]]; then\n  echo \"$(date -Iseconds) - not selected as RAFT member; sleeping...\"\n  sleep 1500d\n  exit 0\nfi\n\nOVN_ARGS=\"--db-nb-cluster-local-port=9643 \\\n  --db-nb-cluster-local-addr=$(bracketify ${K8S_NODE_IP}) \\\n  --no-monitor \\\n  --db-nb-cluster-local-proto=ssl \\\n  --ovn-nb-db-ssl-key=/ovn-cert/tls.key \\\n  --ovn-nb-db-ssl-cert=/ovn-cert/tls.crt \\\n  --ovn-nb-db-ssl-ca-cert=/ovn-ca/ca-bundle.crt\"\n\nCLUSTER_INITIATOR_IP=\"10.0.216.248\"\necho \"$(date -Iseconds) - starting nbdb  CLUSTER_INITIATOR_IP=${CLUSTER_INITIATOR_IP}, K8S_NODE_IP=${K8S_NODE_IP}\"\ninitialize=\"false\"\n\nif [[ ! -e ${ovn_db_file} ]]; then\n  initialize=\"true\"\nfi\n\nif [[ \"${initialize}\" == \"true\" ]]; then\n  # check to see if a cluster already exists. If it does, just join it.\n  counter=0\n  cluster_found=false\n  while [ $counter -lt 5 ]; do\n    if cluster_exists ${db} ${db_port}; then\n      cluster_found=true\n      break\n    fi\n    sleep 1\n    counter=$((counter+1))\n  done\n\n  if ${cluster_found}; then\n    echo \"Cluster already exists for DB: ${db}\"\n    # join existing cluster\n    exec /usr/share/ovn/scripts/ovn-ctl ${OVN_ARGS} \\\n    --db-nb-cluster-remote-port=9643 \\\n    --db-nb-cluster-remote-addr=${init_ip} \\\n    --db-nb-cluster-remote-proto=ssl \\\n    --ovn-nb-log=\"-vconsole:${OVN_LOG_LEVEL} -vfile:off -vPATTERN:console:%D{%Y-%m-%dT%H:%M:%S.###Z}|%05N|%c%T|%p|%m\" \\\n    run_nb_ovsdb &\n\n    wait $!\n  else\n    # either we need to initialize a new cluster or wait for master to create it\n    if [[ \"${K8S_NODE_IP}\" == \"${CLUSTER_INITIATOR_IP}\" ]]; then\n      # set DB election timer at DB creation time if OVN supports it\n      election_timer=\n      if test -n \"$(/usr/share/ovn/scripts/ovn-ctl --help 2>&1 | grep \"\\--db-nb-election-timer\")\"; then\n        election_timer=\"--db-nb-election-timer=$((10*1000))\"\n      fi\n\n      exec /usr/share/ovn/scripts/ovn-ctl ${OVN_ARGS} \\\n      --ovn-nb-log=\"-vconsole:${OVN_LOG_LEVEL} -vfile:off -vPATTERN:console:%D{%Y-%m-%dT%H:%M:%S.###Z}|%05N|%c%T|%p|%m\" \\\n      ${election_timer} \\\n      run_nb_ovsdb &\n\n      wait $!\n    else\n      echo \"Joining the nbdb cluster with init_ip=${init_ip}...\"\n      exec /usr/share/ovn/scripts/ovn-ctl ${OVN_ARGS} \\\n      --db-nb-cluster-remote-port=9643 \\\n      --db-nb-cluster-remote-addr=${init_ip} \\\n      --db-nb-cluster-remote-proto=ssl \\\n      --ovn-nb-log=\"-vconsole:${OVN_LOG_LEVEL} -vfile:off -vPATTERN:console:%D{%Y-%m-%dT%H:%M:%S.###Z}|%05N|%c%T|%p|%m\" \\\n      run_nb_ovsdb &\n\n      wait $!\n    fi\n  fi\nelse\n  exec /usr/share/ovn/scripts/ovn-ctl ${OVN_ARGS} \\\n    --ovn-nb-log=\"-vconsole:${OVN_LOG_LEVEL} -vfile:off -vPATTERN:console:%D{%Y-%m-%dT%H:%M:%S.###Z}|%05N|%c%T|%p|%m\" \\\n    run_nb_ovsdb &\n\n    wait $!\nfi\n"
                ],
                "ports": [
                  {
                    "name": "nb-db-port",
                    "hostPort": 9641,
                    "containerPort": 9641,
                    "protocol": "TCP"
                  },
                  {
                    "name": "nb-db-raft-port",
                    "hostPort": 9643,
                    "containerPort": 9643,
                    "protocol": "TCP"
                  }
                ],
                "env": [
                  {
                    "name": "OVN_LOG_LEVEL",
                    "value": "info"
                  },
                  {
                    "name": "OVN_NORTHD_PROBE_INTERVAL",
                    "value": "10000"
                  },
                  {
                    "name": "K8S_NODE_IP",
                    "valueFrom": {
                      "fieldRef": {
                        "apiVersion": "v1",
                        "fieldPath": "status.hostIP"
                      }
                    }
                  }
                ],
                "resources": {
                  "requests": {
                    "cpu": "10m",
                    "memory": "300Mi"
                  }
                },
                "volumeMounts": [
                  {
                    "name": "etc-openvswitch",
                    "mountPath": "/etc/openvswitch/"
                  },
                  {
                    "name": "etc-openvswitch",
                    "mountPath": "/etc/ovn/"
                  },
                  {
                    "name": "var-lib-openvswitch",
                    "mountPath": "/var/lib/openvswitch/"
                  },
                  {
                    "name": "run-openvswitch",
                    "mountPath": "/run/openvswitch/"
                  },
                  {
                    "name": "run-ovn",
                    "mountPath": "/run/ovn/"
                  },
                  {
                    "name": "env-overrides",
                    "mountPath": "/env"
                  },
                  {
                    "name": "ovn-cert",
                    "mountPath": "/ovn-cert"
                  },
                  {
                    "name": "ovn-ca",
                    "mountPath": "/ovn-ca"
                  }
                ],
                "readinessProbe": {
                  "exec": {
                    "command": [
                      "/bin/bash",
                      "-c",
                      "set -xeo pipefail\n\n# exit early if this DB is not supposed to be part of the cluster\nif [[ ! \"ssl:10.0.216.248:9641,ssl:10.0.242.13:9641,ssl:10.0.172.21:9641\" =~ .*\":${K8S_NODE_IP}:\".* ]] && [[ ! \"ssl:10.0.216.248:9641,ssl:10.0.242.13:9641,ssl:10.0.172.21:9641\" =~ .*\":[${K8S_NODE_IP}]:\".* ]]; then\n  exit 0\nfi\n\nleader_status=$(/usr/bin/ovn-appctl -t /var/run/ovn/ovnnb_db.ctl --timeout=3 cluster/status OVN_Northbound  2>/dev/null | { grep \"Leader: unknown\" || true; })\nif [[ ! -z \"${leader_status}\" ]]; then\n  echo \"NB DB Raft leader is unknown to the cluster node.\"\n  exit 1\nfi\n# set trim-on-compaction\n/usr/bin/ovn-appctl -t /var/run/ovn/ovnnb_db.ctl --timeout=5 ovsdb-server/memory-trim-on-compaction on 2>/dev/null\n"
                    ]
                  },
                  "initialDelaySeconds": 90,
                  "timeoutSeconds": 5,
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "failureThreshold": 3
                },
                "lifecycle": {
                  "postStart": {
                    "exec": {
                      "command": [
                        "/bin/bash",
                        "-c",
                        "set -x\nCLUSTER_INITIATOR_IP=\"10.0.216.248\"\nrm -f /var/run/ovn/ovnnb_db.pid\n\n# exit early if this DB is not supposed to be part of the cluster\nif [[ ! \"ssl:10.0.216.248:9641,ssl:10.0.242.13:9641,ssl:10.0.172.21:9641\" =~ .*\":${K8S_NODE_IP}:\".* ]] && [[ ! \"ssl:10.0.216.248:9641,ssl:10.0.242.13:9641,ssl:10.0.172.21:9641\" =~ .*\":[${K8S_NODE_IP}]:\".* ]]; then\n  exit 0\nfi\n\n# retry an operation a number of times, sleeping 2 seconds between each try\nretry() {\n  local tries=${1}\n  local desc=${2}\n  local cmd=${3}\n\n  local retries=0\n  while ! ${cmd}; do\n    (( retries += 1 ))\n    if [[ \"${retries}\" -gt ${tries} ]]; then\n      echo \"$(date -Iseconds) - ERROR - nbdb ${desc} - too many failed attempts, giving up\"\n      return 1\n    fi\n    echo \"$(date -Iseconds) - WARN - nbdb ${desc} - failed try ${retries}, retrying...\"\n    sleep 2\n  done\n  echo \"$(date -Iseconds) - INFO - nbdb ${desc} - success\"\n  return 0\n}\n\nif [[ \"${K8S_NODE_IP}\" == \"${CLUSTER_INITIATOR_IP}\" ]]; then\n  echo \"$(date -Iseconds) - nbdb - postStart - waiting for master to be selected\"\n\n  # set the connection and inactivity probe\n  if ! retry 60 \"inactivity-probe\" \"ovn-nbctl --no-leader-only -t 5 set-connection pssl:9641 -- set connection . inactivity_probe=60000\"; then\n    exit 1\n  fi\n\n  # Upgrade the db if required.\n  DB_SCHEMA=\"/usr/share/ovn/ovn-nb.ovsschema\"\n  DB_SERVER=\"unix:/var/run/ovn/ovnnb_db.sock\"\n  schema_name=$(ovsdb-tool schema-name $DB_SCHEMA)\n  db_version=$(ovsdb-client -t 10 get-schema-version \"$DB_SERVER\" \"$schema_name\")\n  target_version=$(ovsdb-tool schema-version \"$DB_SCHEMA\")\n\n  if ovsdb-tool compare-versions \"$db_version\" == \"$target_version\"; then\n    :\n  elif ovsdb-tool compare-versions \"$db_version\" \">\" \"$target_version\"; then\n      echo \"Database $schema_name has newer schema version ($db_version) than our local schema ($target_version), possibly an upgrade is partially complete?\"\n  else\n      echo \"Upgrading database $schema_name from schema version $db_version to $target_version\"\n      ovsdb-client -t 30 convert \"$DB_SERVER\" \"$DB_SCHEMA\"\n  fi\nfi\n\n# read the current northd_probe_interval from the DB\nOVN_NB_CTL=\"ovn-nbctl -p /ovn-cert/tls.key -c /ovn-cert/tls.crt -C /ovn-ca/ca-bundle.crt --db \"ssl:10.0.216.248:9641,ssl:10.0.242.13:9641,ssl:10.0.172.21:9641\"\"\nnorthd_probe_interval=${OVN_NORTHD_PROBE_INTERVAL:-10000}\necho \"Setting northd probe interval to ${northd_probe_interval} ms\"\nretries=0\ncurrent_probe_interval=0\nwhile [[ \"${retries}\" -lt 20 ]]; do\n  current_probe_interval=$(${OVN_NB_CTL} --if-exists get NB_GLOBAL . options:northd_probe_interval)\n  if [[ $? == 0 ]]; then\n    current_probe_interval=$(echo ${current_probe_interval} | tr -d '\\\"')\n    break\n  else\n    sleep 2\n    (( retries += 1 ))\n  fi\ndone\n\n# ensure the northd_probe_interval is set to the configured value\nif [[ \"${current_probe_interval}\" != \"${northd_probe_interval}\" ]]; then\n  if ! retry 20 \"northd-probe\" \"${OVN_NB_CTL} set NB_GLOBAL . options:northd_probe_interval=${northd_probe_interval}\"; then\n    exit 1\n  fi\nfi\n\n# Enable/disable IPsec\n\nipsec=false\n\nif ! retry 20 \"ipsec\" \"${OVN_NB_CTL} set nb_global . ipsec=${ipsec}\"; then\n  exit 1\nfi\n"
                      ]
                    }
                  },
                  "preStop": {
                    "exec": {
                      "command": [
                        "/bin/bash",
                        "-c",
                        "echo \"$(date -Iseconds) - stopping nbdb\"\n/usr/share/ovn/scripts/ovn-ctl stop_nb_ovsdb\necho \"$(date -Iseconds) - nbdb stopped\"\nrm -f /var/run/ovn/ovnnb_db.pid\n"
                      ]
                    }
                  }
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "FallbackToLogsOnError",
                "imagePullPolicy": "IfNotPresent"
              },
              {
                "name": "kube-rbac-proxy",
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:eadc41af9cda0fa7e97b421f7b314024f7757cc545e87d5c99f96b03f335cf79",
                "command": [
                  "/bin/bash",
                  "-c",
                  "#!/bin/bash\nset -euo pipefail\nTLS_PK=/etc/pki/tls/metrics-cert/tls.key\nTLS_CERT=/etc/pki/tls/metrics-cert/tls.crt\n# As the secret mount is optional we must wait for the files to be present.\n# The service is created in monitor.yaml and this is created in sdn.yaml.\nTS=$(date +%s)\nWARN_TS=$(( ${TS} + $(( 20 * 60)) ))\nHAS_LOGGED_INFO=0\n\nlog_missing_certs(){\n    CUR_TS=$(date +%s)\n    if [[ \"${CUR_TS}\" -gt \"WARN_TS\"  ]]; then\n      echo $(date -Iseconds) WARN: ovn-master-metrics-cert not mounted after 20 minutes.\n    elif [[ \"${HAS_LOGGED_INFO}\" -eq 0 ]] ; then\n      echo $(date -Iseconds) INFO: ovn-master-metrics-cert not mounted. Waiting 20 minutes.\n      HAS_LOGGED_INFO=1\n    fi\n}\nwhile [[ ! -f \"${TLS_PK}\" ||  ! -f \"${TLS_CERT}\" ]] ; do\n  log_missing_certs\n  sleep 5\ndone\n\necho $(date -Iseconds) INFO: ovn-master-metrics-certs mounted, starting kube-rbac-proxy\nexec /usr/bin/kube-rbac-proxy \\\n  --logtostderr \\\n  --secure-listen-address=:9102 \\\n  --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256 \\\n  --upstream=http://127.0.0.1:29102/ \\\n  --tls-private-key-file=${TLS_PK} \\\n  --tls-cert-file=${TLS_CERT}\n"
                ],
                "ports": [
                  {
                    "name": "https",
                    "hostPort": 9102,
                    "containerPort": 9102,
                    "protocol": "TCP"
                  }
                ],
                "resources": {
                  "requests": {
                    "cpu": "10m",
                    "memory": "20Mi"
                  }
                },
                "volumeMounts": [
                  {
                    "name": "ovn-master-metrics-cert",
                    "readOnly": true,
                    "mountPath": "/etc/pki/tls/metrics-cert"
                  }
                ],
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "FallbackToLogsOnError",
                "imagePullPolicy": "IfNotPresent"
              },
              {
                "name": "sbdb",
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:4b84a9489275cd767349ff95cc0b8b5ade73bef626dea8b941b0cea8bbb5ac96",
                "command": [
                  "/bin/bash",
                  "-c",
                  "set -xm\nif [[ -f /env/_master ]]; then\n  set -o allexport\n  source /env/_master\n  set +o allexport\nfi\n\nquit() {\n  echo \"$(date -Iseconds) - stopping sbdb\"\n  /usr/share/ovn/scripts/ovn-ctl stop_sb_ovsdb\n  echo \"$(date -Iseconds) - sbdb stopped\"\n  rm -f /var/run/ovn/ovnsb_db.pid\n  exit 0\n}\n# end of quit\ntrap quit TERM INT\n\nbracketify() { case \"$1\" in *:*) echo \"[$1]\" ;; *) echo \"$1\" ;; esac }\n\n# initialize variables\novn_kubernetes_namespace=openshift-ovn-kubernetes\novndb_ctl_ssl_opts=\"-p /ovn-cert/tls.key -c /ovn-cert/tls.crt -C /ovn-ca/ca-bundle.crt\"\ntransport=\"ssl\"\novn_raft_conn_ip_url_suffix=\"\"\nif [[ \"${K8S_NODE_IP}\" == *\":\"* ]]; then\n  ovn_raft_conn_ip_url_suffix=\":[::]\"\nfi\ndb=\"sb\"\ndb_port=\"9642\"\novn_db_file=\"/etc/ovn/ovn${db}_db.db\"\n# checks if a db pod is part of a current cluster\ndb_part_of_cluster() {\n  local pod=${1}\n  local db=${2}\n  local port=${3}\n  echo \"Checking if ${pod} is part of cluster\"\n  # TODO: change to use '--request-timeout=5s', if https://github.com/kubernetes/kubernetes/issues/49343 is fixed. \n  init_ip=$(timeout 5 kubectl get pod -n ${ovn_kubernetes_namespace} ${pod} -o=jsonpath='{.status.podIP}')\n  if [[ $? != 0 ]]; then\n    echo \"Unable to get ${pod} ip \"\n    return 1\n  fi\n  echo \"Found ${pod} ip: $init_ip\"\n  init_ip=$(bracketify $init_ip)\n  target=$(ovn-${db}ctl --timeout=5 --db=${transport}:${init_ip}:${port} ${ovndb_ctl_ssl_opts} \\\n            --data=bare --no-headings --columns=target list connection)\n  if [[ \"${target}\" != \"p${transport}:${port}${ovn_raft_conn_ip_url_suffix}\" ]]; then\n    echo \"Unable to check correct target ${target} \"\n    return 1\n  fi\n  echo \"${pod} is part of cluster\"\n  return 0\n}\n# end of db_part_of_cluster\n\n# Checks if cluster has already been initialized.\n# If not it returns false and sets init_ip to CLUSTER_INITIATOR_IP\ncluster_exists() {\n  local db=${1}\n  local port=${2}\n  # TODO: change to use '--request-timeout=5s', if https://github.com/kubernetes/kubernetes/issues/49343 is fixed. \n  db_pods=$(timeout 5 kubectl get pod -n ${ovn_kubernetes_namespace} -o=jsonpath='{.items[*].metadata.name}' | egrep -o 'ovnkube-master-\\w+' | grep -v \"metrics\")\n\n  for db_pod in $db_pods; do\n    if db_part_of_cluster $db_pod $db $port; then\n      echo \"${db_pod} is part of current cluster with ip: ${init_ip}!\"\n      return 0\n    fi\n  done\n  # if we get here  there is no cluster, set init_ip and get out\n  init_ip=$(bracketify $CLUSTER_INITIATOR_IP)\n  return 1\n}\n# end of cluster_exists()\n\n# RAFT clusters need an odd number of members to achieve consensus.\n# The CNO determines which members make up the cluster, so if this container\n# is not supposed to be part of the cluster, wait forever doing nothing\n# (instad of exiting and causing CrashLoopBackoffs for no reason).\nif [[ ! \"ssl:10.0.216.248:9642,ssl:10.0.242.13:9642,ssl:10.0.172.21:9642\" =~ .*\":${K8S_NODE_IP}:\".* ]] && [[ ! \"ssl:10.0.216.248:9642,ssl:10.0.242.13:9642,ssl:10.0.172.21:9642\" =~ .*\":[${K8S_NODE_IP}]:\".* ]]; then\n  echo \"$(date -Iseconds) - not selected as RAFT member; sleeping...\"\n  sleep 1500d\n  exit 0\nfi\n\nOVN_ARGS=\"--db-sb-cluster-local-port=9644 \\\n  --db-sb-cluster-local-addr=$(bracketify ${K8S_NODE_IP}) \\\n  --no-monitor \\\n  --db-sb-cluster-local-proto=ssl \\\n  --ovn-sb-db-ssl-key=/ovn-cert/tls.key \\\n  --ovn-sb-db-ssl-cert=/ovn-cert/tls.crt \\\n  --ovn-sb-db-ssl-ca-cert=/ovn-ca/ca-bundle.crt\"\n\nCLUSTER_INITIATOR_IP=\"10.0.216.248\"\necho \"$(date -Iseconds) - starting sbdb  CLUSTER_INITIATOR_IP=${CLUSTER_INITIATOR_IP}\"\ninitialize=\"false\"\n\nif [[ ! -e ${ovn_db_file} ]]; then\n  initialize=\"true\"\nfi\n\nif [[ \"${initialize}\" == \"true\" ]]; then\n  # check to see if a cluster already exists. If it does, just join it.\n  counter=0\n  cluster_found=false\n  while [ $counter -lt 5 ]; do\n    if cluster_exists ${db} ${db_port}; then\n      cluster_found=true\n      break\n    fi\n    sleep 1\n    counter=$((counter+1))\n  done\n\n  if ${cluster_found}; then\n    echo \"Cluster already exists for DB: ${db}\"\n    # join existing cluster\n    exec /usr/share/ovn/scripts/ovn-ctl ${OVN_ARGS} \\\n    --db-sb-cluster-remote-port=9644 \\\n    --db-sb-cluster-remote-addr=${init_ip} \\\n    --db-sb-cluster-remote-proto=ssl \\\n    --ovn-sb-log=\"-vconsole:${OVN_LOG_LEVEL} -vfile:off -vPATTERN:console:%D{%Y-%m-%dT%H:%M:%S.###Z}|%05N|%c%T|%p|%m\" \\\n    run_sb_ovsdb &\n\n    wait $!\n  else\n    # either we need to initialize a new cluster or wait for master to create it\n    if [[ \"${K8S_NODE_IP}\" == \"${CLUSTER_INITIATOR_IP}\" ]]; then\n      # set DB election timer at DB creation time if OVN supports it\n      election_timer=\n      if test -n \"$(/usr/share/ovn/scripts/ovn-ctl --help 2>&1 | grep \"\\--db-sb-election-timer\")\"; then\n        election_timer=\"--db-sb-election-timer=$((16*1000))\"\n      fi\n\n      exec /usr/share/ovn/scripts/ovn-ctl ${OVN_ARGS} \\\n      --ovn-sb-log=\"-vconsole:${OVN_LOG_LEVEL} -vfile:off -vPATTERN:console:%D{%Y-%m-%dT%H:%M:%S.###Z}|%05N|%c%T|%p|%m\" \\\n      ${election_timer} \\\n      run_sb_ovsdb &\n\n      wait $!\n    else\n      exec /usr/share/ovn/scripts/ovn-ctl ${OVN_ARGS} \\\n      --db-sb-cluster-remote-port=9644 \\\n      --db-sb-cluster-remote-addr=${init_ip} \\\n      --db-sb-cluster-remote-proto=ssl \\\n      --ovn-sb-log=\"-vconsole:${OVN_LOG_LEVEL} -vfile:off -vPATTERN:console:%D{%Y-%m-%dT%H:%M:%S.###Z}|%05N|%c%T|%p|%m\" \\\n      run_sb_ovsdb &\n\n      wait $!\n    fi\n  fi\nelse\n  exec /usr/share/ovn/scripts/ovn-ctl ${OVN_ARGS} \\\n  --ovn-sb-log=\"-vconsole:${OVN_LOG_LEVEL} -vfile:off -vPATTERN:console:%D{%Y-%m-%dT%H:%M:%S.###Z}|%05N|%c%T|%p|%m\" \\\n  run_sb_ovsdb &\n\n  wait $!\nfi\n"
                ],
                "ports": [
                  {
                    "name": "sb-db-port",
                    "hostPort": 9642,
                    "containerPort": 9642,
                    "protocol": "TCP"
                  },
                  {
                    "name": "sb-db-raft-port",
                    "hostPort": 9644,
                    "containerPort": 9644,
                    "protocol": "TCP"
                  }
                ],
                "env": [
                  {
                    "name": "OVN_LOG_LEVEL",
                    "value": "info"
                  },
                  {
                    "name": "K8S_NODE_IP",
                    "valueFrom": {
                      "fieldRef": {
                        "apiVersion": "v1",
                        "fieldPath": "status.hostIP"
                      }
                    }
                  }
                ],
                "resources": {
                  "requests": {
                    "cpu": "10m",
                    "memory": "300Mi"
                  }
                },
                "volumeMounts": [
                  {
                    "name": "etc-openvswitch",
                    "mountPath": "/etc/openvswitch/"
                  },
                  {
                    "name": "etc-openvswitch",
                    "mountPath": "/etc/ovn/"
                  },
                  {
                    "name": "var-lib-openvswitch",
                    "mountPath": "/var/lib/openvswitch/"
                  },
                  {
                    "name": "run-openvswitch",
                    "mountPath": "/run/openvswitch/"
                  },
                  {
                    "name": "run-ovn",
                    "mountPath": "/run/ovn/"
                  },
                  {
                    "name": "env-overrides",
                    "mountPath": "/env"
                  },
                  {
                    "name": "ovn-cert",
                    "mountPath": "/ovn-cert"
                  },
                  {
                    "name": "ovn-ca",
                    "mountPath": "/ovn-ca"
                  }
                ],
                "readinessProbe": {
                  "exec": {
                    "command": [
                      "/bin/bash",
                      "-c",
                      "set -xeo pipefail\n\n# exit early if this DB is not supposed to be part of the cluster\nif [[ ! \"ssl:10.0.216.248:9642,ssl:10.0.242.13:9642,ssl:10.0.172.21:9642\" =~ .*\":${K8S_NODE_IP}:\".* ]] && [[ ! \"ssl:10.0.216.248:9642,ssl:10.0.242.13:9642,ssl:10.0.172.21:9642\" =~ .*\":[${K8S_NODE_IP}]:\".* ]]; then\n  exit 0\nfi\n\nleader_status=$(/usr/bin/ovn-appctl -t /var/run/ovn/ovnsb_db.ctl --timeout=3 cluster/status OVN_Southbound  2>/dev/null | { grep \"Leader: unknown\" || true; })\nif [[ ! -z \"${leader_status}\" ]]; then\n  echo \"SB DB Raft leader is unknown to the cluster node.\"\n  exit 1\nfi\n# set trim-on-compaction\n/usr/bin/ovn-appctl -t /var/run/ovn/ovnsb_db.ctl --timeout=5 ovsdb-server/memory-trim-on-compaction on 2>/dev/null\n"
                    ]
                  },
                  "initialDelaySeconds": 90,
                  "timeoutSeconds": 5,
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "failureThreshold": 3
                },
                "lifecycle": {
                  "postStart": {
                    "exec": {
                      "command": [
                        "/bin/bash",
                        "-c",
                        "set -x\nCLUSTER_INITIATOR_IP=\"10.0.216.248\"\nrm -f /var/run/ovn/ovnsb_db.pid\n\n# exit early if this DB is not supposed to be part of the cluster\nif [[ ! \"ssl:10.0.216.248:9642,ssl:10.0.242.13:9642,ssl:10.0.172.21:9642\" =~ .*\":${K8S_NODE_IP}:\".* ]] && [[ ! \"ssl:10.0.216.248:9642,ssl:10.0.242.13:9642,ssl:10.0.172.21:9642\" =~ .*\":[${K8S_NODE_IP}]:\".* ]]; then\n  exit 0\nfi\n\n# retry an operation a number of times, sleeping 2 seconds between each try\nretry() {\n  local tries=${1}\n  local desc=${2}\n  local cmd=${3}\n\n  local retries=0\n  while ! ${cmd}; do\n    (( retries += 1 ))\n    if [[ \"${retries}\" -gt ${tries} ]]; then\n      echo \"$(date -Iseconds) - ERROR - nbdb ${desc} - too many failed attempts, giving up\"\n      return 1\n    fi\n    echo \"$(date -Iseconds) - WARN - nbdb ${desc} - failed try ${retries}, retrying...\"\n    sleep 2\n  done\n  echo \"$(date -Iseconds) - INFO - nbdb ${desc} - success\"\n  return 0\n}\n\nif [[ \"${K8S_NODE_IP}\" == \"${CLUSTER_INITIATOR_IP}\" ]]; then\n  echo \"$(date -Iseconds) - sdb - postStart - waiting for master to be selected\"\n\n  # set the connection and inactivity probe\n  if ! retry 60 \"inactivity-probe\" \"ovn-sbctl --no-leader-only -t 5 set-connection pssl:9642 -- set connection . inactivity_probe=180000\"; then\n    exit 1\n  fi\n\n  # Upgrade the db if required.\n  DB_SCHEMA=\"/usr/share/ovn/ovn-sb.ovsschema\"\n  DB_SERVER=\"unix:/var/run/ovn/ovnsb_db.sock\"\n  schema_name=$(ovsdb-tool schema-name $DB_SCHEMA)\n  db_version=$(ovsdb-client -t 10 get-schema-version \"$DB_SERVER\" \"$schema_name\")\n  target_version=$(ovsdb-tool schema-version \"$DB_SCHEMA\")\n\n  if ovsdb-tool compare-versions \"$db_version\" == \"$target_version\"; then\n    :\n  elif ovsdb-tool compare-versions \"$db_version\" \">\" \"$target_version\"; then\n      echo \"Database $schema_name has newer schema version ($db_version) than our local schema ($target_version), possibly an upgrade is partially complete?\"\n  else\n      echo \"Upgrading database $schema_name from schema version $db_version to $target_version\"\n      ovsdb-client -t 30 convert \"$DB_SERVER\" \"$DB_SCHEMA\"\n  fi\nfi\n\n# Kill some time while the cluster converges by checking IPsec status\nOVN_SB_CTL=\"ovn-sbctl -p /ovn-cert/tls.key -c /ovn-cert/tls.crt -C /ovn-ca/ca-bundle.crt --db \"ssl:10.0.216.248:9642,ssl:10.0.242.13:9642,ssl:10.0.172.21:9642\"\"\nif ! retry 20 \"ipsec\" \"${OVN_SB_CTL} get sb_global . ipsec\"; then\n  exit 1\nfi\n"
                      ]
                    }
                  },
                  "preStop": {
                    "exec": {
                      "command": [
                        "/bin/bash",
                        "-c",
                        "echo \"$(date -Iseconds) - stopping sbdb\"\n/usr/share/ovn/scripts/ovn-ctl stop_sb_ovsdb\necho \"$(date -Iseconds) - sbdb stopped\"\nrm -f /var/run/ovn/ovnsb_db.pid\n"
                      ]
                    }
                  }
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "FallbackToLogsOnError",
                "imagePullPolicy": "IfNotPresent"
              },
              {
                "name": "ovnkube-master",
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:4b84a9489275cd767349ff95cc0b8b5ade73bef626dea8b941b0cea8bbb5ac96",
                "command": [
                  "/bin/bash",
                  "-c",
                  "set -xe\nif [[ -f \"/env/_master\" ]]; then\n  set -o allexport\n  source \"/env/_master\"\n  set +o allexport\nfi\n\nif [ \"shared\" == \"shared\" ]; then\n  gateway_mode_flags=\"--gateway-mode shared --gateway-interface br-ex\"\nelif [ \"shared\" == \"local\" ]; then\n  gateway_mode_flags=\"--gateway-mode local --gateway-interface br-ex\"\nelse\n  echo \"Invalid OVN_GATEWAY_MODE: \\\"shared\\\". Must be \\\"local\\\" or \\\"shared\\\".\"\n  exit 1\nfi\n\nmulti_network_enabled_flag=\nif [[ \"true\" == \"true\" ]]; then\n  multi_network_enabled_flag=\"--enable-multi-network\"\nfi\n\necho \"I$(date \"+%m%d %H:%M:%S.%N\") - ovnkube-master - start ovnkube --init-master ${K8S_NODE}\"\nexec /usr/bin/ovnkube \\\n  --init-master \"${K8S_NODE}\" \\\n  --config-file=/run/ovnkube-config/ovnkube.conf \\\n  --ovn-empty-lb-events \\\n  --loglevel \"${OVN_KUBE_LOG_LEVEL}\" \\\n  --metrics-bind-address \"127.0.0.1:29102\" \\\n  --metrics-enable-pprof \\\n  --metrics-enable-config-duration \\\n  ${gateway_mode_flags} \\\n  --sb-address \"ssl:10.0.216.248:9642,ssl:10.0.242.13:9642,ssl:10.0.172.21:9642\" \\\n  --sb-client-privkey /ovn-cert/tls.key \\\n  --sb-client-cert /ovn-cert/tls.crt \\\n  --sb-client-cacert /ovn-ca/ca-bundle.crt \\\n  --sb-cert-common-name \"ovn\" \\\n  --nb-address \"ssl:10.0.216.248:9641,ssl:10.0.242.13:9641,ssl:10.0.172.21:9641\" \\\n  --nb-client-privkey /ovn-cert/tls.key \\\n  --nb-client-cert /ovn-cert/tls.crt \\\n  --nb-client-cacert /ovn-ca/ca-bundle.crt \\\n  --nb-cert-common-name \"ovn\" \\\n  --enable-multicast \\\n  --disable-snat-multiple-gws \\\n  ${multi_network_enabled_flag} \\\n  --acl-logging-rate-limit \"20\"\n"
                ],
                "ports": [
                  {
                    "name": "metrics-port",
                    "hostPort": 29102,
                    "containerPort": 29102,
                    "protocol": "TCP"
                  }
                ],
                "env": [
                  {
                    "name": "OVN_KUBE_LOG_LEVEL",
                    "value": "4"
                  },
                  {
                    "name": "K8S_NODE",
                    "valueFrom": {
                      "fieldRef": {
                        "apiVersion": "v1",
                        "fieldPath": "spec.nodeName"
                      }
                    }
                  }
                ],
                "resources": {
                  "requests": {
                    "cpu": "10m",
                    "memory": "300Mi"
                  }
                },
                "volumeMounts": [
                  {
                    "name": "systemd-units",
                    "readOnly": true,
                    "mountPath": "/etc/systemd/system"
                  },
                  {
                    "name": "etc-openvswitch",
                    "mountPath": "/etc/openvswitch/"
                  },
                  {
                    "name": "etc-openvswitch",
                    "mountPath": "/etc/ovn/"
                  },
                  {
                    "name": "var-lib-openvswitch",
                    "mountPath": "/var/lib/openvswitch/"
                  },
                  {
                    "name": "run-openvswitch",
                    "mountPath": "/run/openvswitch/"
                  },
                  {
                    "name": "run-ovn",
                    "mountPath": "/run/ovn/"
                  },
                  {
                    "name": "ovnkube-config",
                    "mountPath": "/run/ovnkube-config/"
                  },
                  {
                    "name": "env-overrides",
                    "mountPath": "/env"
                  },
                  {
                    "name": "ovn-cert",
                    "mountPath": "/ovn-cert"
                  },
                  {
                    "name": "ovn-ca",
                    "mountPath": "/ovn-ca"
                  }
                ],
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "FallbackToLogsOnError",
                "imagePullPolicy": "IfNotPresent"
              },
              {
                "name": "ovn-dbchecker",
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:4b84a9489275cd767349ff95cc0b8b5ade73bef626dea8b941b0cea8bbb5ac96",
                "command": [
                  "/bin/bash",
                  "-c",
                  "set -xe\nif [[ -f \"/env/_master\" ]]; then\n  set -o allexport\n  source \"/env/_master\"\n  set +o allexport\nfi\n\necho \"I$(date \"+%m%d %H:%M:%S.%N\") - ovn-dbchecker - start ovn-dbchecker\"\n\n# RAFT clusters need an odd number of members to achieve consensus.\n# The CNO determines which members make up the cluster, so if this container\n# is not supposed to be part of the cluster, wait forever doing nothing\n# (instad of exiting and causing CrashLoopBackoffs for no reason).\nif [[ ! \"ssl:10.0.216.248:9641,ssl:10.0.242.13:9641,ssl:10.0.172.21:9641\" =~ .*\":${K8S_NODE_IP}:\".* ]] && [[ ! \"ssl:10.0.216.248:9641,ssl:10.0.242.13:9641,ssl:10.0.172.21:9641\" =~ .*\":[${K8S_NODE_IP}]:\".* ]]; then\n  echo \"$(date -Iseconds) - not selected as RAFT member; sleeping...\"\n  sleep 1500d\n  exit 0\nfi\n\nexec /usr/bin/ovndbchecker \\\n  --config-file=/run/ovnkube-config/ovnkube.conf \\\n  --loglevel \"${OVN_KUBE_LOG_LEVEL}\" \\\n  --sb-address \"ssl:10.0.216.248:9642,ssl:10.0.242.13:9642,ssl:10.0.172.21:9642\" \\\n  --sb-client-privkey /ovn-cert/tls.key \\\n  --sb-client-cert /ovn-cert/tls.crt \\\n  --sb-client-cacert /ovn-ca/ca-bundle.crt \\\n  --sb-cert-common-name \"ovn\" \\\n  --sb-raft-election-timer \"16\" \\\n  --nb-address \"ssl:10.0.216.248:9641,ssl:10.0.242.13:9641,ssl:10.0.172.21:9641\" \\\n  --nb-client-privkey /ovn-cert/tls.key \\\n  --nb-client-cert /ovn-cert/tls.crt \\\n  --nb-client-cacert /ovn-ca/ca-bundle.crt \\\n  --nb-cert-common-name \"ovn\" \\\n  --nb-raft-election-timer \"10\"\n"
                ],
                "env": [
                  {
                    "name": "OVN_KUBE_LOG_LEVEL",
                    "value": "4"
                  },
                  {
                    "name": "K8S_NODE_IP",
                    "valueFrom": {
                      "fieldRef": {
                        "apiVersion": "v1",
                        "fieldPath": "status.hostIP"
                      }
                    }
                  }
                ],
                "resources": {
                  "requests": {
                    "cpu": "10m",
                    "memory": "300Mi"
                  }
                },
                "volumeMounts": [
                  {
                    "name": "etc-openvswitch",
                    "mountPath": "/etc/openvswitch/"
                  },
                  {
                    "name": "etc-openvswitch",
                    "mountPath": "/etc/ovn/"
                  },
                  {
                    "name": "var-lib-openvswitch",
                    "mountPath": "/var/lib/openvswitch/"
                  },
                  {
                    "name": "run-openvswitch",
                    "mountPath": "/run/openvswitch/"
                  },
                  {
                    "name": "run-ovn",
                    "mountPath": "/run/ovn/"
                  },
                  {
                    "name": "ovnkube-config",
                    "mountPath": "/run/ovnkube-config/"
                  },
                  {
                    "name": "env-overrides",
                    "mountPath": "/env"
                  },
                  {
                    "name": "ovn-cert",
                    "mountPath": "/ovn-cert"
                  },
                  {
                    "name": "ovn-ca",
                    "mountPath": "/ovn-ca"
                  }
                ],
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "FallbackToLogsOnError",
                "imagePullPolicy": "IfNotPresent"
              }
            ],
            "restartPolicy": "Always",
            "terminationGracePeriodSeconds": 30,
            "dnsPolicy": "Default",
            "nodeSelector": {
              "beta.kubernetes.io/os": "linux",
              "node-role.kubernetes.io/master": ""
            },
            "serviceAccountName": "ovn-kubernetes-controller",
            "serviceAccount": "ovn-kubernetes-controller",
            "hostNetwork": true,
            "securityContext": {},
            "schedulerName": "default-scheduler",
            "tolerations": [
              {
                "key": "node-role.kubernetes.io/master",
                "operator": "Exists"
              },
              {
                "key": "node.kubernetes.io/not-ready",
                "operator": "Exists"
              },
              {
                "key": "node.kubernetes.io/unreachable",
                "operator": "Exists"
              },
              {
                "key": "node.kubernetes.io/network-unavailable",
                "operator": "Exists"
              }
            ],
            "priorityClassName": "system-cluster-critical"
          }
        },
        "updateStrategy": {
          "type": "RollingUpdate",
          "rollingUpdate": {
            "maxUnavailable": 1,
            "maxSurge": 0
          }
        },
        "revisionHistoryLimit": 10
      },
      "status": {
        "currentNumberScheduled": 3,
        "numberMisscheduled": 0,
        "desiredNumberScheduled": 3,
        "numberReady": 3,
        "observedGeneration": 1,
        "updatedNumberScheduled": 3,
        "numberAvailable": 3
      }
    },
    {
      "metadata": {
        "name": "ovnkube-node",
        "namespace": "openshift-ovn-kubernetes",
        "uid": "13ffb06b-38b4-4708-9153-c0a20fb0647b",
        "resourceVersion": "65803",
        "generation": 1,
        "creationTimestamp": "2023-08-25T07:43:41Z",
        "labels": {
          "networkoperator.openshift.io/generates-operator-status": "stand-alone"
        },
        "annotations": {
          "deprecated.daemonset.template.generation": "1",
          "kubernetes.io/description": "This daemonset launches the ovn-kubernetes per node networking components.\n",
          "networkoperator.openshift.io/cluster-network-cidr": "10.128.0.0/16",
          "networkoperator.openshift.io/hybrid-overlay-status": "disabled",
          "networkoperator.openshift.io/ip-family-mode": "single-stack",
          "release.openshift.io/version": "4.13.9"
        },
        "ownerReferences": [
          {
            "apiVersion": "operator.openshift.io/v1",
            "kind": "Network",
            "name": "cluster",
            "uid": "53e9017c-f35d-4e74-93d8-a278bb08cf90",
            "controller": true,
            "blockOwnerDeletion": true
          }
        ],
        "managedFields": [
          {
            "manager": "cluster-network-operator/operconfig",
            "operation": "Apply",
            "apiVersion": "apps/v1",
            "time": "2023-08-25T07:43:41Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  "f:kubernetes.io/description": {},
                  "f:networkoperator.openshift.io/cluster-network-cidr": {},
                  "f:networkoperator.openshift.io/hybrid-overlay-status": {},
                  "f:networkoperator.openshift.io/ip-family-mode": {},
                  "f:release.openshift.io/version": {}
                },
                "f:labels": {
                  "f:networkoperator.openshift.io/generates-operator-status": {}
                },
                "f:ownerReferences": {
                  "k:{\"uid\":\"53e9017c-f35d-4e74-93d8-a278bb08cf90\"}": {}
                }
              },
              "f:spec": {
                "f:selector": {},
                "f:template": {
                  "f:metadata": {
                    "f:annotations": {
                      "f:networkoperator.openshift.io/cluster-network-cidr": {},
                      "f:networkoperator.openshift.io/hybrid-overlay-status": {},
                      "f:networkoperator.openshift.io/ip-family-mode": {},
                      "f:target.workload.openshift.io/management": {}
                    },
                    "f:labels": {
                      "f:app": {},
                      "f:component": {},
                      "f:kubernetes.io/os": {},
                      "f:openshift.io/component": {},
                      "f:type": {}
                    }
                  },
                  "f:spec": {
                    "f:affinity": {
                      "f:nodeAffinity": {
                        "f:requiredDuringSchedulingIgnoredDuringExecution": {}
                      }
                    },
                    "f:containers": {
                      "k:{\"name\":\"kube-rbac-proxy\"}": {
                        ".": {},
                        "f:command": {},
                        "f:image": {},
                        "f:name": {},
                        "f:ports": {
                          "k:{\"containerPort\":9103,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:name": {}
                          }
                        },
                        "f:resources": {
                          "f:requests": {
                            "f:cpu": {},
                            "f:memory": {}
                          }
                        },
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          "k:{\"mountPath\":\"/etc/pki/tls/metrics-cert\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {},
                            "f:readOnly": {}
                          }
                        }
                      },
                      "k:{\"name\":\"kube-rbac-proxy-ovn-metrics\"}": {
                        ".": {},
                        "f:command": {},
                        "f:image": {},
                        "f:name": {},
                        "f:ports": {
                          "k:{\"containerPort\":9105,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:name": {}
                          }
                        },
                        "f:resources": {
                          "f:requests": {
                            "f:cpu": {},
                            "f:memory": {}
                          }
                        },
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          "k:{\"mountPath\":\"/etc/pki/tls/metrics-cert\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {},
                            "f:readOnly": {}
                          }
                        }
                      },
                      "k:{\"name\":\"ovn-acl-logging\"}": {
                        ".": {},
                        "f:command": {},
                        "f:image": {},
                        "f:name": {},
                        "f:resources": {
                          "f:requests": {
                            "f:cpu": {},
                            "f:memory": {}
                          }
                        },
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          "k:{\"mountPath\":\"/run/ovn/\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/var/log/ovn\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        }
                      },
                      "k:{\"name\":\"ovn-controller\"}": {
                        ".": {},
                        "f:command": {},
                        "f:env": {
                          "k:{\"name\":\"K8S_NODE\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": {
                              "f:fieldRef": {}
                            }
                          },
                          "k:{\"name\":\"OVN_LOG_LEVEL\"}": {
                            ".": {},
                            "f:name": {},
                            "f:value": {}
                          }
                        },
                        "f:image": {},
                        "f:name": {},
                        "f:resources": {
                          "f:requests": {
                            "f:cpu": {},
                            "f:memory": {}
                          }
                        },
                        "f:securityContext": {
                          "f:privileged": {}
                        },
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          "k:{\"mountPath\":\"/dev/log\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/env\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/etc/openvswitch\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/etc/ovn/\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/ovn-ca\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/ovn-cert\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/run/openvswitch\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/run/ovn/\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/var/lib/openvswitch\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/var/log/ovn\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        }
                      },
                      "k:{\"name\":\"ovnkube-node\"}": {
                        ".": {},
                        "f:command": {},
                        "f:env": {
                          "k:{\"name\":\"K8S_NODE\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": {
                              "f:fieldRef": {}
                            }
                          },
                          "k:{\"name\":\"KUBERNETES_SERVICE_HOST\"}": {
                            ".": {},
                            "f:name": {},
                            "f:value": {}
                          },
                          "k:{\"name\":\"KUBERNETES_SERVICE_PORT\"}": {
                            ".": {},
                            "f:name": {},
                            "f:value": {}
                          },
                          "k:{\"name\":\"OVN_CONTROLLER_INACTIVITY_PROBE\"}": {
                            ".": {},
                            "f:name": {},
                            "f:value": {}
                          },
                          "k:{\"name\":\"OVN_KUBE_LOG_LEVEL\"}": {
                            ".": {},
                            "f:name": {},
                            "f:value": {}
                          },
                          "k:{\"name\":\"POD_NAME\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": {
                              "f:fieldRef": {}
                            }
                          }
                        },
                        "f:image": {},
                        "f:lifecycle": {
                          "f:preStop": {
                            "f:exec": {
                              "f:command": {}
                            }
                          }
                        },
                        "f:name": {},
                        "f:ports": {
                          "k:{\"containerPort\":29103,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:name": {}
                          }
                        },
                        "f:readinessProbe": {
                          "f:exec": {
                            "f:command": {}
                          },
                          "f:initialDelaySeconds": {},
                          "f:periodSeconds": {}
                        },
                        "f:resources": {
                          "f:requests": {
                            "f:cpu": {},
                            "f:memory": {}
                          }
                        },
                        "f:securityContext": {
                          "f:privileged": {}
                        },
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          "k:{\"mountPath\":\"/cni-bin-dir\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/env\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/etc/cni/net.d\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/etc/openvswitch\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/etc/ovn/\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/etc/systemd/system\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {},
                            "f:readOnly": {}
                          },
                          "k:{\"mountPath\":\"/host\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:mountPropagation": {},
                            "f:name": {},
                            "f:readOnly": {}
                          },
                          "k:{\"mountPath\":\"/ovn-ca\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/ovn-cert\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/run/netns\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:mountPropagation": {},
                            "f:name": {},
                            "f:readOnly": {}
                          },
                          "k:{\"mountPath\":\"/run/openvswitch\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/run/ovn-kubernetes/\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/run/ovn/\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/run/ovnkube-config/\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/var/lib/cni/networks/ovn-k8s-cni-overlay\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/var/lib/openvswitch\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        }
                      }
                    },
                    "f:dnsPolicy": {},
                    "f:hostNetwork": {},
                    "f:hostPID": {},
                    "f:nodeSelector": {},
                    "f:priorityClassName": {},
                    "f:serviceAccountName": {},
                    "f:tolerations": {},
                    "f:volumes": {
                      "k:{\"name\":\"env-overrides\"}": {
                        ".": {},
                        "f:configMap": {
                          "f:name": {},
                          "f:optional": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"etc-openvswitch\"}": {
                        ".": {},
                        "f:hostPath": {
                          "f:path": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"host-cni-bin\"}": {
                        ".": {},
                        "f:hostPath": {
                          "f:path": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"host-cni-netd\"}": {
                        ".": {},
                        "f:hostPath": {
                          "f:path": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"host-run-netns\"}": {
                        ".": {},
                        "f:hostPath": {
                          "f:path": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"host-run-ovn-kubernetes\"}": {
                        ".": {},
                        "f:hostPath": {
                          "f:path": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"host-slash\"}": {
                        ".": {},
                        "f:hostPath": {
                          "f:path": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"host-var-lib-cni-networks-ovn-kubernetes\"}": {
                        ".": {},
                        "f:hostPath": {
                          "f:path": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"log-socket\"}": {
                        ".": {},
                        "f:hostPath": {
                          "f:path": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"node-log\"}": {
                        ".": {},
                        "f:hostPath": {
                          "f:path": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"ovn-ca\"}": {
                        ".": {},
                        "f:configMap": {
                          "f:name": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"ovn-cert\"}": {
                        ".": {},
                        "f:name": {},
                        "f:secret": {
                          "f:secretName": {}
                        }
                      },
                      "k:{\"name\":\"ovn-node-metrics-cert\"}": {
                        ".": {},
                        "f:name": {},
                        "f:secret": {
                          "f:optional": {},
                          "f:secretName": {}
                        }
                      },
                      "k:{\"name\":\"ovnkube-config\"}": {
                        ".": {},
                        "f:configMap": {
                          "f:name": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"run-openvswitch\"}": {
                        ".": {},
                        "f:hostPath": {
                          "f:path": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"run-ovn\"}": {
                        ".": {},
                        "f:hostPath": {
                          "f:path": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"systemd-units\"}": {
                        ".": {},
                        "f:hostPath": {
                          "f:path": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"var-lib-openvswitch\"}": {
                        ".": {},
                        "f:hostPath": {
                          "f:path": {}
                        },
                        "f:name": {}
                      }
                    }
                  }
                },
                "f:updateStrategy": {
                  "f:rollingUpdate": {
                    "f:maxUnavailable": {}
                  },
                  "f:type": {}
                }
              }
            }
          },
          {
            "manager": "kube-controller-manager",
            "operation": "Update",
            "apiVersion": "apps/v1",
            "time": "2023-08-25T08:20:26Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": {
                "f:currentNumberScheduled": {},
                "f:desiredNumberScheduled": {},
                "f:numberAvailable": {},
                "f:numberReady": {},
                "f:observedGeneration": {},
                "f:updatedNumberScheduled": {}
              }
            },
            "subresource": "status"
          }
        ]
      },
      "spec": {
        "selector": {
          "matchLabels": {
            "app": "ovnkube-node"
          }
        },
        "template": {
          "metadata": {
            "creationTimestamp": null,
            "labels": {
              "app": "ovnkube-node",
              "component": "network",
              "kubernetes.io/os": "linux",
              "openshift.io/component": "network",
              "type": "infra"
            },
            "annotations": {
              "networkoperator.openshift.io/cluster-network-cidr": "10.128.0.0/16",
              "networkoperator.openshift.io/hybrid-overlay-status": "disabled",
              "networkoperator.openshift.io/ip-family-mode": "single-stack",
              "target.workload.openshift.io/management": "{\"effect\": \"PreferredDuringScheduling\"}"
            }
          },
          "spec": {
            "volumes": [
              {
                "name": "systemd-units",
                "hostPath": {
                  "path": "/etc/systemd/system",
                  "type": ""
                }
              },
              {
                "name": "host-slash",
                "hostPath": {
                  "path": "/",
                  "type": ""
                }
              },
              {
                "name": "host-run-netns",
                "hostPath": {
                  "path": "/run/netns",
                  "type": ""
                }
              },
              {
                "name": "var-lib-openvswitch",
                "hostPath": {
                  "path": "/var/lib/openvswitch/data",
                  "type": ""
                }
              },
              {
                "name": "etc-openvswitch",
                "hostPath": {
                  "path": "/etc/openvswitch",
                  "type": ""
                }
              },
              {
                "name": "run-openvswitch",
                "hostPath": {
                  "path": "/var/run/openvswitch",
                  "type": ""
                }
              },
              {
                "name": "run-ovn",
                "hostPath": {
                  "path": "/var/run/ovn",
                  "type": ""
                }
              },
              {
                "name": "node-log",
                "hostPath": {
                  "path": "/var/log/ovn",
                  "type": ""
                }
              },
              {
                "name": "log-socket",
                "hostPath": {
                  "path": "/dev/log",
                  "type": ""
                }
              },
              {
                "name": "host-run-ovn-kubernetes",
                "hostPath": {
                  "path": "/run/ovn-kubernetes",
                  "type": ""
                }
              },
              {
                "name": "host-cni-bin",
                "hostPath": {
                  "path": "/var/lib/cni/bin",
                  "type": ""
                }
              },
              {
                "name": "host-cni-netd",
                "hostPath": {
                  "path": "/var/run/multus/cni/net.d",
                  "type": ""
                }
              },
              {
                "name": "host-var-lib-cni-networks-ovn-kubernetes",
                "hostPath": {
                  "path": "/var/lib/cni/networks/ovn-k8s-cni-overlay",
                  "type": ""
                }
              },
              {
                "name": "ovnkube-config",
                "configMap": {
                  "name": "ovnkube-config",
                  "defaultMode": 420
                }
              },
              {
                "name": "env-overrides",
                "configMap": {
                  "name": "env-overrides",
                  "defaultMode": 420,
                  "optional": true
                }
              },
              {
                "name": "ovn-ca",
                "configMap": {
                  "name": "ovn-ca",
                  "defaultMode": 420
                }
              },
              {
                "name": "ovn-cert",
                "secret": {
                  "secretName": "ovn-cert",
                  "defaultMode": 420
                }
              },
              {
                "name": "ovn-node-metrics-cert",
                "secret": {
                  "secretName": "ovn-node-metrics-cert",
                  "defaultMode": 420,
                  "optional": true
                }
              }
            ],
            "containers": [
              {
                "name": "ovn-controller",
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:4b84a9489275cd767349ff95cc0b8b5ade73bef626dea8b941b0cea8bbb5ac96",
                "command": [
                  "/bin/bash",
                  "-c",
                  "set -e\nif [[ -f \"/env/${K8S_NODE}\" ]]; then\n  set -o allexport\n  source \"/env/${K8S_NODE}\"\n  set +o allexport\nfi  \n\necho \"$(date -Iseconds) - starting ovn-controller\"\nexec ovn-controller unix:/var/run/openvswitch/db.sock -vfile:off \\\n  --no-chdir --pidfile=/var/run/ovn/ovn-controller.pid \\\n  --syslog-method=\"null\" \\\n  --log-file=/var/log/ovn/acl-audit-log.log \\\n  -vFACILITY:\"local0\" \\\n  -p /ovn-cert/tls.key -c /ovn-cert/tls.crt -C /ovn-ca/ca-bundle.crt \\\n  -vconsole:\"${OVN_LOG_LEVEL}\" -vconsole:\"acl_log:off\" \\\n  -vPATTERN:console:\"%D{%Y-%m-%dT%H:%M:%S.###Z}|%05N|%c%T|%p|%m\" \\\n  -vsyslog:\"acl_log:info\" \\\n  -vfile:\"acl_log:info\"\n"
                ],
                "env": [
                  {
                    "name": "OVN_LOG_LEVEL",
                    "value": "info"
                  },
                  {
                    "name": "K8S_NODE",
                    "valueFrom": {
                      "fieldRef": {
                        "apiVersion": "v1",
                        "fieldPath": "spec.nodeName"
                      }
                    }
                  }
                ],
                "resources": {
                  "requests": {
                    "cpu": "10m",
                    "memory": "300Mi"
                  }
                },
                "volumeMounts": [
                  {
                    "name": "run-openvswitch",
                    "mountPath": "/run/openvswitch"
                  },
                  {
                    "name": "run-ovn",
                    "mountPath": "/run/ovn/"
                  },
                  {
                    "name": "etc-openvswitch",
                    "mountPath": "/etc/openvswitch"
                  },
                  {
                    "name": "etc-openvswitch",
                    "mountPath": "/etc/ovn/"
                  },
                  {
                    "name": "var-lib-openvswitch",
                    "mountPath": "/var/lib/openvswitch"
                  },
                  {
                    "name": "env-overrides",
                    "mountPath": "/env"
                  },
                  {
                    "name": "ovn-cert",
                    "mountPath": "/ovn-cert"
                  },
                  {
                    "name": "ovn-ca",
                    "mountPath": "/ovn-ca"
                  },
                  {
                    "name": "node-log",
                    "mountPath": "/var/log/ovn"
                  },
                  {
                    "name": "log-socket",
                    "mountPath": "/dev/log"
                  }
                ],
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "FallbackToLogsOnError",
                "imagePullPolicy": "IfNotPresent",
                "securityContext": {
                  "privileged": true
                }
              },
              {
                "name": "ovn-acl-logging",
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:4b84a9489275cd767349ff95cc0b8b5ade73bef626dea8b941b0cea8bbb5ac96",
                "command": [
                  "/bin/bash",
                  "-c",
                  "set -euo pipefail\n\n# Rotate audit log files when then get to max size (in bytes)\nMAXFILESIZE=$(( \"50\"*1000000 )) \nLOGFILE=/var/log/ovn/acl-audit-log.log\nCONTROLLERPID=$(cat /run/ovn/ovn-controller.pid)\n\n# Redirect err to null so no messages are shown upon rotation\ntail -F ${LOGFILE} 2> /dev/null &\n\nwhile true\ndo\n  # Make sure ovn-controller's logfile exists, and get current size in bytes \n  if [ -f \"$LOGFILE\" ]; then \n    file_size=`du -b ${LOGFILE} | tr -s '\\t' ' ' | cut -d' ' -f1`\n  else \n    ovs-appctl -t /var/run/ovn/ovn-controller.${CONTROLLERPID}.ctl vlog/reopen\n    file_size=`du -b ${LOGFILE} | tr -s '\\t' ' ' | cut -d' ' -f1`\n  fi \n  \n  if [ $file_size -gt $MAXFILESIZE ];then\n    echo \"Rotating OVN ACL Log File\"\n    timestamp=`date '+%Y-%m-%dT%H-%M-%S'`\n    mv ${LOGFILE} /var/log/ovn/acl-audit-log.$timestamp.log\n    ovs-appctl -t /run/ovn/ovn-controller.${CONTROLLERPID}.ctl vlog/reopen\n    CONTROLLERPID=$(cat /run/ovn/ovn-controller.pid)\n  fi\n\n  # sleep for 30 seconds to avoid wasting CPU \n  sleep 30 \ndone\n"
                ],
                "resources": {
                  "requests": {
                    "cpu": "10m",
                    "memory": "20Mi"
                  }
                },
                "volumeMounts": [
                  {
                    "name": "node-log",
                    "mountPath": "/var/log/ovn"
                  },
                  {
                    "name": "run-ovn",
                    "mountPath": "/run/ovn/"
                  }
                ],
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "FallbackToLogsOnError",
                "imagePullPolicy": "IfNotPresent"
              },
              {
                "name": "kube-rbac-proxy",
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:eadc41af9cda0fa7e97b421f7b314024f7757cc545e87d5c99f96b03f335cf79",
                "command": [
                  "/bin/bash",
                  "-c",
                  "#!/bin/bash\nset -euo pipefail\nTLS_PK=/etc/pki/tls/metrics-cert/tls.key\nTLS_CERT=/etc/pki/tls/metrics-cert/tls.crt\n# As the secret mount is optional we must wait for the files to be present.\n# The service is created in monitor.yaml and this is created in sdn.yaml.\n# If it isn't created there is probably an issue so we want to crashloop.\nretries=0\nTS=$(date +%s)\nWARN_TS=$(( ${TS} + $(( 20 * 60)) ))\nHAS_LOGGED_INFO=0\n\nlog_missing_certs(){\n    CUR_TS=$(date +%s)\n    if [[ \"${CUR_TS}\" -gt \"WARN_TS\"  ]]; then\n      echo $(date -Iseconds) WARN: ovn-node-metrics-cert not mounted after 20 minutes.\n    elif [[ \"${HAS_LOGGED_INFO}\" -eq 0 ]] ; then\n      echo $(date -Iseconds) INFO: ovn-node-metrics-cert not mounted. Waiting one hour.\n      HAS_LOGGED_INFO=1\n    fi\n}\nwhile [[ ! -f \"${TLS_PK}\" ||  ! -f \"${TLS_CERT}\" ]] ; do\n  log_missing_certs\n  sleep 5\ndone\n\necho $(date -Iseconds) INFO: ovn-node-metrics-certs mounted, starting kube-rbac-proxy\nexec /usr/bin/kube-rbac-proxy \\\n  --logtostderr \\\n  --secure-listen-address=:9103 \\\n  --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256 \\\n  --upstream=http://127.0.0.1:29103/ \\\n  --tls-private-key-file=${TLS_PK} \\\n  --tls-cert-file=${TLS_CERT}\n"
                ],
                "ports": [
                  {
                    "name": "https",
                    "hostPort": 9103,
                    "containerPort": 9103,
                    "protocol": "TCP"
                  }
                ],
                "resources": {
                  "requests": {
                    "cpu": "10m",
                    "memory": "20Mi"
                  }
                },
                "volumeMounts": [
                  {
                    "name": "ovn-node-metrics-cert",
                    "readOnly": true,
                    "mountPath": "/etc/pki/tls/metrics-cert"
                  }
                ],
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "FallbackToLogsOnError",
                "imagePullPolicy": "IfNotPresent"
              },
              {
                "name": "kube-rbac-proxy-ovn-metrics",
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:eadc41af9cda0fa7e97b421f7b314024f7757cc545e87d5c99f96b03f335cf79",
                "command": [
                  "/bin/bash",
                  "-c",
                  "#!/bin/bash\nset -euo pipefail\nTLS_PK=/etc/pki/tls/metrics-cert/tls.key\nTLS_CERT=/etc/pki/tls/metrics-cert/tls.crt\n# As the secret mount is optional we must wait for the files to be present.\n# The service is created in monitor.yaml and this is created in sdn.yaml.\n# If it isn't created there is probably an issue so we want to crashloop.\nretries=0\nTS=$(date +%s)\nWARN_TS=$(( ${TS} + $(( 20 * 60)) ))\nHAS_LOGGED_INFO=0\n\nlog_missing_certs(){\n    CUR_TS=$(date +%s)\n    if [[ \"${CUR_TS}\" -gt \"WARN_TS\"  ]]; then\n      echo $(date -Iseconds) WARN: ovn-node-metrics-cert not mounted after 20 minutes.\n    elif [[ \"${HAS_LOGGED_INFO}\" -eq 0 ]] ; then\n      echo $(date -Iseconds) INFO: ovn-node-metrics-cert not mounted. Waiting one hour.\n      HAS_LOGGED_INFO=1\n    fi\n}\nwhile [[ ! -f \"${TLS_PK}\" ||  ! -f \"${TLS_CERT}\" ]] ; do\n  log_missing_certs\n  sleep 5\ndone\n\necho $(date -Iseconds) INFO: ovn-node-metrics-certs mounted, starting kube-rbac-proxy\nexec /usr/bin/kube-rbac-proxy \\\n  --logtostderr \\\n  --secure-listen-address=:9105 \\\n  --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256 \\\n  --upstream=http://127.0.0.1:29105/ \\\n  --tls-private-key-file=${TLS_PK} \\\n  --tls-cert-file=${TLS_CERT}\n"
                ],
                "ports": [
                  {
                    "name": "https",
                    "hostPort": 9105,
                    "containerPort": 9105,
                    "protocol": "TCP"
                  }
                ],
                "resources": {
                  "requests": {
                    "cpu": "10m",
                    "memory": "20Mi"
                  }
                },
                "volumeMounts": [
                  {
                    "name": "ovn-node-metrics-cert",
                    "readOnly": true,
                    "mountPath": "/etc/pki/tls/metrics-cert"
                  }
                ],
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "FallbackToLogsOnError",
                "imagePullPolicy": "IfNotPresent"
              },
              {
                "name": "ovnkube-node",
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:4b84a9489275cd767349ff95cc0b8b5ade73bef626dea8b941b0cea8bbb5ac96",
                "command": [
                  "/bin/bash",
                  "-c",
                  "set -xe\nif [[ -f \"/env/${K8S_NODE}\" ]]; then\n  set -o allexport\n  source \"/env/${K8S_NODE}\"\n  set +o allexport\nfi\n\nfunction log()\n{\n    echo \"$(date --iso-8601=seconds) [cnibincopy] ${1}\"\n}\n\n# collect host os information\n. /host/etc/os-release\nrhelmajor=\n# detect which version we're using in order to copy the proper binaries\ncase \"${ID}\" in\n  rhcos|scos)\n    rhelmajor=$(echo $RHEL_VERSION | sed -E 's/([0-9]+)\\.{1}[0-9]+(\\.[0-9]+)?/\\1/')\n  ;;\n  rhel) rhelmajor=$(echo \"${VERSION_ID}\" | cut -f 1 -d .)\n  ;;\n  fedora)\n    if [ \"${VARIANT_ID}\" == \"coreos\" ]; then\n      rhelmajor=8\n    else\n      log \"FATAL ERROR: Unsupported Fedora variant=${VARIANT_ID}\"\n      exit 1\n    fi\n  ;;\n  *) log \"FATAL ERROR: Unsupported OS ID=${ID}\"; exit 1\n  ;;\nesac\n\n# Set which directory we'll copy from, detect if it exists\nsourcedir=/usr/libexec/cni/\ncase \"${rhelmajor}\" in\n8)\n  sourcedir=/usr/libexec/cni/rhel8\n;;\n9)\n  sourcedir=/usr/libexec/cni/rhel9\n;;\n*)\n  log \"ERROR: RHEL Major Version Unsupported, rhelmajor=${rhelmajor}\"\n;;\nesac\n\ncp -f \"$sourcedir/ovn-k8s-cni-overlay\" /cni-bin-dir/\novn_config_namespace=openshift-ovn-kubernetes\necho \"I$(date \"+%m%d %H:%M:%S.%N\") - disable conntrack on geneve port\"\niptables -t raw -A PREROUTING -p udp --dport 6081 -j NOTRACK\niptables -t raw -A OUTPUT -p udp --dport 6081 -j NOTRACK\nip6tables -t raw -A PREROUTING -p udp --dport 6081 -j NOTRACK\nip6tables -t raw -A OUTPUT -p udp --dport 6081 -j NOTRACK\necho \"I$(date \"+%m%d %H:%M:%S.%N\") - starting ovnkube-node\"\n\nif [ \"shared\" == \"shared\" ]; then\n  gateway_mode_flags=\"--gateway-mode shared --gateway-interface br-ex\"\nelif [ \"shared\" == \"local\" ]; then\n  gateway_mode_flags=\"--gateway-mode local --gateway-interface br-ex\"\nelse\n  echo \"Invalid OVN_GATEWAY_MODE: \\\"shared\\\". Must be \\\"local\\\" or \\\"shared\\\".\"\n  exit 1\nfi\n\nexport_network_flows_flags=\nif [[ -n \"${NETFLOW_COLLECTORS}\" ]] ; then\n  export_network_flows_flags=\"--netflow-targets ${NETFLOW_COLLECTORS}\"\nfi\nif [[ -n \"${SFLOW_COLLECTORS}\" ]] ; then\n  export_network_flows_flags=\"$export_network_flows_flags --sflow-targets ${SFLOW_COLLECTORS}\"\nfi\nif [[ -n \"${IPFIX_COLLECTORS}\" ]] ; then\n  export_network_flows_flags=\"$export_network_flows_flags --ipfix-targets ${IPFIX_COLLECTORS}\"\nfi\nif [[ -n \"${IPFIX_CACHE_MAX_FLOWS}\" ]] ; then\n  export_network_flows_flags=\"$export_network_flows_flags --ipfix-cache-max-flows ${IPFIX_CACHE_MAX_FLOWS}\"\nfi\nif [[ -n \"${IPFIX_CACHE_ACTIVE_TIMEOUT}\" ]] ; then\n  export_network_flows_flags=\"$export_network_flows_flags --ipfix-cache-active-timeout ${IPFIX_CACHE_ACTIVE_TIMEOUT}\"\nfi\nif [[ -n \"${IPFIX_SAMPLING}\" ]] ; then\n  export_network_flows_flags=\"$export_network_flows_flags --ipfix-sampling ${IPFIX_SAMPLING}\"\nfi\ngw_interface_flag=\n# if br-ex1 is configured on the node, we want to use it for external gateway traffic\nif [ -d /sys/class/net/br-ex1 ]; then\n  gw_interface_flag=\"--exgw-interface=br-ex1\"\nfi\n\nnode_mgmt_port_netdev_flags=\nif [[ -n \"${OVNKUBE_NODE_MGMT_PORT_NETDEV}\" ]] ; then\n  node_mgmt_port_netdev_flags=\"--ovnkube-node-mgmt-port-netdev ${OVNKUBE_NODE_MGMT_PORT_NETDEV}\"\nfi\n\nmulti_network_enabled_flag=\nif [[ \"true\" == \"true\" ]]; then\n  multi_network_enabled_flag=\"--enable-multi-network\"\nfi\n\nexec /usr/bin/ovnkube --init-node \"${K8S_NODE}\" \\\n  --nb-address \"ssl:10.0.216.248:9641,ssl:10.0.242.13:9641,ssl:10.0.172.21:9641\" \\\n  --sb-address \"ssl:10.0.216.248:9642,ssl:10.0.242.13:9642,ssl:10.0.172.21:9642\" \\\n  --nb-client-privkey /ovn-cert/tls.key \\\n  --nb-client-cert /ovn-cert/tls.crt \\\n  --nb-client-cacert /ovn-ca/ca-bundle.crt \\\n  --nb-cert-common-name \"ovn\" \\\n  --sb-client-privkey /ovn-cert/tls.key \\\n  --sb-client-cert /ovn-cert/tls.crt \\\n  --sb-client-cacert /ovn-ca/ca-bundle.crt \\\n  --sb-cert-common-name \"ovn\" \\\n  --config-file=/run/ovnkube-config/ovnkube.conf \\\n  --loglevel \"${OVN_KUBE_LOG_LEVEL}\" \\\n  --inactivity-probe=\"${OVN_CONTROLLER_INACTIVITY_PROBE}\" \\\n  ${gateway_mode_flags} \\\n  ${node_mgmt_port_netdev_flags} \\\n  --metrics-bind-address \"127.0.0.1:29103\" \\\n  --ovn-metrics-bind-address \"127.0.0.1:29105\" \\\n  --metrics-enable-pprof \\\n  --export-ovs-metrics \\\n  --disable-snat-multiple-gws \\\n  ${export_network_flows_flags} \\\n  ${multi_network_enabled_flag} \\\n  ${gw_interface_flag}\n"
                ],
                "ports": [
                  {
                    "name": "metrics-port",
                    "hostPort": 29103,
                    "containerPort": 29103,
                    "protocol": "TCP"
                  }
                ],
                "env": [
                  {
                    "name": "KUBERNETES_SERVICE_PORT",
                    "value": "6443"
                  },
                  {
                    "name": "KUBERNETES_SERVICE_HOST",
                    "value": "api-int.aws-cls-os.itja.p1.openshiftapps.com"
                  },
                  {
                    "name": "OVN_CONTROLLER_INACTIVITY_PROBE",
                    "value": "180000"
                  },
                  {
                    "name": "OVN_KUBE_LOG_LEVEL",
                    "value": "4"
                  },
                  {
                    "name": "K8S_NODE",
                    "valueFrom": {
                      "fieldRef": {
                        "apiVersion": "v1",
                        "fieldPath": "spec.nodeName"
                      }
                    }
                  },
                  {
                    "name": "POD_NAME",
                    "valueFrom": {
                      "fieldRef": {
                        "apiVersion": "v1",
                        "fieldPath": "metadata.name"
                      }
                    }
                  }
                ],
                "resources": {
                  "requests": {
                    "cpu": "10m",
                    "memory": "300Mi"
                  }
                },
                "volumeMounts": [
                  {
                    "name": "systemd-units",
                    "readOnly": true,
                    "mountPath": "/etc/systemd/system"
                  },
                  {
                    "name": "host-slash",
                    "readOnly": true,
                    "mountPath": "/host",
                    "mountPropagation": "HostToContainer"
                  },
                  {
                    "name": "host-run-ovn-kubernetes",
                    "mountPath": "/run/ovn-kubernetes/"
                  },
                  {
                    "name": "host-run-netns",
                    "readOnly": true,
                    "mountPath": "/run/netns",
                    "mountPropagation": "HostToContainer"
                  },
                  {
                    "name": "host-cni-bin",
                    "mountPath": "/cni-bin-dir"
                  },
                  {
                    "name": "host-cni-netd",
                    "mountPath": "/etc/cni/net.d"
                  },
                  {
                    "name": "host-var-lib-cni-networks-ovn-kubernetes",
                    "mountPath": "/var/lib/cni/networks/ovn-k8s-cni-overlay"
                  },
                  {
                    "name": "run-openvswitch",
                    "mountPath": "/run/openvswitch"
                  },
                  {
                    "name": "run-ovn",
                    "mountPath": "/run/ovn/"
                  },
                  {
                    "name": "etc-openvswitch",
                    "mountPath": "/etc/openvswitch"
                  },
                  {
                    "name": "etc-openvswitch",
                    "mountPath": "/etc/ovn/"
                  },
                  {
                    "name": "var-lib-openvswitch",
                    "mountPath": "/var/lib/openvswitch"
                  },
                  {
                    "name": "ovnkube-config",
                    "mountPath": "/run/ovnkube-config/"
                  },
                  {
                    "name": "env-overrides",
                    "mountPath": "/env"
                  },
                  {
                    "name": "ovn-cert",
                    "mountPath": "/ovn-cert"
                  },
                  {
                    "name": "ovn-ca",
                    "mountPath": "/ovn-ca"
                  }
                ],
                "readinessProbe": {
                  "exec": {
                    "command": [
                      "test",
                      "-f",
                      "/etc/cni/net.d/10-ovn-kubernetes.conf"
                    ]
                  },
                  "initialDelaySeconds": 5,
                  "timeoutSeconds": 1,
                  "periodSeconds": 30,
                  "successThreshold": 1,
                  "failureThreshold": 3
                },
                "lifecycle": {
                  "preStop": {
                    "exec": {
                      "command": [
                        "rm",
                        "-f",
                        "/etc/cni/net.d/10-ovn-kubernetes.conf"
                      ]
                    }
                  }
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "FallbackToLogsOnError",
                "imagePullPolicy": "IfNotPresent",
                "securityContext": {
                  "privileged": true
                }
              }
            ],
            "restartPolicy": "Always",
            "terminationGracePeriodSeconds": 30,
            "dnsPolicy": "Default",
            "nodeSelector": {
              "beta.kubernetes.io/os": "linux"
            },
            "serviceAccountName": "ovn-kubernetes-node",
            "serviceAccount": "ovn-kubernetes-node",
            "hostNetwork": true,
            "hostPID": true,
            "securityContext": {},
            "affinity": {
              "nodeAffinity": {
                "requiredDuringSchedulingIgnoredDuringExecution": {
                  "nodeSelectorTerms": [
                    {
                      "matchExpressions": [
                        {
                          "key": "network.operator.openshift.io/dpu-host",
                          "operator": "DoesNotExist"
                        },
                        {
                          "key": "network.operator.openshift.io/dpu",
                          "operator": "DoesNotExist"
                        }
                      ]
                    }
                  ]
                }
              }
            },
            "schedulerName": "default-scheduler",
            "tolerations": [
              {
                "operator": "Exists"
              }
            ],
            "priorityClassName": "system-node-critical"
          }
        },
        "updateStrategy": {
          "type": "RollingUpdate",
          "rollingUpdate": {
            "maxUnavailable": "10%",
            "maxSurge": 0
          }
        },
        "revisionHistoryLimit": 10
      },
      "status": {
        "currentNumberScheduled": 7,
        "numberMisscheduled": 0,
        "desiredNumberScheduled": 7,
        "numberReady": 7,
        "observedGeneration": 1,
        "updatedNumberScheduled": 7,
        "numberAvailable": 7
      }
    },
    {
      "metadata": {
        "name": "audit-exporter",
        "namespace": "openshift-security",
        "uid": "54c996fd-e3c9-4594-8da7-8ec23feed31d",
        "resourceVersion": "63099",
        "generation": 1,
        "creationTimestamp": "2023-08-25T08:01:00Z",
        "labels": {
          "app": "audit-exporter",
          "hive.openshift.io/managed": "true"
        },
        "annotations": {
          "deprecated.daemonset.template.generation": "1",
          "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"DaemonSet\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"audit-exporter\",\"hive.openshift.io/managed\":\"true\"},\"name\":\"audit-exporter\",\"namespace\":\"openshift-security\"},\"spec\":{\"selector\":{\"matchLabels\":{\"app\":\"audit-exporter\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"audit-exporter\"},\"name\":\"audit-exporter\",\"namespace\":\"openshift-security\"},\"spec\":{\"automountServiceAccountToken\":false,\"containers\":[{\"command\":[\"/bin/audit-exporter\",\"--log-file=/var/log/osd-audit/audit.log\",\"--tls-cert-file=/certs/tls.crt\",\"--tls-private-key-file=/certs/tls.key\"],\"image\":\"quay.io/app-sre/splunk-audit-exporter@sha256:bbca8dfd77d15c6dde3495985c1a75354ad79339ecba6820e7ceef2282422964\",\"imagePullPolicy\":\"Always\",\"name\":\"audit-exporter\",\"resources\":{\"limits\":{\"memory\":\"256Mi\"},\"requests\":{\"memory\":\"256Mi\"}},\"securityContext\":{\"privileged\":true,\"runAsUser\":0},\"volumeMounts\":[{\"mountPath\":\"/config\",\"name\":\"config\"},{\"mountPath\":\"/var/log\",\"name\":\"logs\"},{\"mountPath\":\"/certs\",\"name\":\"tls-certs-secret\",\"readOnly\":true}]}],\"nodeSelector\":{\"node-role.kubernetes.io/master\":\"\"},\"ports\":[{\"containerPort\":9090,\"name\":\"metrics\",\"protocol\":\"TCP\"}],\"restartPolicy\":\"Always\",\"terminationGracePeriodSeconds\":5,\"tolerations\":[{\"operator\":\"Exists\"}],\"volumes\":[{\"configMap\":{\"name\":\"osd-audit-policy\"},\"name\":\"config\"},{\"name\":\"tls-certs-secret\",\"secret\":{\"secretName\":\"audit-exporter-certs\"}},{\"hostPath\":{\"path\":\"/var/log\",\"type\":\"Directory\"},\"name\":\"logs\"}]}}}}\n"
        },
        "managedFields": [
          {
            "manager": "Go-http-client",
            "operation": "Update",
            "apiVersion": "apps/v1",
            "time": "2023-08-25T08:01:00Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:deprecated.daemonset.template.generation": {},
                  "f:kubectl.kubernetes.io/last-applied-configuration": {}
                },
                "f:labels": {
                  ".": {},
                  "f:app": {},
                  "f:hive.openshift.io/managed": {}
                }
              },
              "f:spec": {
                "f:revisionHistoryLimit": {},
                "f:selector": {},
                "f:template": {
                  "f:metadata": {
                    "f:labels": {
                      ".": {},
                      "f:app": {}
                    },
                    "f:name": {},
                    "f:namespace": {}
                  },
                  "f:spec": {
                    "f:automountServiceAccountToken": {},
                    "f:containers": {
                      "k:{\"name\":\"audit-exporter\"}": {
                        ".": {},
                        "f:command": {},
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:name": {},
                        "f:resources": {
                          ".": {},
                          "f:limits": {
                            ".": {},
                            "f:memory": {}
                          },
                          "f:requests": {
                            ".": {},
                            "f:memory": {}
                          }
                        },
                        "f:securityContext": {
                          ".": {},
                          "f:privileged": {},
                          "f:runAsUser": {}
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/certs\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {},
                            "f:readOnly": {}
                          },
                          "k:{\"mountPath\":\"/config\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/var/log\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        }
                      }
                    },
                    "f:dnsPolicy": {},
                    "f:nodeSelector": {},
                    "f:restartPolicy": {},
                    "f:schedulerName": {},
                    "f:securityContext": {},
                    "f:terminationGracePeriodSeconds": {},
                    "f:tolerations": {},
                    "f:volumes": {
                      ".": {},
                      "k:{\"name\":\"config\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"logs\"}": {
                        ".": {},
                        "f:hostPath": {
                          ".": {},
                          "f:path": {},
                          "f:type": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"tls-certs-secret\"}": {
                        ".": {},
                        "f:name": {},
                        "f:secret": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:secretName": {}
                        }
                      }
                    }
                  }
                },
                "f:updateStrategy": {
                  "f:rollingUpdate": {
                    ".": {},
                    "f:maxSurge": {},
                    "f:maxUnavailable": {}
                  },
                  "f:type": {}
                }
              }
            }
          },
          {
            "manager": "kube-controller-manager",
            "operation": "Update",
            "apiVersion": "apps/v1",
            "time": "2023-08-25T08:18:07Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": {
                "f:currentNumberScheduled": {},
                "f:desiredNumberScheduled": {},
                "f:numberAvailable": {},
                "f:numberReady": {},
                "f:observedGeneration": {},
                "f:updatedNumberScheduled": {}
              }
            },
            "subresource": "status"
          }
        ]
      },
      "spec": {
        "selector": {
          "matchLabels": {
            "app": "audit-exporter"
          }
        },
        "template": {
          "metadata": {
            "name": "audit-exporter",
            "namespace": "openshift-security",
            "creationTimestamp": null,
            "labels": {
              "app": "audit-exporter"
            }
          },
          "spec": {
            "volumes": [
              {
                "name": "config",
                "configMap": {
                  "name": "osd-audit-policy",
                  "defaultMode": 420
                }
              },
              {
                "name": "tls-certs-secret",
                "secret": {
                  "secretName": "audit-exporter-certs",
                  "defaultMode": 420
                }
              },
              {
                "name": "logs",
                "hostPath": {
                  "path": "/var/log",
                  "type": "Directory"
                }
              }
            ],
            "containers": [
              {
                "name": "audit-exporter",
                "image": "quay.io/app-sre/splunk-audit-exporter@sha256:bbca8dfd77d15c6dde3495985c1a75354ad79339ecba6820e7ceef2282422964",
                "command": [
                  "/bin/audit-exporter",
                  "--log-file=/var/log/osd-audit/audit.log",
                  "--tls-cert-file=/certs/tls.crt",
                  "--tls-private-key-file=/certs/tls.key"
                ],
                "resources": {
                  "limits": {
                    "memory": "256Mi"
                  },
                  "requests": {
                    "memory": "256Mi"
                  }
                },
                "volumeMounts": [
                  {
                    "name": "config",
                    "mountPath": "/config"
                  },
                  {
                    "name": "logs",
                    "mountPath": "/var/log"
                  },
                  {
                    "name": "tls-certs-secret",
                    "readOnly": true,
                    "mountPath": "/certs"
                  }
                ],
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "imagePullPolicy": "Always",
                "securityContext": {
                  "privileged": true,
                  "runAsUser": 0
                }
              }
            ],
            "restartPolicy": "Always",
            "terminationGracePeriodSeconds": 5,
            "dnsPolicy": "ClusterFirst",
            "nodeSelector": {
              "node-role.kubernetes.io/master": ""
            },
            "automountServiceAccountToken": false,
            "securityContext": {},
            "schedulerName": "default-scheduler",
            "tolerations": [
              {
                "operator": "Exists"
              }
            ]
          }
        },
        "updateStrategy": {
          "type": "RollingUpdate",
          "rollingUpdate": {
            "maxUnavailable": 1,
            "maxSurge": 0
          }
        },
        "revisionHistoryLimit": 10
      },
      "status": {
        "currentNumberScheduled": 3,
        "numberMisscheduled": 0,
        "desiredNumberScheduled": 3,
        "numberReady": 3,
        "observedGeneration": 1,
        "updatedNumberScheduled": 3,
        "numberAvailable": 3
      }
    },
    {
      "metadata": {
        "name": "splunkforwarder-ds",
        "namespace": "openshift-security",
        "uid": "870c7d03-6ba4-4ca8-8f23-a7c15994afb2",
        "resourceVersion": "65401",
        "generation": 1,
        "creationTimestamp": "2023-08-25T08:10:17Z",
        "labels": {
          "app": "splunkforwarder"
        },
        "annotations": {
          "deprecated.daemonset.template.generation": "1",
          "genVersion": "1"
        },
        "ownerReferences": [
          {
            "apiVersion": "splunkforwarder.managed.openshift.io/v1alpha1",
            "kind": "SplunkForwarder",
            "name": "splunkforwarder",
            "uid": "0bd874dc-e20e-4967-9b15-dc23087c73fe",
            "controller": true,
            "blockOwnerDeletion": true
          }
        ],
        "managedFields": [
          {
            "manager": "Go-http-client",
            "operation": "Update",
            "apiVersion": "apps/v1",
            "time": "2023-08-25T08:10:17Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:deprecated.daemonset.template.generation": {},
                  "f:genVersion": {}
                },
                "f:labels": {
                  ".": {},
                  "f:app": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"0bd874dc-e20e-4967-9b15-dc23087c73fe\"}": {}
                }
              },
              "f:spec": {
                "f:revisionHistoryLimit": {},
                "f:selector": {},
                "f:template": {
                  "f:metadata": {
                    "f:labels": {
                      ".": {},
                      "f:name": {}
                    },
                    "f:name": {},
                    "f:namespace": {}
                  },
                  "f:spec": {
                    "f:containers": {
                      "k:{\"name\":\"splunk-uf\"}": {
                        ".": {},
                        "f:env": {
                          ".": {},
                          "k:{\"name\":\"HOSTNAME\"}": {
                            ".": {},
                            "f:name": {},
                            "f:valueFrom": {
                              ".": {},
                              "f:fieldRef": {}
                            }
                          },
                          "k:{\"name\":\"SPLUNK_ACCEPT_LICENSE\"}": {
                            ".": {},
                            "f:name": {},
                            "f:value": {}
                          }
                        },
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:name": {},
                        "f:ports": {
                          ".": {},
                          "k:{\"containerPort\":8089,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:protocol": {}
                          }
                        },
                        "f:resources": {},
                        "f:securityContext": {
                          ".": {},
                          "f:privileged": {},
                          "f:runAsUser": {}
                        },
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/host\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:mountPropagation": {},
                            "f:name": {},
                            "f:readOnly": {}
                          },
                          "k:{\"mountPath\":\"/opt/splunkforwarder/etc/apps/osd_monitored_logs/local\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/opt/splunkforwarder/etc/apps/osd_monitored_logs/metadata\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/opt/splunkforwarder/etc/apps/splunkauth/default\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/opt/splunkforwarder/etc/apps/splunkauth/local\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/opt/splunkforwarder/etc/apps/splunkauth/metadata\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          },
                          "k:{\"mountPath\":\"/opt/splunkforwarder/var/lib\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {}
                          }
                        }
                      }
                    },
                    "f:dnsPolicy": {},
                    "f:nodeSelector": {},
                    "f:restartPolicy": {},
                    "f:schedulerName": {},
                    "f:securityContext": {},
                    "f:serviceAccount": {},
                    "f:serviceAccountName": {},
                    "f:terminationGracePeriodSeconds": {},
                    "f:tolerations": {},
                    "f:volumes": {
                      ".": {},
                      "k:{\"name\":\"host\"}": {
                        ".": {},
                        "f:hostPath": {
                          ".": {},
                          "f:path": {},
                          "f:type": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"osd-monitored-logs-local\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"osd-monitored-logs-metadata\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"splunk-auth\"}": {
                        ".": {},
                        "f:name": {},
                        "f:secret": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:secretName": {}
                        }
                      },
                      "k:{\"name\":\"splunk-state\"}": {
                        ".": {},
                        "f:hostPath": {
                          ".": {},
                          "f:path": {},
                          "f:type": {}
                        },
                        "f:name": {}
                      }
                    }
                  }
                },
                "f:updateStrategy": {
                  "f:rollingUpdate": {
                    ".": {},
                    "f:maxSurge": {},
                    "f:maxUnavailable": {}
                  },
                  "f:type": {}
                }
              }
            }
          },
          {
            "manager": "kube-controller-manager",
            "operation": "Update",
            "apiVersion": "apps/v1",
            "time": "2023-08-25T08:20:09Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": {
                "f:currentNumberScheduled": {},
                "f:desiredNumberScheduled": {},
                "f:numberAvailable": {},
                "f:numberReady": {},
                "f:observedGeneration": {},
                "f:updatedNumberScheduled": {}
              }
            },
            "subresource": "status"
          }
        ]
      },
      "spec": {
        "selector": {
          "matchLabels": {
            "name": "splunk-forwarder"
          }
        },
        "template": {
          "metadata": {
            "name": "splunk-forwarder",
            "namespace": "openshift-security",
            "creationTimestamp": null,
            "labels": {
              "name": "splunk-forwarder"
            }
          },
          "spec": {
            "volumes": [
              {
                "name": "osd-monitored-logs-local",
                "configMap": {
                  "name": "osd-monitored-logs-local",
                  "defaultMode": 420
                }
              },
              {
                "name": "osd-monitored-logs-metadata",
                "configMap": {
                  "name": "osd-monitored-logs-metadata",
                  "defaultMode": 420
                }
              },
              {
                "name": "splunk-state",
                "hostPath": {
                  "path": "/var/lib/misc",
                  "type": "Directory"
                }
              },
              {
                "name": "host",
                "hostPath": {
                  "path": "/",
                  "type": "Directory"
                }
              },
              {
                "name": "splunk-auth",
                "secret": {
                  "secretName": "splunk-auth",
                  "defaultMode": 420
                }
              }
            ],
            "containers": [
              {
                "name": "splunk-uf",
                "image": "quay.io/app-sre/splunk-forwarder@sha256:2ef00a5d578eb56a8ca1bf4c3d3a34d7b198b5e17e4ec400fd84270c6009d072",
                "ports": [
                  {
                    "containerPort": 8089,
                    "protocol": "TCP"
                  }
                ],
                "env": [
                  {
                    "name": "SPLUNK_ACCEPT_LICENSE",
                    "value": "yes"
                  },
                  {
                    "name": "HOSTNAME",
                    "valueFrom": {
                      "fieldRef": {
                        "apiVersion": "v1",
                        "fieldPath": "spec.nodeName"
                      }
                    }
                  }
                ],
                "resources": {},
                "volumeMounts": [
                  {
                    "name": "splunk-auth",
                    "mountPath": "/opt/splunkforwarder/etc/apps/splunkauth/default"
                  },
                  {
                    "name": "splunk-auth",
                    "mountPath": "/opt/splunkforwarder/etc/apps/splunkauth/local"
                  },
                  {
                    "name": "splunk-auth",
                    "mountPath": "/opt/splunkforwarder/etc/apps/splunkauth/metadata"
                  },
                  {
                    "name": "osd-monitored-logs-local",
                    "mountPath": "/opt/splunkforwarder/etc/apps/osd_monitored_logs/local"
                  },
                  {
                    "name": "osd-monitored-logs-metadata",
                    "mountPath": "/opt/splunkforwarder/etc/apps/osd_monitored_logs/metadata"
                  },
                  {
                    "name": "splunk-state",
                    "mountPath": "/opt/splunkforwarder/var/lib"
                  },
                  {
                    "name": "host",
                    "readOnly": true,
                    "mountPath": "/host",
                    "mountPropagation": "HostToContainer"
                  }
                ],
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "imagePullPolicy": "Always",
                "securityContext": {
                  "privileged": true,
                  "runAsUser": 0
                }
              }
            ],
            "restartPolicy": "Always",
            "terminationGracePeriodSeconds": 10,
            "dnsPolicy": "ClusterFirst",
            "nodeSelector": {
              "beta.kubernetes.io/os": "linux"
            },
            "serviceAccountName": "default",
            "serviceAccount": "default",
            "securityContext": {},
            "schedulerName": "default-scheduler",
            "tolerations": [
              {
                "operator": "Exists"
              }
            ]
          }
        },
        "updateStrategy": {
          "type": "RollingUpdate",
          "rollingUpdate": {
            "maxUnavailable": 1,
            "maxSurge": 0
          }
        },
        "revisionHistoryLimit": 10
      },
      "status": {
        "currentNumberScheduled": 7,
        "numberMisscheduled": 0,
        "desiredNumberScheduled": 7,
        "numberReady": 7,
        "observedGeneration": 1,
        "updatedNumberScheduled": 7,
        "numberAvailable": 7
      }
    },
    {
      "metadata": {
        "name": "validation-webhook",
        "namespace": "openshift-validation-webhook",
        "uid": "a5b53a6c-3844-40df-b669-fae2db21302c",
        "resourceVersion": "62969",
        "generation": 1,
        "creationTimestamp": "2023-08-25T08:00:38Z",
        "labels": {
          "app": "validation-webhook",
          "hive.openshift.io/managed": "true"
        },
        "annotations": {
          "deprecated.daemonset.template.generation": "1",
          "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"DaemonSet\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"validation-webhook\",\"hive.openshift.io/managed\":\"true\"},\"name\":\"validation-webhook\",\"namespace\":\"openshift-validation-webhook\"},\"spec\":{\"selector\":{\"matchLabels\":{\"app\":\"validation-webhook\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"validation-webhook\"}},\"spec\":{\"affinity\":{\"nodeAffinity\":{\"requiredDuringSchedulingIgnoredDuringExecution\":{\"nodeSelectorTerms\":[{\"matchExpressions\":[{\"key\":\"node-role.kubernetes.io/master\",\"operator\":\"In\",\"values\":[\"\"]}]}]}}},\"containers\":[{\"command\":[\"webhooks\",\"-tlskey\",\"/service-certs/tls.key\",\"-tlscert\",\"/service-certs/tls.crt\",\"-cacert\",\"/service-ca/service-ca.crt\",\"-tls\"],\"image\":\"quay.io/app-sre/managed-cluster-validating-webhooks@sha256:ed78e4329bdaa7f2b8811126774a2db03d420b4d67d90cc737fc695cc5f46549\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"webhooks\",\"ports\":[{\"containerPort\":5000}],\"resources\":{},\"volumeMounts\":[{\"mountPath\":\"/service-certs\",\"name\":\"service-certs\",\"readOnly\":true},{\"mountPath\":\"/service-ca\",\"name\":\"service-ca\",\"readOnly\":true}]}],\"restartPolicy\":\"Always\",\"serviceAccount\":\"\",\"serviceAccountName\":\"\",\"tolerations\":[{\"effect\":\"NoSchedule\",\"key\":\"node-role.kubernetes.io/master\"},{\"effect\":\"NoExecute\",\"key\":\"node-role.kubernetes.io/master\"}],\"volumes\":[{\"name\":\"service-certs\",\"secret\":{\"secretName\":\"webhook-cert\"}},{\"configMap\":{\"name\":\"webhook-cert\"},\"name\":\"service-ca\"}]}},\"updateStrategy\":{\"rollingUpdate\":{\"maxUnavailable\":1},\"type\":\"RollingUpdate\"}},\"status\":{\"currentNumberScheduled\":0,\"desiredNumberScheduled\":0,\"numberMisscheduled\":0,\"numberReady\":0}}\n"
        },
        "managedFields": [
          {
            "manager": "manager",
            "operation": "Update",
            "apiVersion": "apps/v1",
            "time": "2023-08-25T08:00:38Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:deprecated.daemonset.template.generation": {},
                  "f:kubectl.kubernetes.io/last-applied-configuration": {}
                },
                "f:labels": {
                  ".": {},
                  "f:app": {},
                  "f:hive.openshift.io/managed": {}
                }
              },
              "f:spec": {
                "f:revisionHistoryLimit": {},
                "f:selector": {},
                "f:template": {
                  "f:metadata": {
                    "f:labels": {
                      ".": {},
                      "f:app": {}
                    }
                  },
                  "f:spec": {
                    "f:affinity": {
                      ".": {},
                      "f:nodeAffinity": {
                        ".": {},
                        "f:requiredDuringSchedulingIgnoredDuringExecution": {}
                      }
                    },
                    "f:containers": {
                      "k:{\"name\":\"webhooks\"}": {
                        ".": {},
                        "f:command": {},
                        "f:image": {},
                        "f:imagePullPolicy": {},
                        "f:name": {},
                        "f:ports": {
                          ".": {},
                          "k:{\"containerPort\":5000,\"protocol\":\"TCP\"}": {
                            ".": {},
                            "f:containerPort": {},
                            "f:protocol": {}
                          }
                        },
                        "f:resources": {},
                        "f:terminationMessagePath": {},
                        "f:terminationMessagePolicy": {},
                        "f:volumeMounts": {
                          ".": {},
                          "k:{\"mountPath\":\"/service-ca\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {},
                            "f:readOnly": {}
                          },
                          "k:{\"mountPath\":\"/service-certs\"}": {
                            ".": {},
                            "f:mountPath": {},
                            "f:name": {},
                            "f:readOnly": {}
                          }
                        }
                      }
                    },
                    "f:dnsPolicy": {},
                    "f:restartPolicy": {},
                    "f:schedulerName": {},
                    "f:securityContext": {},
                    "f:terminationGracePeriodSeconds": {},
                    "f:tolerations": {},
                    "f:volumes": {
                      ".": {},
                      "k:{\"name\":\"service-ca\"}": {
                        ".": {},
                        "f:configMap": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:name": {}
                        },
                        "f:name": {}
                      },
                      "k:{\"name\":\"service-certs\"}": {
                        ".": {},
                        "f:name": {},
                        "f:secret": {
                          ".": {},
                          "f:defaultMode": {},
                          "f:secretName": {}
                        }
                      }
                    }
                  }
                },
                "f:updateStrategy": {
                  "f:rollingUpdate": {
                    ".": {},
                    "f:maxSurge": {},
                    "f:maxUnavailable": {}
                  },
                  "f:type": {}
                }
              }
            }
          },
          {
            "manager": "kube-controller-manager",
            "operation": "Update",
            "apiVersion": "apps/v1",
            "time": "2023-08-25T08:18:05Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": {
                "f:currentNumberScheduled": {},
                "f:desiredNumberScheduled": {},
                "f:numberAvailable": {},
                "f:numberMisscheduled": {},
                "f:numberReady": {},
                "f:observedGeneration": {},
                "f:updatedNumberScheduled": {}
              }
            },
            "subresource": "status"
          }
        ]
      },
      "spec": {
        "selector": {
          "matchLabels": {
            "app": "validation-webhook"
          }
        },
        "template": {
          "metadata": {
            "creationTimestamp": null,
            "labels": {
              "app": "validation-webhook"
            }
          },
          "spec": {
            "volumes": [
              {
                "name": "service-certs",
                "secret": {
                  "secretName": "webhook-cert",
                  "defaultMode": 420
                }
              },
              {
                "name": "service-ca",
                "configMap": {
                  "name": "webhook-cert",
                  "defaultMode": 420
                }
              }
            ],
            "containers": [
              {
                "name": "webhooks",
                "image": "quay.io/app-sre/managed-cluster-validating-webhooks@sha256:ed78e4329bdaa7f2b8811126774a2db03d420b4d67d90cc737fc695cc5f46549",
                "command": [
                  "webhooks",
                  "-tlskey",
                  "/service-certs/tls.key",
                  "-tlscert",
                  "/service-certs/tls.crt",
                  "-cacert",
                  "/service-ca/service-ca.crt",
                  "-tls"
                ],
                "ports": [
                  {
                    "containerPort": 5000,
                    "protocol": "TCP"
                  }
                ],
                "resources": {},
                "volumeMounts": [
                  {
                    "name": "service-certs",
                    "readOnly": true,
                    "mountPath": "/service-certs"
                  },
                  {
                    "name": "service-ca",
                    "readOnly": true,
                    "mountPath": "/service-ca"
                  }
                ],
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "imagePullPolicy": "IfNotPresent"
              }
            ],
            "restartPolicy": "Always",
            "terminationGracePeriodSeconds": 30,
            "dnsPolicy": "ClusterFirst",
            "securityContext": {},
            "affinity": {
              "nodeAffinity": {
                "requiredDuringSchedulingIgnoredDuringExecution": {
                  "nodeSelectorTerms": [
                    {
                      "matchExpressions": [
                        {
                          "key": "node-role.kubernetes.io/master",
                          "operator": "In",
                          "values": [
                            ""
                          ]
                        }
                      ]
                    }
                  ]
                }
              }
            },
            "schedulerName": "default-scheduler",
            "tolerations": [
              {
                "key": "node-role.kubernetes.io/master",
                "effect": "NoSchedule"
              },
              {
                "key": "node-role.kubernetes.io/master",
                "effect": "NoExecute"
              }
            ]
          }
        },
        "updateStrategy": {
          "type": "RollingUpdate",
          "rollingUpdate": {
            "maxUnavailable": 1,
            "maxSurge": 0
          }
        },
        "revisionHistoryLimit": 10
      },
      "status": {
        "currentNumberScheduled": 3,
        "numberMisscheduled": 0,
        "desiredNumberScheduled": 3,
        "numberReady": 3,
        "observedGeneration": 1,
        "updatedNumberScheduled": 3,
        "numberAvailable": 3
      }
    }
  ]
} 
